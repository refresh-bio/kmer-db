#pragma once

#include "defs.h"
#include "record.h"
#include "sorting_network.h"
#include "comp_and_swap.h"
#include <cmath>
#include <vector>
#include <functional>

namespace raduls
{
	namespace small_sort
	{
		template<typename T, typename Comp, typename FinishingSorter>
		struct RankOrder
		{
			Comp comp;
			static const uint32 MAX_SUPPORTED_SIZE = 64;
			RankOrder() : funcs(1 + MAX_SUPPORTED_SIZE)
			{
				this->funcs[0] = [](T* A) {};
				this->funcs[1] = [](T* A) {};
				this->funcs[2] = [this](T* A) { sort2(A); };
				this->funcs[3] = [this](T* A) { sort3(A); };
				this->funcs[4] = [this](T* A) { sort4(A); };
				this->funcs[5] = [this](T* A) { sort5(A); };
				this->funcs[6] = [this](T* A) { sort6(A); };
				this->funcs[7] = [this](T* A) { sort7(A); };
				this->funcs[8] = [this](T* A) { sort8(A); };
				this->funcs[9] = [this](T* A) { sort9(A); };
				this->funcs[10] = [this](T* A) { sort10(A);  };
				this->funcs[11] = [this](T* A) { sort11(A); };
				this->funcs[12] = [this](T* A) { sort12(A); };
				this->funcs[13] = [this](T* A) { sort13(A); };
				this->funcs[14] = [this](T* A) { sort14(A); };
				this->funcs[15] = [this](T* A) { sort15(A); };
				this->funcs[16] = [this](T* A) { sort16(A); };
				this->funcs[17] = [this](T* A) { sort17(A); };
				this->funcs[18] = [this](T* A) { sort18(A); };
				this->funcs[19] = [this](T* A) { sort19(A); };
				this->funcs[20] = [this](T* A) { sort20(A); };
				this->funcs[21] = [this](T* A) { sort21(A); };
				this->funcs[22] = [this](T* A) { sort22(A); };
				this->funcs[23] = [this](T* A) { sort23(A); };
				this->funcs[24] = [this](T* A) { sort24(A); };
				this->funcs[25] = [this](T* A) { sort25(A); };
				this->funcs[26] = [this](T* A) { sort26(A); };
				this->funcs[27] = [this](T* A) { sort27(A); };
				this->funcs[28] = [this](T* A) { sort28(A); };
				this->funcs[29] = [this](T* A) { sort29(A); };
				this->funcs[30] = [this](T* A) { sort30(A); };
				this->funcs[31] = [this](T* A) { sort31(A); };
				this->funcs[32] = [this](T* A) { sort32(A); };
			}
			std::vector < std::function<void(T*)>> funcs;

			void operator()(T* arr, uint32 size)
			{
				funcs[size](arr);
			}

			void sort2(T* arr)
			{
				T x0, x1;
				x0 = arr[0];
				x1 = arr[1];
				int o0 = 0, o1 = 0;
				auto r0 = comp(x1, x0);	o0 += r0;
				o1 = 1 - o0;
				arr[o0] = x0;
				arr[o1] = x1;

				FinishingSorter{}(arr, 2);
			}

			void sort3(T* arr)
			{
				T x0, x1, x2;
				x0 = arr[0];
				x1 = arr[1];
				x2 = arr[2];
				int o0 = 0, o1 = 1, o2 = 0;
				auto r0 = comp(x1, x0);	o0 += r0;	o1 -= r0;
				auto r1 = comp(x2, x0);	o0 += r1;
				r0 = comp(x2, x1);	o1 += r0;
				o2 = 3 - o0 - o1;
				arr[o0] = x0;
				arr[o1] = x1;
				arr[o2] = x2;

				FinishingSorter{}(arr, 3);
			}

			void sort4(T* arr)
			{
				T x0, x1, x2, x3;
				x0 = arr[0];
				x1 = arr[1];
				x2 = arr[2];
				x3 = arr[3];
				int o0 = 0, o1 = 1, o2 = 2, o3 = 0;
				auto r0 = comp(x1, x0);	o0 += r0;	o1 -= r0;
				auto r1 = comp(x2, x0);	o0 += r1;	o2 -= r1;
				r0 = comp(x3, x0);	o0 += r0;
				r1 = comp(x2, x1);	o1 += r1;	o2 -= r1;
				r0 = comp(x3, x1);	o1 += r0;
				r1 = comp(x3, x2);	o2 += r1;
				o3 = 6 - o0 - o1 - o2;
				arr[o0] = x0;
				arr[o1] = x1;
				arr[o2] = x2;
				arr[o3] = x3;

				FinishingSorter{}(arr, 4);
			}

			void sort5(T* arr)
			{
				T x0, x1, x2, x3, x4;
				x0 = arr[0];
				x1 = arr[1];
				x2 = arr[2];
				x3 = arr[3];
				x4 = arr[4];
				int o0 = 0, o1 = 1, o2 = 2, o3 = 3, o4 = 0;
				auto r0 = comp(x1, x0);	o0 += r0;	o1 -= r0;
				auto r1 = comp(x2, x0);	o0 += r1;	o2 -= r1;
				r0 = comp(x3, x0);	o0 += r0;	o3 -= r0;
				r1 = comp(x4, x0);	o0 += r1;
				r0 = comp(x2, x1);	o1 += r0;	o2 -= r0;
				r1 = comp(x3, x1);	o1 += r1;	o3 -= r1;
				r0 = comp(x4, x1);	o1 += r0;
				r1 = comp(x3, x2);	o2 += r1;	o3 -= r1;
				r0 = comp(x4, x2);	o2 += r0;
				r1 = comp(x4, x3);	o3 += r1;
				o4 = 10 - o0 - o1 - o2 - o3;
				arr[o0] = x0;
				arr[o1] = x1;
				arr[o2] = x2;
				arr[o3] = x3;
				arr[o4] = x4;

				FinishingSorter{}(arr, 5);
			}

			void sort6(T* arr)
			{
				T x0, x1, x2, x3, x4, x5;
				x0 = arr[0];
				x1 = arr[1];
				x2 = arr[2];
				x3 = arr[3];
				x4 = arr[4];
				x5 = arr[5];
				int o0 = 0, o1 = 1, o2 = 2, o3 = 3, o4 = 4, o5 = 0;
				auto r0 = comp(x1, x0);	o0 += r0;	o1 -= r0;
				auto r1 = comp(x2, x0);	o0 += r1;	o2 -= r1;
				r0 = comp(x3, x0);	o0 += r0;	o3 -= r0;
				r1 = comp(x4, x0);	o0 += r1;	o4 -= r1;
				r0 = comp(x5, x0);	o0 += r0;
				r1 = comp(x2, x1);	o1 += r1;	o2 -= r1;
				r0 = comp(x3, x1);	o1 += r0;	o3 -= r0;
				r1 = comp(x4, x1);	o1 += r1;	o4 -= r1;
				r0 = comp(x5, x1);	o1 += r0;
				r1 = comp(x3, x2);	o2 += r1;	o3 -= r1;
				r0 = comp(x4, x2);	o2 += r0;	o4 -= r0;
				r1 = comp(x5, x2);	o2 += r1;
				r0 = comp(x4, x3);	o3 += r0;	o4 -= r0;
				r1 = comp(x5, x3);	o3 += r1;
				r0 = comp(x5, x4);	o4 += r0;
				o5 = 15 - o0 - o1 - o2 - o3 - o4;
				arr[o0] = x0;
				arr[o1] = x1;
				arr[o2] = x2;
				arr[o3] = x3;
				arr[o4] = x4;
				arr[o5] = x5;

				FinishingSorter{}(arr, 6);
			}

			void sort7(T* arr)
			{
				T x0, x1, x2, x3, x4, x5, x6;
				x0 = arr[0];
				x1 = arr[1];
				x2 = arr[2];
				x3 = arr[3];
				x4 = arr[4];
				x5 = arr[5];
				x6 = arr[6];
				int o0 = 0, o1 = 1, o2 = 2, o3 = 3, o4 = 4, o5 = 5, o6 = 0;
				auto r0 = comp(x1, x0);	o0 += r0;	o1 -= r0;
				auto r1 = comp(x2, x0);	o0 += r1;	o2 -= r1;
				r0 = comp(x3, x0);	o0 += r0;	o3 -= r0;
				r1 = comp(x4, x0);	o0 += r1;	o4 -= r1;
				r0 = comp(x5, x0);	o0 += r0;	o5 -= r0;
				r1 = comp(x6, x0);	o0 += r1;
				r0 = comp(x2, x1);	o1 += r0;	o2 -= r0;
				r1 = comp(x3, x1);	o1 += r1;	o3 -= r1;
				r0 = comp(x4, x1);	o1 += r0;	o4 -= r0;
				r1 = comp(x5, x1);	o1 += r1;	o5 -= r1;
				r0 = comp(x6, x1);	o1 += r0;
				r1 = comp(x3, x2);	o2 += r1;	o3 -= r1;
				r0 = comp(x4, x2);	o2 += r0;	o4 -= r0;
				r1 = comp(x5, x2);	o2 += r1;	o5 -= r1;
				r0 = comp(x6, x2);	o2 += r0;
				r1 = comp(x4, x3);	o3 += r1;	o4 -= r1;
				r0 = comp(x5, x3);	o3 += r0;	o5 -= r0;
				r1 = comp(x6, x3);	o3 += r1;
				r0 = comp(x5, x4);	o4 += r0;	o5 -= r0;
				r1 = comp(x6, x4);	o4 += r1;
				r0 = comp(x6, x5);	o5 += r0;
				o6 = 21 - o0 - o1 - o2 - o3 - o4 - o5;
				arr[o0] = x0;
				arr[o1] = x1;
				arr[o2] = x2;
				arr[o3] = x3;
				arr[o4] = x4;
				arr[o5] = x5;
				arr[o6] = x6;

				FinishingSorter{}(arr, 7);
			}

			void sort8(T* arr)
			{
				T x0, x1, x2, x3, x4, x5, x6, x7;
				x0 = arr[0];
				x1 = arr[1];
				x2 = arr[2];
				x3 = arr[3];
				x4 = arr[4];
				x5 = arr[5];
				x6 = arr[6];
				x7 = arr[7];
				int o0 = 0, o1 = 1, o2 = 2, o3 = 3, o4 = 4, o5 = 5, o6 = 6, o7 = 0;
				auto r0 = comp(x1, x0);	o0 += r0;	o1 -= r0;
				auto r1 = comp(x2, x0);	o0 += r1;	o2 -= r1;
				r0 = comp(x3, x0);	o0 += r0;	o3 -= r0;
				r1 = comp(x4, x0);	o0 += r1;	o4 -= r1;
				r0 = comp(x5, x0);	o0 += r0;	o5 -= r0;
				r1 = comp(x6, x0);	o0 += r1;	o6 -= r1;
				r0 = comp(x7, x0);	o0 += r0;
				r1 = comp(x2, x1);	o1 += r1;	o2 -= r1;
				r0 = comp(x3, x1);	o1 += r0;	o3 -= r0;
				r1 = comp(x4, x1);	o1 += r1;	o4 -= r1;
				r0 = comp(x5, x1);	o1 += r0;	o5 -= r0;
				r1 = comp(x6, x1);	o1 += r1;	o6 -= r1;
				r0 = comp(x7, x1);	o1 += r0;
				r1 = comp(x3, x2);	o2 += r1;	o3 -= r1;
				r0 = comp(x4, x2);	o2 += r0;	o4 -= r0;
				r1 = comp(x5, x2);	o2 += r1;	o5 -= r1;
				r0 = comp(x6, x2);	o2 += r0;	o6 -= r0;
				r1 = comp(x7, x2);	o2 += r1;
				r0 = comp(x4, x3);	o3 += r0;	o4 -= r0;
				r1 = comp(x5, x3);	o3 += r1;	o5 -= r1;
				r0 = comp(x6, x3);	o3 += r0;	o6 -= r0;
				r1 = comp(x7, x3);	o3 += r1;
				r0 = comp(x5, x4);	o4 += r0;	o5 -= r0;
				r1 = comp(x6, x4);	o4 += r1;	o6 -= r1;
				r0 = comp(x7, x4);	o4 += r0;
				r1 = comp(x6, x5);	o5 += r1;	o6 -= r1;
				r0 = comp(x7, x5);	o5 += r0;
				r1 = comp(x7, x6);	o6 += r1;
				o7 = 28 - o0 - o1 - o2 - o3 - o4 - o5 - o6;
				arr[o0] = x0;
				arr[o1] = x1;
				arr[o2] = x2;
				arr[o3] = x3;
				arr[o4] = x4;
				arr[o5] = x5;
				arr[o6] = x6;
				arr[o7] = x7;

				FinishingSorter{}(arr, 8);
			}

			void sort9(T* arr)
			{
				T x0, x1, x2, x3, x4, x5, x6, x7, x8;
				x0 = arr[0];
				x1 = arr[1];
				x2 = arr[2];
				x3 = arr[3];
				x4 = arr[4];
				x5 = arr[5];
				x6 = arr[6];
				x7 = arr[7];
				x8 = arr[8];
				int o0 = 0, o1 = 1, o2 = 2, o3 = 3, o4 = 4, o5 = 5, o6 = 6, o7 = 7, o8 = 0;
				auto r0 = comp(x1, x0);	o0 += r0;	o1 -= r0;
				auto r1 = comp(x2, x0);	o0 += r1;	o2 -= r1;
				r0 = comp(x3, x0);	o0 += r0;	o3 -= r0;
				r1 = comp(x4, x0);	o0 += r1;	o4 -= r1;
				r0 = comp(x5, x0);	o0 += r0;	o5 -= r0;
				r1 = comp(x6, x0);	o0 += r1;	o6 -= r1;
				r0 = comp(x7, x0);	o0 += r0;	o7 -= r0;
				r1 = comp(x8, x0);	o0 += r1;
				r0 = comp(x2, x1);	o1 += r0;	o2 -= r0;
				r1 = comp(x3, x1);	o1 += r1;	o3 -= r1;
				r0 = comp(x4, x1);	o1 += r0;	o4 -= r0;
				r1 = comp(x5, x1);	o1 += r1;	o5 -= r1;
				r0 = comp(x6, x1);	o1 += r0;	o6 -= r0;
				r1 = comp(x7, x1);	o1 += r1;	o7 -= r1;
				r0 = comp(x8, x1);	o1 += r0;
				r1 = comp(x3, x2);	o2 += r1;	o3 -= r1;
				r0 = comp(x4, x2);	o2 += r0;	o4 -= r0;
				r1 = comp(x5, x2);	o2 += r1;	o5 -= r1;
				r0 = comp(x6, x2);	o2 += r0;	o6 -= r0;
				r1 = comp(x7, x2);	o2 += r1;	o7 -= r1;
				r0 = comp(x8, x2);	o2 += r0;
				r1 = comp(x4, x3);	o3 += r1;	o4 -= r1;
				r0 = comp(x5, x3);	o3 += r0;	o5 -= r0;
				r1 = comp(x6, x3);	o3 += r1;	o6 -= r1;
				r0 = comp(x7, x3);	o3 += r0;	o7 -= r0;
				r1 = comp(x8, x3);	o3 += r1;
				r0 = comp(x5, x4);	o4 += r0;	o5 -= r0;
				r1 = comp(x6, x4);	o4 += r1;	o6 -= r1;
				r0 = comp(x7, x4);	o4 += r0;	o7 -= r0;
				r1 = comp(x8, x4);	o4 += r1;
				r0 = comp(x6, x5);	o5 += r0;	o6 -= r0;
				r1 = comp(x7, x5);	o5 += r1;	o7 -= r1;
				r0 = comp(x8, x5);	o5 += r0;
				r1 = comp(x7, x6);	o6 += r1;	o7 -= r1;
				r0 = comp(x8, x6);	o6 += r0;
				r1 = comp(x8, x7);	o7 += r1;
				o8 = 36 - o0 - o1 - o2 - o3 - o4 - o5 - o6 - o7;
				arr[o0] = x0;
				arr[o1] = x1;
				arr[o2] = x2;
				arr[o3] = x3;
				arr[o4] = x4;
				arr[o5] = x5;
				arr[o6] = x6;
				arr[o7] = x7;
				arr[o8] = x8;

				FinishingSorter{}(arr, 9);
			}

			void sort10(T* arr)
			{
				T x0, x1, x2, x3, x4, x5, x6, x7, x8, x9;
				x0 = arr[0];
				x1 = arr[1];
				x2 = arr[2];
				x3 = arr[3];
				x4 = arr[4];
				x5 = arr[5];
				x6 = arr[6];
				x7 = arr[7];
				x8 = arr[8];
				x9 = arr[9];
				int o0 = 0, o1 = 1, o2 = 2, o3 = 3, o4 = 4, o5 = 5, o6 = 6, o7 = 7, o8 = 8, o9 = 0;
				auto r0 = comp(x1, x0);	o0 += r0;	o1 -= r0;
				auto r1 = comp(x2, x0);	o0 += r1;	o2 -= r1;
				r0 = comp(x3, x0);	o0 += r0;	o3 -= r0;
				r1 = comp(x4, x0);	o0 += r1;	o4 -= r1;
				r0 = comp(x5, x0);	o0 += r0;	o5 -= r0;
				r1 = comp(x6, x0);	o0 += r1;	o6 -= r1;
				r0 = comp(x7, x0);	o0 += r0;	o7 -= r0;
				r1 = comp(x8, x0);	o0 += r1;	o8 -= r1;
				r0 = comp(x9, x0);	o0 += r0;
				r1 = comp(x2, x1);	o1 += r1;	o2 -= r1;
				r0 = comp(x3, x1);	o1 += r0;	o3 -= r0;
				r1 = comp(x4, x1);	o1 += r1;	o4 -= r1;
				r0 = comp(x5, x1);	o1 += r0;	o5 -= r0;
				r1 = comp(x6, x1);	o1 += r1;	o6 -= r1;
				r0 = comp(x7, x1);	o1 += r0;	o7 -= r0;
				r1 = comp(x8, x1);	o1 += r1;	o8 -= r1;
				r0 = comp(x9, x1);	o1 += r0;
				r1 = comp(x3, x2);	o2 += r1;	o3 -= r1;
				r0 = comp(x4, x2);	o2 += r0;	o4 -= r0;
				r1 = comp(x5, x2);	o2 += r1;	o5 -= r1;
				r0 = comp(x6, x2);	o2 += r0;	o6 -= r0;
				r1 = comp(x7, x2);	o2 += r1;	o7 -= r1;
				r0 = comp(x8, x2);	o2 += r0;	o8 -= r0;
				r1 = comp(x9, x2);	o2 += r1;
				r0 = comp(x4, x3);	o3 += r0;	o4 -= r0;
				r1 = comp(x5, x3);	o3 += r1;	o5 -= r1;
				r0 = comp(x6, x3);	o3 += r0;	o6 -= r0;
				r1 = comp(x7, x3);	o3 += r1;	o7 -= r1;
				r0 = comp(x8, x3);	o3 += r0;	o8 -= r0;
				r1 = comp(x9, x3);	o3 += r1;
				r0 = comp(x5, x4);	o4 += r0;	o5 -= r0;
				r1 = comp(x6, x4);	o4 += r1;	o6 -= r1;
				r0 = comp(x7, x4);	o4 += r0;	o7 -= r0;
				r1 = comp(x8, x4);	o4 += r1;	o8 -= r1;
				r0 = comp(x9, x4);	o4 += r0;
				r1 = comp(x6, x5);	o5 += r1;	o6 -= r1;
				r0 = comp(x7, x5);	o5 += r0;	o7 -= r0;
				r1 = comp(x8, x5);	o5 += r1;	o8 -= r1;
				r0 = comp(x9, x5);	o5 += r0;
				r1 = comp(x7, x6);	o6 += r1;	o7 -= r1;
				r0 = comp(x8, x6);	o6 += r0;	o8 -= r0;
				r1 = comp(x9, x6);	o6 += r1;
				r0 = comp(x8, x7);	o7 += r0;	o8 -= r0;
				r1 = comp(x9, x7);	o7 += r1;
				r0 = comp(x9, x8);	o8 += r0;
				o9 = 45 - o0 - o1 - o2 - o3 - o4 - o5 - o6 - o7 - o8;
				arr[o0] = x0;
				arr[o1] = x1;
				arr[o2] = x2;
				arr[o3] = x3;
				arr[o4] = x4;
				arr[o5] = x5;
				arr[o6] = x6;
				arr[o7] = x7;
				arr[o8] = x8;
				arr[o9] = x9;

				FinishingSorter{}(arr, 10);
			}

			void sort11(T* arr)
			{
				T x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10;
				x0 = arr[0];
				x1 = arr[1];
				x2 = arr[2];
				x3 = arr[3];
				x4 = arr[4];
				x5 = arr[5];
				x6 = arr[6];
				x7 = arr[7];
				x8 = arr[8];
				x9 = arr[9];
				x10 = arr[10];
				int o0 = 0, o1 = 1, o2 = 2, o3 = 3, o4 = 4, o5 = 5, o6 = 6, o7 = 7, o8 = 8, o9 = 9, o10 = 0;
				auto r0 = comp(x1, x0);	o0 += r0;	o1 -= r0;
				auto r1 = comp(x2, x0);	o0 += r1;	o2 -= r1;
				r0 = comp(x3, x0);	o0 += r0;	o3 -= r0;
				r1 = comp(x4, x0);	o0 += r1;	o4 -= r1;
				r0 = comp(x5, x0);	o0 += r0;	o5 -= r0;
				r1 = comp(x6, x0);	o0 += r1;	o6 -= r1;
				r0 = comp(x7, x0);	o0 += r0;	o7 -= r0;
				r1 = comp(x8, x0);	o0 += r1;	o8 -= r1;
				r0 = comp(x9, x0);	o0 += r0;	o9 -= r0;
				r1 = comp(x10, x0);	o0 += r1;
				r0 = comp(x2, x1);	o1 += r0;	o2 -= r0;
				r1 = comp(x3, x1);	o1 += r1;	o3 -= r1;
				r0 = comp(x4, x1);	o1 += r0;	o4 -= r0;
				r1 = comp(x5, x1);	o1 += r1;	o5 -= r1;
				r0 = comp(x6, x1);	o1 += r0;	o6 -= r0;
				r1 = comp(x7, x1);	o1 += r1;	o7 -= r1;
				r0 = comp(x8, x1);	o1 += r0;	o8 -= r0;
				r1 = comp(x9, x1);	o1 += r1;	o9 -= r1;
				r0 = comp(x10, x1);	o1 += r0;
				r1 = comp(x3, x2);	o2 += r1;	o3 -= r1;
				r0 = comp(x4, x2);	o2 += r0;	o4 -= r0;
				r1 = comp(x5, x2);	o2 += r1;	o5 -= r1;
				r0 = comp(x6, x2);	o2 += r0;	o6 -= r0;
				r1 = comp(x7, x2);	o2 += r1;	o7 -= r1;
				r0 = comp(x8, x2);	o2 += r0;	o8 -= r0;
				r1 = comp(x9, x2);	o2 += r1;	o9 -= r1;
				r0 = comp(x10, x2);	o2 += r0;
				r1 = comp(x4, x3);	o3 += r1;	o4 -= r1;
				r0 = comp(x5, x3);	o3 += r0;	o5 -= r0;
				r1 = comp(x6, x3);	o3 += r1;	o6 -= r1;
				r0 = comp(x7, x3);	o3 += r0;	o7 -= r0;
				r1 = comp(x8, x3);	o3 += r1;	o8 -= r1;
				r0 = comp(x9, x3);	o3 += r0;	o9 -= r0;
				r1 = comp(x10, x3);	o3 += r1;
				r0 = comp(x5, x4);	o4 += r0;	o5 -= r0;
				r1 = comp(x6, x4);	o4 += r1;	o6 -= r1;
				r0 = comp(x7, x4);	o4 += r0;	o7 -= r0;
				r1 = comp(x8, x4);	o4 += r1;	o8 -= r1;
				r0 = comp(x9, x4);	o4 += r0;	o9 -= r0;
				r1 = comp(x10, x4);	o4 += r1;
				r0 = comp(x6, x5);	o5 += r0;	o6 -= r0;
				r1 = comp(x7, x5);	o5 += r1;	o7 -= r1;
				r0 = comp(x8, x5);	o5 += r0;	o8 -= r0;
				r1 = comp(x9, x5);	o5 += r1;	o9 -= r1;
				r0 = comp(x10, x5);	o5 += r0;
				r1 = comp(x7, x6);	o6 += r1;	o7 -= r1;
				r0 = comp(x8, x6);	o6 += r0;	o8 -= r0;
				r1 = comp(x9, x6);	o6 += r1;	o9 -= r1;
				r0 = comp(x10, x6);	o6 += r0;
				r1 = comp(x8, x7);	o7 += r1;	o8 -= r1;
				r0 = comp(x9, x7);	o7 += r0;	o9 -= r0;
				r1 = comp(x10, x7);	o7 += r1;
				r0 = comp(x9, x8);	o8 += r0;	o9 -= r0;
				r1 = comp(x10, x8);	o8 += r1;
				r0 = comp(x10, x9);	o9 += r0;
				o10 = 55 - o0 - o1 - o2 - o3 - o4 - o5 - o6 - o7 - o8 - o9;
				arr[o0] = x0;
				arr[o1] = x1;
				arr[o2] = x2;
				arr[o3] = x3;
				arr[o4] = x4;
				arr[o5] = x5;
				arr[o6] = x6;
				arr[o7] = x7;
				arr[o8] = x8;
				arr[o9] = x9;
				arr[o10] = x10;

				FinishingSorter{}(arr, 11);
			}

			void sort12(T* arr)
			{
				T x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11;
				x0 = arr[0];
				x1 = arr[1];
				x2 = arr[2];
				x3 = arr[3];
				x4 = arr[4];
				x5 = arr[5];
				x6 = arr[6];
				x7 = arr[7];
				x8 = arr[8];
				x9 = arr[9];
				x10 = arr[10];
				x11 = arr[11];
				int o0 = 0, o1 = 1, o2 = 2, o3 = 3, o4 = 4, o5 = 5, o6 = 6, o7 = 7, o8 = 8, o9 = 9, o10 = 10, o11 = 0;
				auto r0 = comp(x1, x0);	o0 += r0;	o1 -= r0;
				auto r1 = comp(x2, x0);	o0 += r1;	o2 -= r1;
				r0 = comp(x3, x0);	o0 += r0;	o3 -= r0;
				r1 = comp(x4, x0);	o0 += r1;	o4 -= r1;
				r0 = comp(x5, x0);	o0 += r0;	o5 -= r0;
				r1 = comp(x6, x0);	o0 += r1;	o6 -= r1;
				r0 = comp(x7, x0);	o0 += r0;	o7 -= r0;
				r1 = comp(x8, x0);	o0 += r1;	o8 -= r1;
				r0 = comp(x9, x0);	o0 += r0;	o9 -= r0;
				r1 = comp(x10, x0);	o0 += r1;	o10 -= r1;
				r0 = comp(x11, x0);	o0 += r0;
				r1 = comp(x2, x1);	o1 += r1;	o2 -= r1;
				r0 = comp(x3, x1);	o1 += r0;	o3 -= r0;
				r1 = comp(x4, x1);	o1 += r1;	o4 -= r1;
				r0 = comp(x5, x1);	o1 += r0;	o5 -= r0;
				r1 = comp(x6, x1);	o1 += r1;	o6 -= r1;
				r0 = comp(x7, x1);	o1 += r0;	o7 -= r0;
				r1 = comp(x8, x1);	o1 += r1;	o8 -= r1;
				r0 = comp(x9, x1);	o1 += r0;	o9 -= r0;
				r1 = comp(x10, x1);	o1 += r1;	o10 -= r1;
				r0 = comp(x11, x1);	o1 += r0;
				r1 = comp(x3, x2);	o2 += r1;	o3 -= r1;
				r0 = comp(x4, x2);	o2 += r0;	o4 -= r0;
				r1 = comp(x5, x2);	o2 += r1;	o5 -= r1;
				r0 = comp(x6, x2);	o2 += r0;	o6 -= r0;
				r1 = comp(x7, x2);	o2 += r1;	o7 -= r1;
				r0 = comp(x8, x2);	o2 += r0;	o8 -= r0;
				r1 = comp(x9, x2);	o2 += r1;	o9 -= r1;
				r0 = comp(x10, x2);	o2 += r0;	o10 -= r0;
				r1 = comp(x11, x2);	o2 += r1;
				r0 = comp(x4, x3);	o3 += r0;	o4 -= r0;
				r1 = comp(x5, x3);	o3 += r1;	o5 -= r1;
				r0 = comp(x6, x3);	o3 += r0;	o6 -= r0;
				r1 = comp(x7, x3);	o3 += r1;	o7 -= r1;
				r0 = comp(x8, x3);	o3 += r0;	o8 -= r0;
				r1 = comp(x9, x3);	o3 += r1;	o9 -= r1;
				r0 = comp(x10, x3);	o3 += r0;	o10 -= r0;
				r1 = comp(x11, x3);	o3 += r1;
				r0 = comp(x5, x4);	o4 += r0;	o5 -= r0;
				r1 = comp(x6, x4);	o4 += r1;	o6 -= r1;
				r0 = comp(x7, x4);	o4 += r0;	o7 -= r0;
				r1 = comp(x8, x4);	o4 += r1;	o8 -= r1;
				r0 = comp(x9, x4);	o4 += r0;	o9 -= r0;
				r1 = comp(x10, x4);	o4 += r1;	o10 -= r1;
				r0 = comp(x11, x4);	o4 += r0;
				r1 = comp(x6, x5);	o5 += r1;	o6 -= r1;
				r0 = comp(x7, x5);	o5 += r0;	o7 -= r0;
				r1 = comp(x8, x5);	o5 += r1;	o8 -= r1;
				r0 = comp(x9, x5);	o5 += r0;	o9 -= r0;
				r1 = comp(x10, x5);	o5 += r1;	o10 -= r1;
				r0 = comp(x11, x5);	o5 += r0;
				r1 = comp(x7, x6);	o6 += r1;	o7 -= r1;
				r0 = comp(x8, x6);	o6 += r0;	o8 -= r0;
				r1 = comp(x9, x6);	o6 += r1;	o9 -= r1;
				r0 = comp(x10, x6);	o6 += r0;	o10 -= r0;
				r1 = comp(x11, x6);	o6 += r1;
				r0 = comp(x8, x7);	o7 += r0;	o8 -= r0;
				r1 = comp(x9, x7);	o7 += r1;	o9 -= r1;
				r0 = comp(x10, x7);	o7 += r0;	o10 -= r0;
				r1 = comp(x11, x7);	o7 += r1;
				r0 = comp(x9, x8);	o8 += r0;	o9 -= r0;
				r1 = comp(x10, x8);	o8 += r1;	o10 -= r1;
				r0 = comp(x11, x8);	o8 += r0;
				r1 = comp(x10, x9);	o9 += r1;	o10 -= r1;
				r0 = comp(x11, x9);	o9 += r0;
				r1 = comp(x11, x10);	o10 += r1;
				o11 = 66 - o0 - o1 - o2 - o3 - o4 - o5 - o6 - o7 - o8 - o9 - o10;
				arr[o0] = x0;
				arr[o1] = x1;
				arr[o2] = x2;
				arr[o3] = x3;
				arr[o4] = x4;
				arr[o5] = x5;
				arr[o6] = x6;
				arr[o7] = x7;
				arr[o8] = x8;
				arr[o9] = x9;
				arr[o10] = x10;
				arr[o11] = x11;

				FinishingSorter{}(arr, 12);
			}

			void sort13(T* arr)
			{
				T x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12;
				x0 = arr[0];
				x1 = arr[1];
				x2 = arr[2];
				x3 = arr[3];
				x4 = arr[4];
				x5 = arr[5];
				x6 = arr[6];
				x7 = arr[7];
				x8 = arr[8];
				x9 = arr[9];
				x10 = arr[10];
				x11 = arr[11];
				x12 = arr[12];
				int o0 = 0, o1 = 1, o2 = 2, o3 = 3, o4 = 4, o5 = 5, o6 = 6, o7 = 7, o8 = 8, o9 = 9, o10 = 10, o11 = 11, o12 = 0;
				auto r0 = comp(x1, x0);	o0 += r0;	o1 -= r0;
				auto r1 = comp(x2, x0);	o0 += r1;	o2 -= r1;
				r0 = comp(x3, x0);	o0 += r0;	o3 -= r0;
				r1 = comp(x4, x0);	o0 += r1;	o4 -= r1;
				r0 = comp(x5, x0);	o0 += r0;	o5 -= r0;
				r1 = comp(x6, x0);	o0 += r1;	o6 -= r1;
				r0 = comp(x7, x0);	o0 += r0;	o7 -= r0;
				r1 = comp(x8, x0);	o0 += r1;	o8 -= r1;
				r0 = comp(x9, x0);	o0 += r0;	o9 -= r0;
				r1 = comp(x10, x0);	o0 += r1;	o10 -= r1;
				r0 = comp(x11, x0);	o0 += r0;	o11 -= r0;
				r1 = comp(x12, x0);	o0 += r1;
				r0 = comp(x2, x1);	o1 += r0;	o2 -= r0;
				r1 = comp(x3, x1);	o1 += r1;	o3 -= r1;
				r0 = comp(x4, x1);	o1 += r0;	o4 -= r0;
				r1 = comp(x5, x1);	o1 += r1;	o5 -= r1;
				r0 = comp(x6, x1);	o1 += r0;	o6 -= r0;
				r1 = comp(x7, x1);	o1 += r1;	o7 -= r1;
				r0 = comp(x8, x1);	o1 += r0;	o8 -= r0;
				r1 = comp(x9, x1);	o1 += r1;	o9 -= r1;
				r0 = comp(x10, x1);	o1 += r0;	o10 -= r0;
				r1 = comp(x11, x1);	o1 += r1;	o11 -= r1;
				r0 = comp(x12, x1);	o1 += r0;
				r1 = comp(x3, x2);	o2 += r1;	o3 -= r1;
				r0 = comp(x4, x2);	o2 += r0;	o4 -= r0;
				r1 = comp(x5, x2);	o2 += r1;	o5 -= r1;
				r0 = comp(x6, x2);	o2 += r0;	o6 -= r0;
				r1 = comp(x7, x2);	o2 += r1;	o7 -= r1;
				r0 = comp(x8, x2);	o2 += r0;	o8 -= r0;
				r1 = comp(x9, x2);	o2 += r1;	o9 -= r1;
				r0 = comp(x10, x2);	o2 += r0;	o10 -= r0;
				r1 = comp(x11, x2);	o2 += r1;	o11 -= r1;
				r0 = comp(x12, x2);	o2 += r0;
				r1 = comp(x4, x3);	o3 += r1;	o4 -= r1;
				r0 = comp(x5, x3);	o3 += r0;	o5 -= r0;
				r1 = comp(x6, x3);	o3 += r1;	o6 -= r1;
				r0 = comp(x7, x3);	o3 += r0;	o7 -= r0;
				r1 = comp(x8, x3);	o3 += r1;	o8 -= r1;
				r0 = comp(x9, x3);	o3 += r0;	o9 -= r0;
				r1 = comp(x10, x3);	o3 += r1;	o10 -= r1;
				r0 = comp(x11, x3);	o3 += r0;	o11 -= r0;
				r1 = comp(x12, x3);	o3 += r1;
				r0 = comp(x5, x4);	o4 += r0;	o5 -= r0;
				r1 = comp(x6, x4);	o4 += r1;	o6 -= r1;
				r0 = comp(x7, x4);	o4 += r0;	o7 -= r0;
				r1 = comp(x8, x4);	o4 += r1;	o8 -= r1;
				r0 = comp(x9, x4);	o4 += r0;	o9 -= r0;
				r1 = comp(x10, x4);	o4 += r1;	o10 -= r1;
				r0 = comp(x11, x4);	o4 += r0;	o11 -= r0;
				r1 = comp(x12, x4);	o4 += r1;
				r0 = comp(x6, x5);	o5 += r0;	o6 -= r0;
				r1 = comp(x7, x5);	o5 += r1;	o7 -= r1;
				r0 = comp(x8, x5);	o5 += r0;	o8 -= r0;
				r1 = comp(x9, x5);	o5 += r1;	o9 -= r1;
				r0 = comp(x10, x5);	o5 += r0;	o10 -= r0;
				r1 = comp(x11, x5);	o5 += r1;	o11 -= r1;
				r0 = comp(x12, x5);	o5 += r0;
				r1 = comp(x7, x6);	o6 += r1;	o7 -= r1;
				r0 = comp(x8, x6);	o6 += r0;	o8 -= r0;
				r1 = comp(x9, x6);	o6 += r1;	o9 -= r1;
				r0 = comp(x10, x6);	o6 += r0;	o10 -= r0;
				r1 = comp(x11, x6);	o6 += r1;	o11 -= r1;
				r0 = comp(x12, x6);	o6 += r0;
				r1 = comp(x8, x7);	o7 += r1;	o8 -= r1;
				r0 = comp(x9, x7);	o7 += r0;	o9 -= r0;
				r1 = comp(x10, x7);	o7 += r1;	o10 -= r1;
				r0 = comp(x11, x7);	o7 += r0;	o11 -= r0;
				r1 = comp(x12, x7);	o7 += r1;
				r0 = comp(x9, x8);	o8 += r0;	o9 -= r0;
				r1 = comp(x10, x8);	o8 += r1;	o10 -= r1;
				r0 = comp(x11, x8);	o8 += r0;	o11 -= r0;
				r1 = comp(x12, x8);	o8 += r1;
				r0 = comp(x10, x9);	o9 += r0;	o10 -= r0;
				r1 = comp(x11, x9);	o9 += r1;	o11 -= r1;
				r0 = comp(x12, x9);	o9 += r0;
				r1 = comp(x11, x10);	o10 += r1;	o11 -= r1;
				r0 = comp(x12, x10);	o10 += r0;
				r1 = comp(x12, x11);	o11 += r1;
				o12 = 78 - o0 - o1 - o2 - o3 - o4 - o5 - o6 - o7 - o8 - o9 - o10 - o11;
				arr[o0] = x0;
				arr[o1] = x1;
				arr[o2] = x2;
				arr[o3] = x3;
				arr[o4] = x4;
				arr[o5] = x5;
				arr[o6] = x6;
				arr[o7] = x7;
				arr[o8] = x8;
				arr[o9] = x9;
				arr[o10] = x10;
				arr[o11] = x11;
				arr[o12] = x12;

				FinishingSorter{}(arr, 13);
			}

			void sort14(T* arr)
			{
				T x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13;
				x0 = arr[0];
				x1 = arr[1];
				x2 = arr[2];
				x3 = arr[3];
				x4 = arr[4];
				x5 = arr[5];
				x6 = arr[6];
				x7 = arr[7];
				x8 = arr[8];
				x9 = arr[9];
				x10 = arr[10];
				x11 = arr[11];
				x12 = arr[12];
				x13 = arr[13];
				int o0 = 0, o1 = 1, o2 = 2, o3 = 3, o4 = 4, o5 = 5, o6 = 6, o7 = 7, o8 = 8, o9 = 9, o10 = 10, o11 = 11, o12 = 12, o13 = 0;
				auto r0 = comp(x1, x0);	o0 += r0;	o1 -= r0;
				auto r1 = comp(x2, x0);	o0 += r1;	o2 -= r1;
				r0 = comp(x3, x0);	o0 += r0;	o3 -= r0;
				r1 = comp(x4, x0);	o0 += r1;	o4 -= r1;
				r0 = comp(x5, x0);	o0 += r0;	o5 -= r0;
				r1 = comp(x6, x0);	o0 += r1;	o6 -= r1;
				r0 = comp(x7, x0);	o0 += r0;	o7 -= r0;
				r1 = comp(x8, x0);	o0 += r1;	o8 -= r1;
				r0 = comp(x9, x0);	o0 += r0;	o9 -= r0;
				r1 = comp(x10, x0);	o0 += r1;	o10 -= r1;
				r0 = comp(x11, x0);	o0 += r0;	o11 -= r0;
				r1 = comp(x12, x0);	o0 += r1;	o12 -= r1;
				r0 = comp(x13, x0);	o0 += r0;
				r1 = comp(x2, x1);	o1 += r1;	o2 -= r1;
				r0 = comp(x3, x1);	o1 += r0;	o3 -= r0;
				r1 = comp(x4, x1);	o1 += r1;	o4 -= r1;
				r0 = comp(x5, x1);	o1 += r0;	o5 -= r0;
				r1 = comp(x6, x1);	o1 += r1;	o6 -= r1;
				r0 = comp(x7, x1);	o1 += r0;	o7 -= r0;
				r1 = comp(x8, x1);	o1 += r1;	o8 -= r1;
				r0 = comp(x9, x1);	o1 += r0;	o9 -= r0;
				r1 = comp(x10, x1);	o1 += r1;	o10 -= r1;
				r0 = comp(x11, x1);	o1 += r0;	o11 -= r0;
				r1 = comp(x12, x1);	o1 += r1;	o12 -= r1;
				r0 = comp(x13, x1);	o1 += r0;
				r1 = comp(x3, x2);	o2 += r1;	o3 -= r1;
				r0 = comp(x4, x2);	o2 += r0;	o4 -= r0;
				r1 = comp(x5, x2);	o2 += r1;	o5 -= r1;
				r0 = comp(x6, x2);	o2 += r0;	o6 -= r0;
				r1 = comp(x7, x2);	o2 += r1;	o7 -= r1;
				r0 = comp(x8, x2);	o2 += r0;	o8 -= r0;
				r1 = comp(x9, x2);	o2 += r1;	o9 -= r1;
				r0 = comp(x10, x2);	o2 += r0;	o10 -= r0;
				r1 = comp(x11, x2);	o2 += r1;	o11 -= r1;
				r0 = comp(x12, x2);	o2 += r0;	o12 -= r0;
				r1 = comp(x13, x2);	o2 += r1;
				r0 = comp(x4, x3);	o3 += r0;	o4 -= r0;
				r1 = comp(x5, x3);	o3 += r1;	o5 -= r1;
				r0 = comp(x6, x3);	o3 += r0;	o6 -= r0;
				r1 = comp(x7, x3);	o3 += r1;	o7 -= r1;
				r0 = comp(x8, x3);	o3 += r0;	o8 -= r0;
				r1 = comp(x9, x3);	o3 += r1;	o9 -= r1;
				r0 = comp(x10, x3);	o3 += r0;	o10 -= r0;
				r1 = comp(x11, x3);	o3 += r1;	o11 -= r1;
				r0 = comp(x12, x3);	o3 += r0;	o12 -= r0;
				r1 = comp(x13, x3);	o3 += r1;
				r0 = comp(x5, x4);	o4 += r0;	o5 -= r0;
				r1 = comp(x6, x4);	o4 += r1;	o6 -= r1;
				r0 = comp(x7, x4);	o4 += r0;	o7 -= r0;
				r1 = comp(x8, x4);	o4 += r1;	o8 -= r1;
				r0 = comp(x9, x4);	o4 += r0;	o9 -= r0;
				r1 = comp(x10, x4);	o4 += r1;	o10 -= r1;
				r0 = comp(x11, x4);	o4 += r0;	o11 -= r0;
				r1 = comp(x12, x4);	o4 += r1;	o12 -= r1;
				r0 = comp(x13, x4);	o4 += r0;
				r1 = comp(x6, x5);	o5 += r1;	o6 -= r1;
				r0 = comp(x7, x5);	o5 += r0;	o7 -= r0;
				r1 = comp(x8, x5);	o5 += r1;	o8 -= r1;
				r0 = comp(x9, x5);	o5 += r0;	o9 -= r0;
				r1 = comp(x10, x5);	o5 += r1;	o10 -= r1;
				r0 = comp(x11, x5);	o5 += r0;	o11 -= r0;
				r1 = comp(x12, x5);	o5 += r1;	o12 -= r1;
				r0 = comp(x13, x5);	o5 += r0;
				r1 = comp(x7, x6);	o6 += r1;	o7 -= r1;
				r0 = comp(x8, x6);	o6 += r0;	o8 -= r0;
				r1 = comp(x9, x6);	o6 += r1;	o9 -= r1;
				r0 = comp(x10, x6);	o6 += r0;	o10 -= r0;
				r1 = comp(x11, x6);	o6 += r1;	o11 -= r1;
				r0 = comp(x12, x6);	o6 += r0;	o12 -= r0;
				r1 = comp(x13, x6);	o6 += r1;
				r0 = comp(x8, x7);	o7 += r0;	o8 -= r0;
				r1 = comp(x9, x7);	o7 += r1;	o9 -= r1;
				r0 = comp(x10, x7);	o7 += r0;	o10 -= r0;
				r1 = comp(x11, x7);	o7 += r1;	o11 -= r1;
				r0 = comp(x12, x7);	o7 += r0;	o12 -= r0;
				r1 = comp(x13, x7);	o7 += r1;
				r0 = comp(x9, x8);	o8 += r0;	o9 -= r0;
				r1 = comp(x10, x8);	o8 += r1;	o10 -= r1;
				r0 = comp(x11, x8);	o8 += r0;	o11 -= r0;
				r1 = comp(x12, x8);	o8 += r1;	o12 -= r1;
				r0 = comp(x13, x8);	o8 += r0;
				r1 = comp(x10, x9);	o9 += r1;	o10 -= r1;
				r0 = comp(x11, x9);	o9 += r0;	o11 -= r0;
				r1 = comp(x12, x9);	o9 += r1;	o12 -= r1;
				r0 = comp(x13, x9);	o9 += r0;
				r1 = comp(x11, x10);	o10 += r1;	o11 -= r1;
				r0 = comp(x12, x10);	o10 += r0;	o12 -= r0;
				r1 = comp(x13, x10);	o10 += r1;
				r0 = comp(x12, x11);	o11 += r0;	o12 -= r0;
				r1 = comp(x13, x11);	o11 += r1;
				r0 = comp(x13, x12);	o12 += r0;
				o13 = 91 - o0 - o1 - o2 - o3 - o4 - o5 - o6 - o7 - o8 - o9 - o10 - o11 - o12;
				arr[o0] = x0;
				arr[o1] = x1;
				arr[o2] = x2;
				arr[o3] = x3;
				arr[o4] = x4;
				arr[o5] = x5;
				arr[o6] = x6;
				arr[o7] = x7;
				arr[o8] = x8;
				arr[o9] = x9;
				arr[o10] = x10;
				arr[o11] = x11;
				arr[o12] = x12;
				arr[o13] = x13;

				FinishingSorter{}(arr, 14);
			}

			void sort15(T* arr)
			{
				T x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14;
				x0 = arr[0];
				x1 = arr[1];
				x2 = arr[2];
				x3 = arr[3];
				x4 = arr[4];
				x5 = arr[5];
				x6 = arr[6];
				x7 = arr[7];
				x8 = arr[8];
				x9 = arr[9];
				x10 = arr[10];
				x11 = arr[11];
				x12 = arr[12];
				x13 = arr[13];
				x14 = arr[14];
				int o0 = 0, o1 = 1, o2 = 2, o3 = 3, o4 = 4, o5 = 5, o6 = 6, o7 = 7, o8 = 8, o9 = 9, o10 = 10, o11 = 11, o12 = 12, o13 = 13, o14 = 0;
				auto r0 = comp(x1, x0);	o0 += r0;	o1 -= r0;
				auto r1 = comp(x2, x0);	o0 += r1;	o2 -= r1;
				r0 = comp(x3, x0);	o0 += r0;	o3 -= r0;
				r1 = comp(x4, x0);	o0 += r1;	o4 -= r1;
				r0 = comp(x5, x0);	o0 += r0;	o5 -= r0;
				r1 = comp(x6, x0);	o0 += r1;	o6 -= r1;
				r0 = comp(x7, x0);	o0 += r0;	o7 -= r0;
				r1 = comp(x8, x0);	o0 += r1;	o8 -= r1;
				r0 = comp(x9, x0);	o0 += r0;	o9 -= r0;
				r1 = comp(x10, x0);	o0 += r1;	o10 -= r1;
				r0 = comp(x11, x0);	o0 += r0;	o11 -= r0;
				r1 = comp(x12, x0);	o0 += r1;	o12 -= r1;
				r0 = comp(x13, x0);	o0 += r0;	o13 -= r0;
				r1 = comp(x14, x0);	o0 += r1;
				r0 = comp(x2, x1);	o1 += r0;	o2 -= r0;
				r1 = comp(x3, x1);	o1 += r1;	o3 -= r1;
				r0 = comp(x4, x1);	o1 += r0;	o4 -= r0;
				r1 = comp(x5, x1);	o1 += r1;	o5 -= r1;
				r0 = comp(x6, x1);	o1 += r0;	o6 -= r0;
				r1 = comp(x7, x1);	o1 += r1;	o7 -= r1;
				r0 = comp(x8, x1);	o1 += r0;	o8 -= r0;
				r1 = comp(x9, x1);	o1 += r1;	o9 -= r1;
				r0 = comp(x10, x1);	o1 += r0;	o10 -= r0;
				r1 = comp(x11, x1);	o1 += r1;	o11 -= r1;
				r0 = comp(x12, x1);	o1 += r0;	o12 -= r0;
				r1 = comp(x13, x1);	o1 += r1;	o13 -= r1;
				r0 = comp(x14, x1);	o1 += r0;
				r1 = comp(x3, x2);	o2 += r1;	o3 -= r1;
				r0 = comp(x4, x2);	o2 += r0;	o4 -= r0;
				r1 = comp(x5, x2);	o2 += r1;	o5 -= r1;
				r0 = comp(x6, x2);	o2 += r0;	o6 -= r0;
				r1 = comp(x7, x2);	o2 += r1;	o7 -= r1;
				r0 = comp(x8, x2);	o2 += r0;	o8 -= r0;
				r1 = comp(x9, x2);	o2 += r1;	o9 -= r1;
				r0 = comp(x10, x2);	o2 += r0;	o10 -= r0;
				r1 = comp(x11, x2);	o2 += r1;	o11 -= r1;
				r0 = comp(x12, x2);	o2 += r0;	o12 -= r0;
				r1 = comp(x13, x2);	o2 += r1;	o13 -= r1;
				r0 = comp(x14, x2);	o2 += r0;
				r1 = comp(x4, x3);	o3 += r1;	o4 -= r1;
				r0 = comp(x5, x3);	o3 += r0;	o5 -= r0;
				r1 = comp(x6, x3);	o3 += r1;	o6 -= r1;
				r0 = comp(x7, x3);	o3 += r0;	o7 -= r0;
				r1 = comp(x8, x3);	o3 += r1;	o8 -= r1;
				r0 = comp(x9, x3);	o3 += r0;	o9 -= r0;
				r1 = comp(x10, x3);	o3 += r1;	o10 -= r1;
				r0 = comp(x11, x3);	o3 += r0;	o11 -= r0;
				r1 = comp(x12, x3);	o3 += r1;	o12 -= r1;
				r0 = comp(x13, x3);	o3 += r0;	o13 -= r0;
				r1 = comp(x14, x3);	o3 += r1;
				r0 = comp(x5, x4);	o4 += r0;	o5 -= r0;
				r1 = comp(x6, x4);	o4 += r1;	o6 -= r1;
				r0 = comp(x7, x4);	o4 += r0;	o7 -= r0;
				r1 = comp(x8, x4);	o4 += r1;	o8 -= r1;
				r0 = comp(x9, x4);	o4 += r0;	o9 -= r0;
				r1 = comp(x10, x4);	o4 += r1;	o10 -= r1;
				r0 = comp(x11, x4);	o4 += r0;	o11 -= r0;
				r1 = comp(x12, x4);	o4 += r1;	o12 -= r1;
				r0 = comp(x13, x4);	o4 += r0;	o13 -= r0;
				r1 = comp(x14, x4);	o4 += r1;
				r0 = comp(x6, x5);	o5 += r0;	o6 -= r0;
				r1 = comp(x7, x5);	o5 += r1;	o7 -= r1;
				r0 = comp(x8, x5);	o5 += r0;	o8 -= r0;
				r1 = comp(x9, x5);	o5 += r1;	o9 -= r1;
				r0 = comp(x10, x5);	o5 += r0;	o10 -= r0;
				r1 = comp(x11, x5);	o5 += r1;	o11 -= r1;
				r0 = comp(x12, x5);	o5 += r0;	o12 -= r0;
				r1 = comp(x13, x5);	o5 += r1;	o13 -= r1;
				r0 = comp(x14, x5);	o5 += r0;
				r1 = comp(x7, x6);	o6 += r1;	o7 -= r1;
				r0 = comp(x8, x6);	o6 += r0;	o8 -= r0;
				r1 = comp(x9, x6);	o6 += r1;	o9 -= r1;
				r0 = comp(x10, x6);	o6 += r0;	o10 -= r0;
				r1 = comp(x11, x6);	o6 += r1;	o11 -= r1;
				r0 = comp(x12, x6);	o6 += r0;	o12 -= r0;
				r1 = comp(x13, x6);	o6 += r1;	o13 -= r1;
				r0 = comp(x14, x6);	o6 += r0;
				r1 = comp(x8, x7);	o7 += r1;	o8 -= r1;
				r0 = comp(x9, x7);	o7 += r0;	o9 -= r0;
				r1 = comp(x10, x7);	o7 += r1;	o10 -= r1;
				r0 = comp(x11, x7);	o7 += r0;	o11 -= r0;
				r1 = comp(x12, x7);	o7 += r1;	o12 -= r1;
				r0 = comp(x13, x7);	o7 += r0;	o13 -= r0;
				r1 = comp(x14, x7);	o7 += r1;
				r0 = comp(x9, x8);	o8 += r0;	o9 -= r0;
				r1 = comp(x10, x8);	o8 += r1;	o10 -= r1;
				r0 = comp(x11, x8);	o8 += r0;	o11 -= r0;
				r1 = comp(x12, x8);	o8 += r1;	o12 -= r1;
				r0 = comp(x13, x8);	o8 += r0;	o13 -= r0;
				r1 = comp(x14, x8);	o8 += r1;
				r0 = comp(x10, x9);	o9 += r0;	o10 -= r0;
				r1 = comp(x11, x9);	o9 += r1;	o11 -= r1;
				r0 = comp(x12, x9);	o9 += r0;	o12 -= r0;
				r1 = comp(x13, x9);	o9 += r1;	o13 -= r1;
				r0 = comp(x14, x9);	o9 += r0;
				r1 = comp(x11, x10);	o10 += r1;	o11 -= r1;
				r0 = comp(x12, x10);	o10 += r0;	o12 -= r0;
				r1 = comp(x13, x10);	o10 += r1;	o13 -= r1;
				r0 = comp(x14, x10);	o10 += r0;
				r1 = comp(x12, x11);	o11 += r1;	o12 -= r1;
				r0 = comp(x13, x11);	o11 += r0;	o13 -= r0;
				r1 = comp(x14, x11);	o11 += r1;
				r0 = comp(x13, x12);	o12 += r0;	o13 -= r0;
				r1 = comp(x14, x12);	o12 += r1;
				r0 = comp(x14, x13);	o13 += r0;
				o14 = 105 - o0 - o1 - o2 - o3 - o4 - o5 - o6 - o7 - o8 - o9 - o10 - o11 - o12 - o13;
				arr[o0] = x0;
				arr[o1] = x1;
				arr[o2] = x2;
				arr[o3] = x3;
				arr[o4] = x4;
				arr[o5] = x5;
				arr[o6] = x6;
				arr[o7] = x7;
				arr[o8] = x8;
				arr[o9] = x9;
				arr[o10] = x10;
				arr[o11] = x11;
				arr[o12] = x12;
				arr[o13] = x13;
				arr[o14] = x14;

				FinishingSorter{}(arr, 15);
			}

			void sort16(T* arr)
			{
				T x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15;
				x0 = arr[0];
				x1 = arr[1];
				x2 = arr[2];
				x3 = arr[3];
				x4 = arr[4];
				x5 = arr[5];
				x6 = arr[6];
				x7 = arr[7];
				x8 = arr[8];
				x9 = arr[9];
				x10 = arr[10];
				x11 = arr[11];
				x12 = arr[12];
				x13 = arr[13];
				x14 = arr[14];
				x15 = arr[15];
				int o0 = 0, o1 = 1, o2 = 2, o3 = 3, o4 = 4, o5 = 5, o6 = 6, o7 = 7, o8 = 8, o9 = 9, o10 = 10, o11 = 11, o12 = 12, o13 = 13, o14 = 14, o15 = 0;
				auto r0 = comp(x1, x0);	o0 += r0;	o1 -= r0;
				auto r1 = comp(x2, x0);	o0 += r1;	o2 -= r1;
				r0 = comp(x3, x0);	o0 += r0;	o3 -= r0;
				r1 = comp(x4, x0);	o0 += r1;	o4 -= r1;
				r0 = comp(x5, x0);	o0 += r0;	o5 -= r0;
				r1 = comp(x6, x0);	o0 += r1;	o6 -= r1;
				r0 = comp(x7, x0);	o0 += r0;	o7 -= r0;
				r1 = comp(x8, x0);	o0 += r1;	o8 -= r1;
				r0 = comp(x9, x0);	o0 += r0;	o9 -= r0;
				r1 = comp(x10, x0);	o0 += r1;	o10 -= r1;
				r0 = comp(x11, x0);	o0 += r0;	o11 -= r0;
				r1 = comp(x12, x0);	o0 += r1;	o12 -= r1;
				r0 = comp(x13, x0);	o0 += r0;	o13 -= r0;
				r1 = comp(x14, x0);	o0 += r1;	o14 -= r1;
				r0 = comp(x15, x0);	o0 += r0;
				r1 = comp(x2, x1);	o1 += r1;	o2 -= r1;
				r0 = comp(x3, x1);	o1 += r0;	o3 -= r0;
				r1 = comp(x4, x1);	o1 += r1;	o4 -= r1;
				r0 = comp(x5, x1);	o1 += r0;	o5 -= r0;
				r1 = comp(x6, x1);	o1 += r1;	o6 -= r1;
				r0 = comp(x7, x1);	o1 += r0;	o7 -= r0;
				r1 = comp(x8, x1);	o1 += r1;	o8 -= r1;
				r0 = comp(x9, x1);	o1 += r0;	o9 -= r0;
				r1 = comp(x10, x1);	o1 += r1;	o10 -= r1;
				r0 = comp(x11, x1);	o1 += r0;	o11 -= r0;
				r1 = comp(x12, x1);	o1 += r1;	o12 -= r1;
				r0 = comp(x13, x1);	o1 += r0;	o13 -= r0;
				r1 = comp(x14, x1);	o1 += r1;	o14 -= r1;
				r0 = comp(x15, x1);	o1 += r0;
				r1 = comp(x3, x2);	o2 += r1;	o3 -= r1;
				r0 = comp(x4, x2);	o2 += r0;	o4 -= r0;
				r1 = comp(x5, x2);	o2 += r1;	o5 -= r1;
				r0 = comp(x6, x2);	o2 += r0;	o6 -= r0;
				r1 = comp(x7, x2);	o2 += r1;	o7 -= r1;
				r0 = comp(x8, x2);	o2 += r0;	o8 -= r0;
				r1 = comp(x9, x2);	o2 += r1;	o9 -= r1;
				r0 = comp(x10, x2);	o2 += r0;	o10 -= r0;
				r1 = comp(x11, x2);	o2 += r1;	o11 -= r1;
				r0 = comp(x12, x2);	o2 += r0;	o12 -= r0;
				r1 = comp(x13, x2);	o2 += r1;	o13 -= r1;
				r0 = comp(x14, x2);	o2 += r0;	o14 -= r0;
				r1 = comp(x15, x2);	o2 += r1;
				r0 = comp(x4, x3);	o3 += r0;	o4 -= r0;
				r1 = comp(x5, x3);	o3 += r1;	o5 -= r1;
				r0 = comp(x6, x3);	o3 += r0;	o6 -= r0;
				r1 = comp(x7, x3);	o3 += r1;	o7 -= r1;
				r0 = comp(x8, x3);	o3 += r0;	o8 -= r0;
				r1 = comp(x9, x3);	o3 += r1;	o9 -= r1;
				r0 = comp(x10, x3);	o3 += r0;	o10 -= r0;
				r1 = comp(x11, x3);	o3 += r1;	o11 -= r1;
				r0 = comp(x12, x3);	o3 += r0;	o12 -= r0;
				r1 = comp(x13, x3);	o3 += r1;	o13 -= r1;
				r0 = comp(x14, x3);	o3 += r0;	o14 -= r0;
				r1 = comp(x15, x3);	o3 += r1;
				r0 = comp(x5, x4);	o4 += r0;	o5 -= r0;
				r1 = comp(x6, x4);	o4 += r1;	o6 -= r1;
				r0 = comp(x7, x4);	o4 += r0;	o7 -= r0;
				r1 = comp(x8, x4);	o4 += r1;	o8 -= r1;
				r0 = comp(x9, x4);	o4 += r0;	o9 -= r0;
				r1 = comp(x10, x4);	o4 += r1;	o10 -= r1;
				r0 = comp(x11, x4);	o4 += r0;	o11 -= r0;
				r1 = comp(x12, x4);	o4 += r1;	o12 -= r1;
				r0 = comp(x13, x4);	o4 += r0;	o13 -= r0;
				r1 = comp(x14, x4);	o4 += r1;	o14 -= r1;
				r0 = comp(x15, x4);	o4 += r0;
				r1 = comp(x6, x5);	o5 += r1;	o6 -= r1;
				r0 = comp(x7, x5);	o5 += r0;	o7 -= r0;
				r1 = comp(x8, x5);	o5 += r1;	o8 -= r1;
				r0 = comp(x9, x5);	o5 += r0;	o9 -= r0;
				r1 = comp(x10, x5);	o5 += r1;	o10 -= r1;
				r0 = comp(x11, x5);	o5 += r0;	o11 -= r0;
				r1 = comp(x12, x5);	o5 += r1;	o12 -= r1;
				r0 = comp(x13, x5);	o5 += r0;	o13 -= r0;
				r1 = comp(x14, x5);	o5 += r1;	o14 -= r1;
				r0 = comp(x15, x5);	o5 += r0;
				r1 = comp(x7, x6);	o6 += r1;	o7 -= r1;
				r0 = comp(x8, x6);	o6 += r0;	o8 -= r0;
				r1 = comp(x9, x6);	o6 += r1;	o9 -= r1;
				r0 = comp(x10, x6);	o6 += r0;	o10 -= r0;
				r1 = comp(x11, x6);	o6 += r1;	o11 -= r1;
				r0 = comp(x12, x6);	o6 += r0;	o12 -= r0;
				r1 = comp(x13, x6);	o6 += r1;	o13 -= r1;
				r0 = comp(x14, x6);	o6 += r0;	o14 -= r0;
				r1 = comp(x15, x6);	o6 += r1;
				r0 = comp(x8, x7);	o7 += r0;	o8 -= r0;
				r1 = comp(x9, x7);	o7 += r1;	o9 -= r1;
				r0 = comp(x10, x7);	o7 += r0;	o10 -= r0;
				r1 = comp(x11, x7);	o7 += r1;	o11 -= r1;
				r0 = comp(x12, x7);	o7 += r0;	o12 -= r0;
				r1 = comp(x13, x7);	o7 += r1;	o13 -= r1;
				r0 = comp(x14, x7);	o7 += r0;	o14 -= r0;
				r1 = comp(x15, x7);	o7 += r1;
				r0 = comp(x9, x8);	o8 += r0;	o9 -= r0;
				r1 = comp(x10, x8);	o8 += r1;	o10 -= r1;
				r0 = comp(x11, x8);	o8 += r0;	o11 -= r0;
				r1 = comp(x12, x8);	o8 += r1;	o12 -= r1;
				r0 = comp(x13, x8);	o8 += r0;	o13 -= r0;
				r1 = comp(x14, x8);	o8 += r1;	o14 -= r1;
				r0 = comp(x15, x8);	o8 += r0;
				r1 = comp(x10, x9);	o9 += r1;	o10 -= r1;
				r0 = comp(x11, x9);	o9 += r0;	o11 -= r0;
				r1 = comp(x12, x9);	o9 += r1;	o12 -= r1;
				r0 = comp(x13, x9);	o9 += r0;	o13 -= r0;
				r1 = comp(x14, x9);	o9 += r1;	o14 -= r1;
				r0 = comp(x15, x9);	o9 += r0;
				r1 = comp(x11, x10);	o10 += r1;	o11 -= r1;
				r0 = comp(x12, x10);	o10 += r0;	o12 -= r0;
				r1 = comp(x13, x10);	o10 += r1;	o13 -= r1;
				r0 = comp(x14, x10);	o10 += r0;	o14 -= r0;
				r1 = comp(x15, x10);	o10 += r1;
				r0 = comp(x12, x11);	o11 += r0;	o12 -= r0;
				r1 = comp(x13, x11);	o11 += r1;	o13 -= r1;
				r0 = comp(x14, x11);	o11 += r0;	o14 -= r0;
				r1 = comp(x15, x11);	o11 += r1;
				r0 = comp(x13, x12);	o12 += r0;	o13 -= r0;
				r1 = comp(x14, x12);	o12 += r1;	o14 -= r1;
				r0 = comp(x15, x12);	o12 += r0;
				r1 = comp(x14, x13);	o13 += r1;	o14 -= r1;
				r0 = comp(x15, x13);	o13 += r0;
				r1 = comp(x15, x14);	o14 += r1;
				o15 = 120 - o0 - o1 - o2 - o3 - o4 - o5 - o6 - o7 - o8 - o9 - o10 - o11 - o12 - o13 - o14;
				arr[o0] = x0;
				arr[o1] = x1;
				arr[o2] = x2;
				arr[o3] = x3;
				arr[o4] = x4;
				arr[o5] = x5;
				arr[o6] = x6;
				arr[o7] = x7;
				arr[o8] = x8;
				arr[o9] = x9;
				arr[o10] = x10;
				arr[o11] = x11;
				arr[o12] = x12;
				arr[o13] = x13;
				arr[o14] = x14;
				arr[o15] = x15;

				FinishingSorter{}(arr, 16);
			}

			void sort17(T* arr)
			{
				T x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16;
				x0 = arr[0];
				x1 = arr[1];
				x2 = arr[2];
				x3 = arr[3];
				x4 = arr[4];
				x5 = arr[5];
				x6 = arr[6];
				x7 = arr[7];
				x8 = arr[8];
				x9 = arr[9];
				x10 = arr[10];
				x11 = arr[11];
				x12 = arr[12];
				x13 = arr[13];
				x14 = arr[14];
				x15 = arr[15];
				x16 = arr[16];
				int o0 = 0, o1 = 1, o2 = 2, o3 = 3, o4 = 4, o5 = 5, o6 = 6, o7 = 7, o8 = 8, o9 = 9, o10 = 10, o11 = 11, o12 = 12, o13 = 13, o14 = 14, o15 = 15, o16 = 0;
				auto r0 = comp(x1, x0);	o0 += r0;	o1 -= r0;
				auto r1 = comp(x2, x0);	o0 += r1;	o2 -= r1;
				r0 = comp(x3, x0);	o0 += r0;	o3 -= r0;
				r1 = comp(x4, x0);	o0 += r1;	o4 -= r1;
				r0 = comp(x5, x0);	o0 += r0;	o5 -= r0;
				r1 = comp(x6, x0);	o0 += r1;	o6 -= r1;
				r0 = comp(x7, x0);	o0 += r0;	o7 -= r0;
				r1 = comp(x8, x0);	o0 += r1;	o8 -= r1;
				r0 = comp(x9, x0);	o0 += r0;	o9 -= r0;
				r1 = comp(x10, x0);	o0 += r1;	o10 -= r1;
				r0 = comp(x11, x0);	o0 += r0;	o11 -= r0;
				r1 = comp(x12, x0);	o0 += r1;	o12 -= r1;
				r0 = comp(x13, x0);	o0 += r0;	o13 -= r0;
				r1 = comp(x14, x0);	o0 += r1;	o14 -= r1;
				r0 = comp(x15, x0);	o0 += r0;	o15 -= r0;
				r1 = comp(x16, x0);	o0 += r1;
				r0 = comp(x2, x1);	o1 += r0;	o2 -= r0;
				r1 = comp(x3, x1);	o1 += r1;	o3 -= r1;
				r0 = comp(x4, x1);	o1 += r0;	o4 -= r0;
				r1 = comp(x5, x1);	o1 += r1;	o5 -= r1;
				r0 = comp(x6, x1);	o1 += r0;	o6 -= r0;
				r1 = comp(x7, x1);	o1 += r1;	o7 -= r1;
				r0 = comp(x8, x1);	o1 += r0;	o8 -= r0;
				r1 = comp(x9, x1);	o1 += r1;	o9 -= r1;
				r0 = comp(x10, x1);	o1 += r0;	o10 -= r0;
				r1 = comp(x11, x1);	o1 += r1;	o11 -= r1;
				r0 = comp(x12, x1);	o1 += r0;	o12 -= r0;
				r1 = comp(x13, x1);	o1 += r1;	o13 -= r1;
				r0 = comp(x14, x1);	o1 += r0;	o14 -= r0;
				r1 = comp(x15, x1);	o1 += r1;	o15 -= r1;
				r0 = comp(x16, x1);	o1 += r0;
				r1 = comp(x3, x2);	o2 += r1;	o3 -= r1;
				r0 = comp(x4, x2);	o2 += r0;	o4 -= r0;
				r1 = comp(x5, x2);	o2 += r1;	o5 -= r1;
				r0 = comp(x6, x2);	o2 += r0;	o6 -= r0;
				r1 = comp(x7, x2);	o2 += r1;	o7 -= r1;
				r0 = comp(x8, x2);	o2 += r0;	o8 -= r0;
				r1 = comp(x9, x2);	o2 += r1;	o9 -= r1;
				r0 = comp(x10, x2);	o2 += r0;	o10 -= r0;
				r1 = comp(x11, x2);	o2 += r1;	o11 -= r1;
				r0 = comp(x12, x2);	o2 += r0;	o12 -= r0;
				r1 = comp(x13, x2);	o2 += r1;	o13 -= r1;
				r0 = comp(x14, x2);	o2 += r0;	o14 -= r0;
				r1 = comp(x15, x2);	o2 += r1;	o15 -= r1;
				r0 = comp(x16, x2);	o2 += r0;
				r1 = comp(x4, x3);	o3 += r1;	o4 -= r1;
				r0 = comp(x5, x3);	o3 += r0;	o5 -= r0;
				r1 = comp(x6, x3);	o3 += r1;	o6 -= r1;
				r0 = comp(x7, x3);	o3 += r0;	o7 -= r0;
				r1 = comp(x8, x3);	o3 += r1;	o8 -= r1;
				r0 = comp(x9, x3);	o3 += r0;	o9 -= r0;
				r1 = comp(x10, x3);	o3 += r1;	o10 -= r1;
				r0 = comp(x11, x3);	o3 += r0;	o11 -= r0;
				r1 = comp(x12, x3);	o3 += r1;	o12 -= r1;
				r0 = comp(x13, x3);	o3 += r0;	o13 -= r0;
				r1 = comp(x14, x3);	o3 += r1;	o14 -= r1;
				r0 = comp(x15, x3);	o3 += r0;	o15 -= r0;
				r1 = comp(x16, x3);	o3 += r1;
				r0 = comp(x5, x4);	o4 += r0;	o5 -= r0;
				r1 = comp(x6, x4);	o4 += r1;	o6 -= r1;
				r0 = comp(x7, x4);	o4 += r0;	o7 -= r0;
				r1 = comp(x8, x4);	o4 += r1;	o8 -= r1;
				r0 = comp(x9, x4);	o4 += r0;	o9 -= r0;
				r1 = comp(x10, x4);	o4 += r1;	o10 -= r1;
				r0 = comp(x11, x4);	o4 += r0;	o11 -= r0;
				r1 = comp(x12, x4);	o4 += r1;	o12 -= r1;
				r0 = comp(x13, x4);	o4 += r0;	o13 -= r0;
				r1 = comp(x14, x4);	o4 += r1;	o14 -= r1;
				r0 = comp(x15, x4);	o4 += r0;	o15 -= r0;
				r1 = comp(x16, x4);	o4 += r1;
				r0 = comp(x6, x5);	o5 += r0;	o6 -= r0;
				r1 = comp(x7, x5);	o5 += r1;	o7 -= r1;
				r0 = comp(x8, x5);	o5 += r0;	o8 -= r0;
				r1 = comp(x9, x5);	o5 += r1;	o9 -= r1;
				r0 = comp(x10, x5);	o5 += r0;	o10 -= r0;
				r1 = comp(x11, x5);	o5 += r1;	o11 -= r1;
				r0 = comp(x12, x5);	o5 += r0;	o12 -= r0;
				r1 = comp(x13, x5);	o5 += r1;	o13 -= r1;
				r0 = comp(x14, x5);	o5 += r0;	o14 -= r0;
				r1 = comp(x15, x5);	o5 += r1;	o15 -= r1;
				r0 = comp(x16, x5);	o5 += r0;
				r1 = comp(x7, x6);	o6 += r1;	o7 -= r1;
				r0 = comp(x8, x6);	o6 += r0;	o8 -= r0;
				r1 = comp(x9, x6);	o6 += r1;	o9 -= r1;
				r0 = comp(x10, x6);	o6 += r0;	o10 -= r0;
				r1 = comp(x11, x6);	o6 += r1;	o11 -= r1;
				r0 = comp(x12, x6);	o6 += r0;	o12 -= r0;
				r1 = comp(x13, x6);	o6 += r1;	o13 -= r1;
				r0 = comp(x14, x6);	o6 += r0;	o14 -= r0;
				r1 = comp(x15, x6);	o6 += r1;	o15 -= r1;
				r0 = comp(x16, x6);	o6 += r0;
				r1 = comp(x8, x7);	o7 += r1;	o8 -= r1;
				r0 = comp(x9, x7);	o7 += r0;	o9 -= r0;
				r1 = comp(x10, x7);	o7 += r1;	o10 -= r1;
				r0 = comp(x11, x7);	o7 += r0;	o11 -= r0;
				r1 = comp(x12, x7);	o7 += r1;	o12 -= r1;
				r0 = comp(x13, x7);	o7 += r0;	o13 -= r0;
				r1 = comp(x14, x7);	o7 += r1;	o14 -= r1;
				r0 = comp(x15, x7);	o7 += r0;	o15 -= r0;
				r1 = comp(x16, x7);	o7 += r1;
				r0 = comp(x9, x8);	o8 += r0;	o9 -= r0;
				r1 = comp(x10, x8);	o8 += r1;	o10 -= r1;
				r0 = comp(x11, x8);	o8 += r0;	o11 -= r0;
				r1 = comp(x12, x8);	o8 += r1;	o12 -= r1;
				r0 = comp(x13, x8);	o8 += r0;	o13 -= r0;
				r1 = comp(x14, x8);	o8 += r1;	o14 -= r1;
				r0 = comp(x15, x8);	o8 += r0;	o15 -= r0;
				r1 = comp(x16, x8);	o8 += r1;
				r0 = comp(x10, x9);	o9 += r0;	o10 -= r0;
				r1 = comp(x11, x9);	o9 += r1;	o11 -= r1;
				r0 = comp(x12, x9);	o9 += r0;	o12 -= r0;
				r1 = comp(x13, x9);	o9 += r1;	o13 -= r1;
				r0 = comp(x14, x9);	o9 += r0;	o14 -= r0;
				r1 = comp(x15, x9);	o9 += r1;	o15 -= r1;
				r0 = comp(x16, x9);	o9 += r0;
				r1 = comp(x11, x10);	o10 += r1;	o11 -= r1;
				r0 = comp(x12, x10);	o10 += r0;	o12 -= r0;
				r1 = comp(x13, x10);	o10 += r1;	o13 -= r1;
				r0 = comp(x14, x10);	o10 += r0;	o14 -= r0;
				r1 = comp(x15, x10);	o10 += r1;	o15 -= r1;
				r0 = comp(x16, x10);	o10 += r0;
				r1 = comp(x12, x11);	o11 += r1;	o12 -= r1;
				r0 = comp(x13, x11);	o11 += r0;	o13 -= r0;
				r1 = comp(x14, x11);	o11 += r1;	o14 -= r1;
				r0 = comp(x15, x11);	o11 += r0;	o15 -= r0;
				r1 = comp(x16, x11);	o11 += r1;
				r0 = comp(x13, x12);	o12 += r0;	o13 -= r0;
				r1 = comp(x14, x12);	o12 += r1;	o14 -= r1;
				r0 = comp(x15, x12);	o12 += r0;	o15 -= r0;
				r1 = comp(x16, x12);	o12 += r1;
				r0 = comp(x14, x13);	o13 += r0;	o14 -= r0;
				r1 = comp(x15, x13);	o13 += r1;	o15 -= r1;
				r0 = comp(x16, x13);	o13 += r0;
				r1 = comp(x15, x14);	o14 += r1;	o15 -= r1;
				r0 = comp(x16, x14);	o14 += r0;
				r1 = comp(x16, x15);	o15 += r1;
				o16 = 136 - o0 - o1 - o2 - o3 - o4 - o5 - o6 - o7 - o8 - o9 - o10 - o11 - o12 - o13 - o14 - o15;
				arr[o0] = x0;
				arr[o1] = x1;
				arr[o2] = x2;
				arr[o3] = x3;
				arr[o4] = x4;
				arr[o5] = x5;
				arr[o6] = x6;
				arr[o7] = x7;
				arr[o8] = x8;
				arr[o9] = x9;
				arr[o10] = x10;
				arr[o11] = x11;
				arr[o12] = x12;
				arr[o13] = x13;
				arr[o14] = x14;
				arr[o15] = x15;
				arr[o16] = x16;

				FinishingSorter{}(arr, 17);
			}

			void sort18(T* arr)
			{
				T x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17;
				x0 = arr[0];
				x1 = arr[1];
				x2 = arr[2];
				x3 = arr[3];
				x4 = arr[4];
				x5 = arr[5];
				x6 = arr[6];
				x7 = arr[7];
				x8 = arr[8];
				x9 = arr[9];
				x10 = arr[10];
				x11 = arr[11];
				x12 = arr[12];
				x13 = arr[13];
				x14 = arr[14];
				x15 = arr[15];
				x16 = arr[16];
				x17 = arr[17];
				int o0 = 0, o1 = 1, o2 = 2, o3 = 3, o4 = 4, o5 = 5, o6 = 6, o7 = 7, o8 = 8, o9 = 9, o10 = 10, o11 = 11, o12 = 12, o13 = 13, o14 = 14, o15 = 15, o16 = 16, o17 = 0;
				auto r0 = comp(x1, x0);	o0 += r0;	o1 -= r0;
				auto r1 = comp(x2, x0);	o0 += r1;	o2 -= r1;
				r0 = comp(x3, x0);	o0 += r0;	o3 -= r0;
				r1 = comp(x4, x0);	o0 += r1;	o4 -= r1;
				r0 = comp(x5, x0);	o0 += r0;	o5 -= r0;
				r1 = comp(x6, x0);	o0 += r1;	o6 -= r1;
				r0 = comp(x7, x0);	o0 += r0;	o7 -= r0;
				r1 = comp(x8, x0);	o0 += r1;	o8 -= r1;
				r0 = comp(x9, x0);	o0 += r0;	o9 -= r0;
				r1 = comp(x10, x0);	o0 += r1;	o10 -= r1;
				r0 = comp(x11, x0);	o0 += r0;	o11 -= r0;
				r1 = comp(x12, x0);	o0 += r1;	o12 -= r1;
				r0 = comp(x13, x0);	o0 += r0;	o13 -= r0;
				r1 = comp(x14, x0);	o0 += r1;	o14 -= r1;
				r0 = comp(x15, x0);	o0 += r0;	o15 -= r0;
				r1 = comp(x16, x0);	o0 += r1;	o16 -= r1;
				r0 = comp(x17, x0);	o0 += r0;
				r1 = comp(x2, x1);	o1 += r1;	o2 -= r1;
				r0 = comp(x3, x1);	o1 += r0;	o3 -= r0;
				r1 = comp(x4, x1);	o1 += r1;	o4 -= r1;
				r0 = comp(x5, x1);	o1 += r0;	o5 -= r0;
				r1 = comp(x6, x1);	o1 += r1;	o6 -= r1;
				r0 = comp(x7, x1);	o1 += r0;	o7 -= r0;
				r1 = comp(x8, x1);	o1 += r1;	o8 -= r1;
				r0 = comp(x9, x1);	o1 += r0;	o9 -= r0;
				r1 = comp(x10, x1);	o1 += r1;	o10 -= r1;
				r0 = comp(x11, x1);	o1 += r0;	o11 -= r0;
				r1 = comp(x12, x1);	o1 += r1;	o12 -= r1;
				r0 = comp(x13, x1);	o1 += r0;	o13 -= r0;
				r1 = comp(x14, x1);	o1 += r1;	o14 -= r1;
				r0 = comp(x15, x1);	o1 += r0;	o15 -= r0;
				r1 = comp(x16, x1);	o1 += r1;	o16 -= r1;
				r0 = comp(x17, x1);	o1 += r0;
				r1 = comp(x3, x2);	o2 += r1;	o3 -= r1;
				r0 = comp(x4, x2);	o2 += r0;	o4 -= r0;
				r1 = comp(x5, x2);	o2 += r1;	o5 -= r1;
				r0 = comp(x6, x2);	o2 += r0;	o6 -= r0;
				r1 = comp(x7, x2);	o2 += r1;	o7 -= r1;
				r0 = comp(x8, x2);	o2 += r0;	o8 -= r0;
				r1 = comp(x9, x2);	o2 += r1;	o9 -= r1;
				r0 = comp(x10, x2);	o2 += r0;	o10 -= r0;
				r1 = comp(x11, x2);	o2 += r1;	o11 -= r1;
				r0 = comp(x12, x2);	o2 += r0;	o12 -= r0;
				r1 = comp(x13, x2);	o2 += r1;	o13 -= r1;
				r0 = comp(x14, x2);	o2 += r0;	o14 -= r0;
				r1 = comp(x15, x2);	o2 += r1;	o15 -= r1;
				r0 = comp(x16, x2);	o2 += r0;	o16 -= r0;
				r1 = comp(x17, x2);	o2 += r1;
				r0 = comp(x4, x3);	o3 += r0;	o4 -= r0;
				r1 = comp(x5, x3);	o3 += r1;	o5 -= r1;
				r0 = comp(x6, x3);	o3 += r0;	o6 -= r0;
				r1 = comp(x7, x3);	o3 += r1;	o7 -= r1;
				r0 = comp(x8, x3);	o3 += r0;	o8 -= r0;
				r1 = comp(x9, x3);	o3 += r1;	o9 -= r1;
				r0 = comp(x10, x3);	o3 += r0;	o10 -= r0;
				r1 = comp(x11, x3);	o3 += r1;	o11 -= r1;
				r0 = comp(x12, x3);	o3 += r0;	o12 -= r0;
				r1 = comp(x13, x3);	o3 += r1;	o13 -= r1;
				r0 = comp(x14, x3);	o3 += r0;	o14 -= r0;
				r1 = comp(x15, x3);	o3 += r1;	o15 -= r1;
				r0 = comp(x16, x3);	o3 += r0;	o16 -= r0;
				r1 = comp(x17, x3);	o3 += r1;
				r0 = comp(x5, x4);	o4 += r0;	o5 -= r0;
				r1 = comp(x6, x4);	o4 += r1;	o6 -= r1;
				r0 = comp(x7, x4);	o4 += r0;	o7 -= r0;
				r1 = comp(x8, x4);	o4 += r1;	o8 -= r1;
				r0 = comp(x9, x4);	o4 += r0;	o9 -= r0;
				r1 = comp(x10, x4);	o4 += r1;	o10 -= r1;
				r0 = comp(x11, x4);	o4 += r0;	o11 -= r0;
				r1 = comp(x12, x4);	o4 += r1;	o12 -= r1;
				r0 = comp(x13, x4);	o4 += r0;	o13 -= r0;
				r1 = comp(x14, x4);	o4 += r1;	o14 -= r1;
				r0 = comp(x15, x4);	o4 += r0;	o15 -= r0;
				r1 = comp(x16, x4);	o4 += r1;	o16 -= r1;
				r0 = comp(x17, x4);	o4 += r0;
				r1 = comp(x6, x5);	o5 += r1;	o6 -= r1;
				r0 = comp(x7, x5);	o5 += r0;	o7 -= r0;
				r1 = comp(x8, x5);	o5 += r1;	o8 -= r1;
				r0 = comp(x9, x5);	o5 += r0;	o9 -= r0;
				r1 = comp(x10, x5);	o5 += r1;	o10 -= r1;
				r0 = comp(x11, x5);	o5 += r0;	o11 -= r0;
				r1 = comp(x12, x5);	o5 += r1;	o12 -= r1;
				r0 = comp(x13, x5);	o5 += r0;	o13 -= r0;
				r1 = comp(x14, x5);	o5 += r1;	o14 -= r1;
				r0 = comp(x15, x5);	o5 += r0;	o15 -= r0;
				r1 = comp(x16, x5);	o5 += r1;	o16 -= r1;
				r0 = comp(x17, x5);	o5 += r0;
				r1 = comp(x7, x6);	o6 += r1;	o7 -= r1;
				r0 = comp(x8, x6);	o6 += r0;	o8 -= r0;
				r1 = comp(x9, x6);	o6 += r1;	o9 -= r1;
				r0 = comp(x10, x6);	o6 += r0;	o10 -= r0;
				r1 = comp(x11, x6);	o6 += r1;	o11 -= r1;
				r0 = comp(x12, x6);	o6 += r0;	o12 -= r0;
				r1 = comp(x13, x6);	o6 += r1;	o13 -= r1;
				r0 = comp(x14, x6);	o6 += r0;	o14 -= r0;
				r1 = comp(x15, x6);	o6 += r1;	o15 -= r1;
				r0 = comp(x16, x6);	o6 += r0;	o16 -= r0;
				r1 = comp(x17, x6);	o6 += r1;
				r0 = comp(x8, x7);	o7 += r0;	o8 -= r0;
				r1 = comp(x9, x7);	o7 += r1;	o9 -= r1;
				r0 = comp(x10, x7);	o7 += r0;	o10 -= r0;
				r1 = comp(x11, x7);	o7 += r1;	o11 -= r1;
				r0 = comp(x12, x7);	o7 += r0;	o12 -= r0;
				r1 = comp(x13, x7);	o7 += r1;	o13 -= r1;
				r0 = comp(x14, x7);	o7 += r0;	o14 -= r0;
				r1 = comp(x15, x7);	o7 += r1;	o15 -= r1;
				r0 = comp(x16, x7);	o7 += r0;	o16 -= r0;
				r1 = comp(x17, x7);	o7 += r1;
				r0 = comp(x9, x8);	o8 += r0;	o9 -= r0;
				r1 = comp(x10, x8);	o8 += r1;	o10 -= r1;
				r0 = comp(x11, x8);	o8 += r0;	o11 -= r0;
				r1 = comp(x12, x8);	o8 += r1;	o12 -= r1;
				r0 = comp(x13, x8);	o8 += r0;	o13 -= r0;
				r1 = comp(x14, x8);	o8 += r1;	o14 -= r1;
				r0 = comp(x15, x8);	o8 += r0;	o15 -= r0;
				r1 = comp(x16, x8);	o8 += r1;	o16 -= r1;
				r0 = comp(x17, x8);	o8 += r0;
				r1 = comp(x10, x9);	o9 += r1;	o10 -= r1;
				r0 = comp(x11, x9);	o9 += r0;	o11 -= r0;
				r1 = comp(x12, x9);	o9 += r1;	o12 -= r1;
				r0 = comp(x13, x9);	o9 += r0;	o13 -= r0;
				r1 = comp(x14, x9);	o9 += r1;	o14 -= r1;
				r0 = comp(x15, x9);	o9 += r0;	o15 -= r0;
				r1 = comp(x16, x9);	o9 += r1;	o16 -= r1;
				r0 = comp(x17, x9);	o9 += r0;
				r1 = comp(x11, x10);	o10 += r1;	o11 -= r1;
				r0 = comp(x12, x10);	o10 += r0;	o12 -= r0;
				r1 = comp(x13, x10);	o10 += r1;	o13 -= r1;
				r0 = comp(x14, x10);	o10 += r0;	o14 -= r0;
				r1 = comp(x15, x10);	o10 += r1;	o15 -= r1;
				r0 = comp(x16, x10);	o10 += r0;	o16 -= r0;
				r1 = comp(x17, x10);	o10 += r1;
				r0 = comp(x12, x11);	o11 += r0;	o12 -= r0;
				r1 = comp(x13, x11);	o11 += r1;	o13 -= r1;
				r0 = comp(x14, x11);	o11 += r0;	o14 -= r0;
				r1 = comp(x15, x11);	o11 += r1;	o15 -= r1;
				r0 = comp(x16, x11);	o11 += r0;	o16 -= r0;
				r1 = comp(x17, x11);	o11 += r1;
				r0 = comp(x13, x12);	o12 += r0;	o13 -= r0;
				r1 = comp(x14, x12);	o12 += r1;	o14 -= r1;
				r0 = comp(x15, x12);	o12 += r0;	o15 -= r0;
				r1 = comp(x16, x12);	o12 += r1;	o16 -= r1;
				r0 = comp(x17, x12);	o12 += r0;
				r1 = comp(x14, x13);	o13 += r1;	o14 -= r1;
				r0 = comp(x15, x13);	o13 += r0;	o15 -= r0;
				r1 = comp(x16, x13);	o13 += r1;	o16 -= r1;
				r0 = comp(x17, x13);	o13 += r0;
				r1 = comp(x15, x14);	o14 += r1;	o15 -= r1;
				r0 = comp(x16, x14);	o14 += r0;	o16 -= r0;
				r1 = comp(x17, x14);	o14 += r1;
				r0 = comp(x16, x15);	o15 += r0;	o16 -= r0;
				r1 = comp(x17, x15);	o15 += r1;
				r0 = comp(x17, x16);	o16 += r0;
				o17 = 153 - o0 - o1 - o2 - o3 - o4 - o5 - o6 - o7 - o8 - o9 - o10 - o11 - o12 - o13 - o14 - o15 - o16;
				arr[o0] = x0;
				arr[o1] = x1;
				arr[o2] = x2;
				arr[o3] = x3;
				arr[o4] = x4;
				arr[o5] = x5;
				arr[o6] = x6;
				arr[o7] = x7;
				arr[o8] = x8;
				arr[o9] = x9;
				arr[o10] = x10;
				arr[o11] = x11;
				arr[o12] = x12;
				arr[o13] = x13;
				arr[o14] = x14;
				arr[o15] = x15;
				arr[o16] = x16;
				arr[o17] = x17;

				FinishingSorter{}(arr, 18);
			}

			void sort19(T* arr)
			{
				T x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18;
				x0 = arr[0];
				x1 = arr[1];
				x2 = arr[2];
				x3 = arr[3];
				x4 = arr[4];
				x5 = arr[5];
				x6 = arr[6];
				x7 = arr[7];
				x8 = arr[8];
				x9 = arr[9];
				x10 = arr[10];
				x11 = arr[11];
				x12 = arr[12];
				x13 = arr[13];
				x14 = arr[14];
				x15 = arr[15];
				x16 = arr[16];
				x17 = arr[17];
				x18 = arr[18];
				int o0 = 0, o1 = 1, o2 = 2, o3 = 3, o4 = 4, o5 = 5, o6 = 6, o7 = 7, o8 = 8, o9 = 9, o10 = 10, o11 = 11, o12 = 12, o13 = 13, o14 = 14, o15 = 15, o16 = 16, o17 = 17, o18 = 0;
				auto r0 = comp(x1, x0);	o0 += r0;	o1 -= r0;
				auto r1 = comp(x2, x0);	o0 += r1;	o2 -= r1;
				r0 = comp(x3, x0);	o0 += r0;	o3 -= r0;
				r1 = comp(x4, x0);	o0 += r1;	o4 -= r1;
				r0 = comp(x5, x0);	o0 += r0;	o5 -= r0;
				r1 = comp(x6, x0);	o0 += r1;	o6 -= r1;
				r0 = comp(x7, x0);	o0 += r0;	o7 -= r0;
				r1 = comp(x8, x0);	o0 += r1;	o8 -= r1;
				r0 = comp(x9, x0);	o0 += r0;	o9 -= r0;
				r1 = comp(x10, x0);	o0 += r1;	o10 -= r1;
				r0 = comp(x11, x0);	o0 += r0;	o11 -= r0;
				r1 = comp(x12, x0);	o0 += r1;	o12 -= r1;
				r0 = comp(x13, x0);	o0 += r0;	o13 -= r0;
				r1 = comp(x14, x0);	o0 += r1;	o14 -= r1;
				r0 = comp(x15, x0);	o0 += r0;	o15 -= r0;
				r1 = comp(x16, x0);	o0 += r1;	o16 -= r1;
				r0 = comp(x17, x0);	o0 += r0;	o17 -= r0;
				r1 = comp(x18, x0);	o0 += r1;
				r0 = comp(x2, x1);	o1 += r0;	o2 -= r0;
				r1 = comp(x3, x1);	o1 += r1;	o3 -= r1;
				r0 = comp(x4, x1);	o1 += r0;	o4 -= r0;
				r1 = comp(x5, x1);	o1 += r1;	o5 -= r1;
				r0 = comp(x6, x1);	o1 += r0;	o6 -= r0;
				r1 = comp(x7, x1);	o1 += r1;	o7 -= r1;
				r0 = comp(x8, x1);	o1 += r0;	o8 -= r0;
				r1 = comp(x9, x1);	o1 += r1;	o9 -= r1;
				r0 = comp(x10, x1);	o1 += r0;	o10 -= r0;
				r1 = comp(x11, x1);	o1 += r1;	o11 -= r1;
				r0 = comp(x12, x1);	o1 += r0;	o12 -= r0;
				r1 = comp(x13, x1);	o1 += r1;	o13 -= r1;
				r0 = comp(x14, x1);	o1 += r0;	o14 -= r0;
				r1 = comp(x15, x1);	o1 += r1;	o15 -= r1;
				r0 = comp(x16, x1);	o1 += r0;	o16 -= r0;
				r1 = comp(x17, x1);	o1 += r1;	o17 -= r1;
				r0 = comp(x18, x1);	o1 += r0;
				r1 = comp(x3, x2);	o2 += r1;	o3 -= r1;
				r0 = comp(x4, x2);	o2 += r0;	o4 -= r0;
				r1 = comp(x5, x2);	o2 += r1;	o5 -= r1;
				r0 = comp(x6, x2);	o2 += r0;	o6 -= r0;
				r1 = comp(x7, x2);	o2 += r1;	o7 -= r1;
				r0 = comp(x8, x2);	o2 += r0;	o8 -= r0;
				r1 = comp(x9, x2);	o2 += r1;	o9 -= r1;
				r0 = comp(x10, x2);	o2 += r0;	o10 -= r0;
				r1 = comp(x11, x2);	o2 += r1;	o11 -= r1;
				r0 = comp(x12, x2);	o2 += r0;	o12 -= r0;
				r1 = comp(x13, x2);	o2 += r1;	o13 -= r1;
				r0 = comp(x14, x2);	o2 += r0;	o14 -= r0;
				r1 = comp(x15, x2);	o2 += r1;	o15 -= r1;
				r0 = comp(x16, x2);	o2 += r0;	o16 -= r0;
				r1 = comp(x17, x2);	o2 += r1;	o17 -= r1;
				r0 = comp(x18, x2);	o2 += r0;
				r1 = comp(x4, x3);	o3 += r1;	o4 -= r1;
				r0 = comp(x5, x3);	o3 += r0;	o5 -= r0;
				r1 = comp(x6, x3);	o3 += r1;	o6 -= r1;
				r0 = comp(x7, x3);	o3 += r0;	o7 -= r0;
				r1 = comp(x8, x3);	o3 += r1;	o8 -= r1;
				r0 = comp(x9, x3);	o3 += r0;	o9 -= r0;
				r1 = comp(x10, x3);	o3 += r1;	o10 -= r1;
				r0 = comp(x11, x3);	o3 += r0;	o11 -= r0;
				r1 = comp(x12, x3);	o3 += r1;	o12 -= r1;
				r0 = comp(x13, x3);	o3 += r0;	o13 -= r0;
				r1 = comp(x14, x3);	o3 += r1;	o14 -= r1;
				r0 = comp(x15, x3);	o3 += r0;	o15 -= r0;
				r1 = comp(x16, x3);	o3 += r1;	o16 -= r1;
				r0 = comp(x17, x3);	o3 += r0;	o17 -= r0;
				r1 = comp(x18, x3);	o3 += r1;
				r0 = comp(x5, x4);	o4 += r0;	o5 -= r0;
				r1 = comp(x6, x4);	o4 += r1;	o6 -= r1;
				r0 = comp(x7, x4);	o4 += r0;	o7 -= r0;
				r1 = comp(x8, x4);	o4 += r1;	o8 -= r1;
				r0 = comp(x9, x4);	o4 += r0;	o9 -= r0;
				r1 = comp(x10, x4);	o4 += r1;	o10 -= r1;
				r0 = comp(x11, x4);	o4 += r0;	o11 -= r0;
				r1 = comp(x12, x4);	o4 += r1;	o12 -= r1;
				r0 = comp(x13, x4);	o4 += r0;	o13 -= r0;
				r1 = comp(x14, x4);	o4 += r1;	o14 -= r1;
				r0 = comp(x15, x4);	o4 += r0;	o15 -= r0;
				r1 = comp(x16, x4);	o4 += r1;	o16 -= r1;
				r0 = comp(x17, x4);	o4 += r0;	o17 -= r0;
				r1 = comp(x18, x4);	o4 += r1;
				r0 = comp(x6, x5);	o5 += r0;	o6 -= r0;
				r1 = comp(x7, x5);	o5 += r1;	o7 -= r1;
				r0 = comp(x8, x5);	o5 += r0;	o8 -= r0;
				r1 = comp(x9, x5);	o5 += r1;	o9 -= r1;
				r0 = comp(x10, x5);	o5 += r0;	o10 -= r0;
				r1 = comp(x11, x5);	o5 += r1;	o11 -= r1;
				r0 = comp(x12, x5);	o5 += r0;	o12 -= r0;
				r1 = comp(x13, x5);	o5 += r1;	o13 -= r1;
				r0 = comp(x14, x5);	o5 += r0;	o14 -= r0;
				r1 = comp(x15, x5);	o5 += r1;	o15 -= r1;
				r0 = comp(x16, x5);	o5 += r0;	o16 -= r0;
				r1 = comp(x17, x5);	o5 += r1;	o17 -= r1;
				r0 = comp(x18, x5);	o5 += r0;
				r1 = comp(x7, x6);	o6 += r1;	o7 -= r1;
				r0 = comp(x8, x6);	o6 += r0;	o8 -= r0;
				r1 = comp(x9, x6);	o6 += r1;	o9 -= r1;
				r0 = comp(x10, x6);	o6 += r0;	o10 -= r0;
				r1 = comp(x11, x6);	o6 += r1;	o11 -= r1;
				r0 = comp(x12, x6);	o6 += r0;	o12 -= r0;
				r1 = comp(x13, x6);	o6 += r1;	o13 -= r1;
				r0 = comp(x14, x6);	o6 += r0;	o14 -= r0;
				r1 = comp(x15, x6);	o6 += r1;	o15 -= r1;
				r0 = comp(x16, x6);	o6 += r0;	o16 -= r0;
				r1 = comp(x17, x6);	o6 += r1;	o17 -= r1;
				r0 = comp(x18, x6);	o6 += r0;
				r1 = comp(x8, x7);	o7 += r1;	o8 -= r1;
				r0 = comp(x9, x7);	o7 += r0;	o9 -= r0;
				r1 = comp(x10, x7);	o7 += r1;	o10 -= r1;
				r0 = comp(x11, x7);	o7 += r0;	o11 -= r0;
				r1 = comp(x12, x7);	o7 += r1;	o12 -= r1;
				r0 = comp(x13, x7);	o7 += r0;	o13 -= r0;
				r1 = comp(x14, x7);	o7 += r1;	o14 -= r1;
				r0 = comp(x15, x7);	o7 += r0;	o15 -= r0;
				r1 = comp(x16, x7);	o7 += r1;	o16 -= r1;
				r0 = comp(x17, x7);	o7 += r0;	o17 -= r0;
				r1 = comp(x18, x7);	o7 += r1;
				r0 = comp(x9, x8);	o8 += r0;	o9 -= r0;
				r1 = comp(x10, x8);	o8 += r1;	o10 -= r1;
				r0 = comp(x11, x8);	o8 += r0;	o11 -= r0;
				r1 = comp(x12, x8);	o8 += r1;	o12 -= r1;
				r0 = comp(x13, x8);	o8 += r0;	o13 -= r0;
				r1 = comp(x14, x8);	o8 += r1;	o14 -= r1;
				r0 = comp(x15, x8);	o8 += r0;	o15 -= r0;
				r1 = comp(x16, x8);	o8 += r1;	o16 -= r1;
				r0 = comp(x17, x8);	o8 += r0;	o17 -= r0;
				r1 = comp(x18, x8);	o8 += r1;
				r0 = comp(x10, x9);	o9 += r0;	o10 -= r0;
				r1 = comp(x11, x9);	o9 += r1;	o11 -= r1;
				r0 = comp(x12, x9);	o9 += r0;	o12 -= r0;
				r1 = comp(x13, x9);	o9 += r1;	o13 -= r1;
				r0 = comp(x14, x9);	o9 += r0;	o14 -= r0;
				r1 = comp(x15, x9);	o9 += r1;	o15 -= r1;
				r0 = comp(x16, x9);	o9 += r0;	o16 -= r0;
				r1 = comp(x17, x9);	o9 += r1;	o17 -= r1;
				r0 = comp(x18, x9);	o9 += r0;
				r1 = comp(x11, x10);	o10 += r1;	o11 -= r1;
				r0 = comp(x12, x10);	o10 += r0;	o12 -= r0;
				r1 = comp(x13, x10);	o10 += r1;	o13 -= r1;
				r0 = comp(x14, x10);	o10 += r0;	o14 -= r0;
				r1 = comp(x15, x10);	o10 += r1;	o15 -= r1;
				r0 = comp(x16, x10);	o10 += r0;	o16 -= r0;
				r1 = comp(x17, x10);	o10 += r1;	o17 -= r1;
				r0 = comp(x18, x10);	o10 += r0;
				r1 = comp(x12, x11);	o11 += r1;	o12 -= r1;
				r0 = comp(x13, x11);	o11 += r0;	o13 -= r0;
				r1 = comp(x14, x11);	o11 += r1;	o14 -= r1;
				r0 = comp(x15, x11);	o11 += r0;	o15 -= r0;
				r1 = comp(x16, x11);	o11 += r1;	o16 -= r1;
				r0 = comp(x17, x11);	o11 += r0;	o17 -= r0;
				r1 = comp(x18, x11);	o11 += r1;
				r0 = comp(x13, x12);	o12 += r0;	o13 -= r0;
				r1 = comp(x14, x12);	o12 += r1;	o14 -= r1;
				r0 = comp(x15, x12);	o12 += r0;	o15 -= r0;
				r1 = comp(x16, x12);	o12 += r1;	o16 -= r1;
				r0 = comp(x17, x12);	o12 += r0;	o17 -= r0;
				r1 = comp(x18, x12);	o12 += r1;
				r0 = comp(x14, x13);	o13 += r0;	o14 -= r0;
				r1 = comp(x15, x13);	o13 += r1;	o15 -= r1;
				r0 = comp(x16, x13);	o13 += r0;	o16 -= r0;
				r1 = comp(x17, x13);	o13 += r1;	o17 -= r1;
				r0 = comp(x18, x13);	o13 += r0;
				r1 = comp(x15, x14);	o14 += r1;	o15 -= r1;
				r0 = comp(x16, x14);	o14 += r0;	o16 -= r0;
				r1 = comp(x17, x14);	o14 += r1;	o17 -= r1;
				r0 = comp(x18, x14);	o14 += r0;
				r1 = comp(x16, x15);	o15 += r1;	o16 -= r1;
				r0 = comp(x17, x15);	o15 += r0;	o17 -= r0;
				r1 = comp(x18, x15);	o15 += r1;
				r0 = comp(x17, x16);	o16 += r0;	o17 -= r0;
				r1 = comp(x18, x16);	o16 += r1;
				r0 = comp(x18, x17);	o17 += r0;
				o18 = 171 - o0 - o1 - o2 - o3 - o4 - o5 - o6 - o7 - o8 - o9 - o10 - o11 - o12 - o13 - o14 - o15 - o16 - o17;
				arr[o0] = x0;
				arr[o1] = x1;
				arr[o2] = x2;
				arr[o3] = x3;
				arr[o4] = x4;
				arr[o5] = x5;
				arr[o6] = x6;
				arr[o7] = x7;
				arr[o8] = x8;
				arr[o9] = x9;
				arr[o10] = x10;
				arr[o11] = x11;
				arr[o12] = x12;
				arr[o13] = x13;
				arr[o14] = x14;
				arr[o15] = x15;
				arr[o16] = x16;
				arr[o17] = x17;
				arr[o18] = x18;

				FinishingSorter{}(arr, 19);
			}

			void sort20(T* arr)
			{
				T x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19;
				x0 = arr[0];
				x1 = arr[1];
				x2 = arr[2];
				x3 = arr[3];
				x4 = arr[4];
				x5 = arr[5];
				x6 = arr[6];
				x7 = arr[7];
				x8 = arr[8];
				x9 = arr[9];
				x10 = arr[10];
				x11 = arr[11];
				x12 = arr[12];
				x13 = arr[13];
				x14 = arr[14];
				x15 = arr[15];
				x16 = arr[16];
				x17 = arr[17];
				x18 = arr[18];
				x19 = arr[19];
				int o0 = 0, o1 = 1, o2 = 2, o3 = 3, o4 = 4, o5 = 5, o6 = 6, o7 = 7, o8 = 8, o9 = 9, o10 = 10, o11 = 11, o12 = 12, o13 = 13, o14 = 14, o15 = 15, o16 = 16, o17 = 17, o18 = 18, o19 = 0;
				auto r0 = comp(x1, x0);	o0 += r0;	o1 -= r0;
				auto r1 = comp(x2, x0);	o0 += r1;	o2 -= r1;
				r0 = comp(x3, x0);	o0 += r0;	o3 -= r0;
				r1 = comp(x4, x0);	o0 += r1;	o4 -= r1;
				r0 = comp(x5, x0);	o0 += r0;	o5 -= r0;
				r1 = comp(x6, x0);	o0 += r1;	o6 -= r1;
				r0 = comp(x7, x0);	o0 += r0;	o7 -= r0;
				r1 = comp(x8, x0);	o0 += r1;	o8 -= r1;
				r0 = comp(x9, x0);	o0 += r0;	o9 -= r0;
				r1 = comp(x10, x0);	o0 += r1;	o10 -= r1;
				r0 = comp(x11, x0);	o0 += r0;	o11 -= r0;
				r1 = comp(x12, x0);	o0 += r1;	o12 -= r1;
				r0 = comp(x13, x0);	o0 += r0;	o13 -= r0;
				r1 = comp(x14, x0);	o0 += r1;	o14 -= r1;
				r0 = comp(x15, x0);	o0 += r0;	o15 -= r0;
				r1 = comp(x16, x0);	o0 += r1;	o16 -= r1;
				r0 = comp(x17, x0);	o0 += r0;	o17 -= r0;
				r1 = comp(x18, x0);	o0 += r1;	o18 -= r1;
				r0 = comp(x19, x0);	o0 += r0;
				r1 = comp(x2, x1);	o1 += r1;	o2 -= r1;
				r0 = comp(x3, x1);	o1 += r0;	o3 -= r0;
				r1 = comp(x4, x1);	o1 += r1;	o4 -= r1;
				r0 = comp(x5, x1);	o1 += r0;	o5 -= r0;
				r1 = comp(x6, x1);	o1 += r1;	o6 -= r1;
				r0 = comp(x7, x1);	o1 += r0;	o7 -= r0;
				r1 = comp(x8, x1);	o1 += r1;	o8 -= r1;
				r0 = comp(x9, x1);	o1 += r0;	o9 -= r0;
				r1 = comp(x10, x1);	o1 += r1;	o10 -= r1;
				r0 = comp(x11, x1);	o1 += r0;	o11 -= r0;
				r1 = comp(x12, x1);	o1 += r1;	o12 -= r1;
				r0 = comp(x13, x1);	o1 += r0;	o13 -= r0;
				r1 = comp(x14, x1);	o1 += r1;	o14 -= r1;
				r0 = comp(x15, x1);	o1 += r0;	o15 -= r0;
				r1 = comp(x16, x1);	o1 += r1;	o16 -= r1;
				r0 = comp(x17, x1);	o1 += r0;	o17 -= r0;
				r1 = comp(x18, x1);	o1 += r1;	o18 -= r1;
				r0 = comp(x19, x1);	o1 += r0;
				r1 = comp(x3, x2);	o2 += r1;	o3 -= r1;
				r0 = comp(x4, x2);	o2 += r0;	o4 -= r0;
				r1 = comp(x5, x2);	o2 += r1;	o5 -= r1;
				r0 = comp(x6, x2);	o2 += r0;	o6 -= r0;
				r1 = comp(x7, x2);	o2 += r1;	o7 -= r1;
				r0 = comp(x8, x2);	o2 += r0;	o8 -= r0;
				r1 = comp(x9, x2);	o2 += r1;	o9 -= r1;
				r0 = comp(x10, x2);	o2 += r0;	o10 -= r0;
				r1 = comp(x11, x2);	o2 += r1;	o11 -= r1;
				r0 = comp(x12, x2);	o2 += r0;	o12 -= r0;
				r1 = comp(x13, x2);	o2 += r1;	o13 -= r1;
				r0 = comp(x14, x2);	o2 += r0;	o14 -= r0;
				r1 = comp(x15, x2);	o2 += r1;	o15 -= r1;
				r0 = comp(x16, x2);	o2 += r0;	o16 -= r0;
				r1 = comp(x17, x2);	o2 += r1;	o17 -= r1;
				r0 = comp(x18, x2);	o2 += r0;	o18 -= r0;
				r1 = comp(x19, x2);	o2 += r1;
				r0 = comp(x4, x3);	o3 += r0;	o4 -= r0;
				r1 = comp(x5, x3);	o3 += r1;	o5 -= r1;
				r0 = comp(x6, x3);	o3 += r0;	o6 -= r0;
				r1 = comp(x7, x3);	o3 += r1;	o7 -= r1;
				r0 = comp(x8, x3);	o3 += r0;	o8 -= r0;
				r1 = comp(x9, x3);	o3 += r1;	o9 -= r1;
				r0 = comp(x10, x3);	o3 += r0;	o10 -= r0;
				r1 = comp(x11, x3);	o3 += r1;	o11 -= r1;
				r0 = comp(x12, x3);	o3 += r0;	o12 -= r0;
				r1 = comp(x13, x3);	o3 += r1;	o13 -= r1;
				r0 = comp(x14, x3);	o3 += r0;	o14 -= r0;
				r1 = comp(x15, x3);	o3 += r1;	o15 -= r1;
				r0 = comp(x16, x3);	o3 += r0;	o16 -= r0;
				r1 = comp(x17, x3);	o3 += r1;	o17 -= r1;
				r0 = comp(x18, x3);	o3 += r0;	o18 -= r0;
				r1 = comp(x19, x3);	o3 += r1;
				r0 = comp(x5, x4);	o4 += r0;	o5 -= r0;
				r1 = comp(x6, x4);	o4 += r1;	o6 -= r1;
				r0 = comp(x7, x4);	o4 += r0;	o7 -= r0;
				r1 = comp(x8, x4);	o4 += r1;	o8 -= r1;
				r0 = comp(x9, x4);	o4 += r0;	o9 -= r0;
				r1 = comp(x10, x4);	o4 += r1;	o10 -= r1;
				r0 = comp(x11, x4);	o4 += r0;	o11 -= r0;
				r1 = comp(x12, x4);	o4 += r1;	o12 -= r1;
				r0 = comp(x13, x4);	o4 += r0;	o13 -= r0;
				r1 = comp(x14, x4);	o4 += r1;	o14 -= r1;
				r0 = comp(x15, x4);	o4 += r0;	o15 -= r0;
				r1 = comp(x16, x4);	o4 += r1;	o16 -= r1;
				r0 = comp(x17, x4);	o4 += r0;	o17 -= r0;
				r1 = comp(x18, x4);	o4 += r1;	o18 -= r1;
				r0 = comp(x19, x4);	o4 += r0;
				r1 = comp(x6, x5);	o5 += r1;	o6 -= r1;
				r0 = comp(x7, x5);	o5 += r0;	o7 -= r0;
				r1 = comp(x8, x5);	o5 += r1;	o8 -= r1;
				r0 = comp(x9, x5);	o5 += r0;	o9 -= r0;
				r1 = comp(x10, x5);	o5 += r1;	o10 -= r1;
				r0 = comp(x11, x5);	o5 += r0;	o11 -= r0;
				r1 = comp(x12, x5);	o5 += r1;	o12 -= r1;
				r0 = comp(x13, x5);	o5 += r0;	o13 -= r0;
				r1 = comp(x14, x5);	o5 += r1;	o14 -= r1;
				r0 = comp(x15, x5);	o5 += r0;	o15 -= r0;
				r1 = comp(x16, x5);	o5 += r1;	o16 -= r1;
				r0 = comp(x17, x5);	o5 += r0;	o17 -= r0;
				r1 = comp(x18, x5);	o5 += r1;	o18 -= r1;
				r0 = comp(x19, x5);	o5 += r0;
				r1 = comp(x7, x6);	o6 += r1;	o7 -= r1;
				r0 = comp(x8, x6);	o6 += r0;	o8 -= r0;
				r1 = comp(x9, x6);	o6 += r1;	o9 -= r1;
				r0 = comp(x10, x6);	o6 += r0;	o10 -= r0;
				r1 = comp(x11, x6);	o6 += r1;	o11 -= r1;
				r0 = comp(x12, x6);	o6 += r0;	o12 -= r0;
				r1 = comp(x13, x6);	o6 += r1;	o13 -= r1;
				r0 = comp(x14, x6);	o6 += r0;	o14 -= r0;
				r1 = comp(x15, x6);	o6 += r1;	o15 -= r1;
				r0 = comp(x16, x6);	o6 += r0;	o16 -= r0;
				r1 = comp(x17, x6);	o6 += r1;	o17 -= r1;
				r0 = comp(x18, x6);	o6 += r0;	o18 -= r0;
				r1 = comp(x19, x6);	o6 += r1;
				r0 = comp(x8, x7);	o7 += r0;	o8 -= r0;
				r1 = comp(x9, x7);	o7 += r1;	o9 -= r1;
				r0 = comp(x10, x7);	o7 += r0;	o10 -= r0;
				r1 = comp(x11, x7);	o7 += r1;	o11 -= r1;
				r0 = comp(x12, x7);	o7 += r0;	o12 -= r0;
				r1 = comp(x13, x7);	o7 += r1;	o13 -= r1;
				r0 = comp(x14, x7);	o7 += r0;	o14 -= r0;
				r1 = comp(x15, x7);	o7 += r1;	o15 -= r1;
				r0 = comp(x16, x7);	o7 += r0;	o16 -= r0;
				r1 = comp(x17, x7);	o7 += r1;	o17 -= r1;
				r0 = comp(x18, x7);	o7 += r0;	o18 -= r0;
				r1 = comp(x19, x7);	o7 += r1;
				r0 = comp(x9, x8);	o8 += r0;	o9 -= r0;
				r1 = comp(x10, x8);	o8 += r1;	o10 -= r1;
				r0 = comp(x11, x8);	o8 += r0;	o11 -= r0;
				r1 = comp(x12, x8);	o8 += r1;	o12 -= r1;
				r0 = comp(x13, x8);	o8 += r0;	o13 -= r0;
				r1 = comp(x14, x8);	o8 += r1;	o14 -= r1;
				r0 = comp(x15, x8);	o8 += r0;	o15 -= r0;
				r1 = comp(x16, x8);	o8 += r1;	o16 -= r1;
				r0 = comp(x17, x8);	o8 += r0;	o17 -= r0;
				r1 = comp(x18, x8);	o8 += r1;	o18 -= r1;
				r0 = comp(x19, x8);	o8 += r0;
				r1 = comp(x10, x9);	o9 += r1;	o10 -= r1;
				r0 = comp(x11, x9);	o9 += r0;	o11 -= r0;
				r1 = comp(x12, x9);	o9 += r1;	o12 -= r1;
				r0 = comp(x13, x9);	o9 += r0;	o13 -= r0;
				r1 = comp(x14, x9);	o9 += r1;	o14 -= r1;
				r0 = comp(x15, x9);	o9 += r0;	o15 -= r0;
				r1 = comp(x16, x9);	o9 += r1;	o16 -= r1;
				r0 = comp(x17, x9);	o9 += r0;	o17 -= r0;
				r1 = comp(x18, x9);	o9 += r1;	o18 -= r1;
				r0 = comp(x19, x9);	o9 += r0;
				r1 = comp(x11, x10);	o10 += r1;	o11 -= r1;
				r0 = comp(x12, x10);	o10 += r0;	o12 -= r0;
				r1 = comp(x13, x10);	o10 += r1;	o13 -= r1;
				r0 = comp(x14, x10);	o10 += r0;	o14 -= r0;
				r1 = comp(x15, x10);	o10 += r1;	o15 -= r1;
				r0 = comp(x16, x10);	o10 += r0;	o16 -= r0;
				r1 = comp(x17, x10);	o10 += r1;	o17 -= r1;
				r0 = comp(x18, x10);	o10 += r0;	o18 -= r0;
				r1 = comp(x19, x10);	o10 += r1;
				r0 = comp(x12, x11);	o11 += r0;	o12 -= r0;
				r1 = comp(x13, x11);	o11 += r1;	o13 -= r1;
				r0 = comp(x14, x11);	o11 += r0;	o14 -= r0;
				r1 = comp(x15, x11);	o11 += r1;	o15 -= r1;
				r0 = comp(x16, x11);	o11 += r0;	o16 -= r0;
				r1 = comp(x17, x11);	o11 += r1;	o17 -= r1;
				r0 = comp(x18, x11);	o11 += r0;	o18 -= r0;
				r1 = comp(x19, x11);	o11 += r1;
				r0 = comp(x13, x12);	o12 += r0;	o13 -= r0;
				r1 = comp(x14, x12);	o12 += r1;	o14 -= r1;
				r0 = comp(x15, x12);	o12 += r0;	o15 -= r0;
				r1 = comp(x16, x12);	o12 += r1;	o16 -= r1;
				r0 = comp(x17, x12);	o12 += r0;	o17 -= r0;
				r1 = comp(x18, x12);	o12 += r1;	o18 -= r1;
				r0 = comp(x19, x12);	o12 += r0;
				r1 = comp(x14, x13);	o13 += r1;	o14 -= r1;
				r0 = comp(x15, x13);	o13 += r0;	o15 -= r0;
				r1 = comp(x16, x13);	o13 += r1;	o16 -= r1;
				r0 = comp(x17, x13);	o13 += r0;	o17 -= r0;
				r1 = comp(x18, x13);	o13 += r1;	o18 -= r1;
				r0 = comp(x19, x13);	o13 += r0;
				r1 = comp(x15, x14);	o14 += r1;	o15 -= r1;
				r0 = comp(x16, x14);	o14 += r0;	o16 -= r0;
				r1 = comp(x17, x14);	o14 += r1;	o17 -= r1;
				r0 = comp(x18, x14);	o14 += r0;	o18 -= r0;
				r1 = comp(x19, x14);	o14 += r1;
				r0 = comp(x16, x15);	o15 += r0;	o16 -= r0;
				r1 = comp(x17, x15);	o15 += r1;	o17 -= r1;
				r0 = comp(x18, x15);	o15 += r0;	o18 -= r0;
				r1 = comp(x19, x15);	o15 += r1;
				r0 = comp(x17, x16);	o16 += r0;	o17 -= r0;
				r1 = comp(x18, x16);	o16 += r1;	o18 -= r1;
				r0 = comp(x19, x16);	o16 += r0;
				r1 = comp(x18, x17);	o17 += r1;	o18 -= r1;
				r0 = comp(x19, x17);	o17 += r0;
				r1 = comp(x19, x18);	o18 += r1;
				o19 = 190 - o0 - o1 - o2 - o3 - o4 - o5 - o6 - o7 - o8 - o9 - o10 - o11 - o12 - o13 - o14 - o15 - o16 - o17 - o18;
				arr[o0] = x0;
				arr[o1] = x1;
				arr[o2] = x2;
				arr[o3] = x3;
				arr[o4] = x4;
				arr[o5] = x5;
				arr[o6] = x6;
				arr[o7] = x7;
				arr[o8] = x8;
				arr[o9] = x9;
				arr[o10] = x10;
				arr[o11] = x11;
				arr[o12] = x12;
				arr[o13] = x13;
				arr[o14] = x14;
				arr[o15] = x15;
				arr[o16] = x16;
				arr[o17] = x17;
				arr[o18] = x18;
				arr[o19] = x19;

				FinishingSorter{}(arr, 20);
			}

			void sort21(T* arr)
			{
				T x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20;
				x0 = arr[0];
				x1 = arr[1];
				x2 = arr[2];
				x3 = arr[3];
				x4 = arr[4];
				x5 = arr[5];
				x6 = arr[6];
				x7 = arr[7];
				x8 = arr[8];
				x9 = arr[9];
				x10 = arr[10];
				x11 = arr[11];
				x12 = arr[12];
				x13 = arr[13];
				x14 = arr[14];
				x15 = arr[15];
				x16 = arr[16];
				x17 = arr[17];
				x18 = arr[18];
				x19 = arr[19];
				x20 = arr[20];
				int o0 = 0, o1 = 1, o2 = 2, o3 = 3, o4 = 4, o5 = 5, o6 = 6, o7 = 7, o8 = 8, o9 = 9, o10 = 10, o11 = 11, o12 = 12, o13 = 13, o14 = 14, o15 = 15, o16 = 16, o17 = 17, o18 = 18, o19 = 19, o20 = 0;
				auto r0 = comp(x1, x0);	o0 += r0;	o1 -= r0;
				auto r1 = comp(x2, x0);	o0 += r1;	o2 -= r1;
				r0 = comp(x3, x0);	o0 += r0;	o3 -= r0;
				r1 = comp(x4, x0);	o0 += r1;	o4 -= r1;
				r0 = comp(x5, x0);	o0 += r0;	o5 -= r0;
				r1 = comp(x6, x0);	o0 += r1;	o6 -= r1;
				r0 = comp(x7, x0);	o0 += r0;	o7 -= r0;
				r1 = comp(x8, x0);	o0 += r1;	o8 -= r1;
				r0 = comp(x9, x0);	o0 += r0;	o9 -= r0;
				r1 = comp(x10, x0);	o0 += r1;	o10 -= r1;
				r0 = comp(x11, x0);	o0 += r0;	o11 -= r0;
				r1 = comp(x12, x0);	o0 += r1;	o12 -= r1;
				r0 = comp(x13, x0);	o0 += r0;	o13 -= r0;
				r1 = comp(x14, x0);	o0 += r1;	o14 -= r1;
				r0 = comp(x15, x0);	o0 += r0;	o15 -= r0;
				r1 = comp(x16, x0);	o0 += r1;	o16 -= r1;
				r0 = comp(x17, x0);	o0 += r0;	o17 -= r0;
				r1 = comp(x18, x0);	o0 += r1;	o18 -= r1;
				r0 = comp(x19, x0);	o0 += r0;	o19 -= r0;
				r1 = comp(x20, x0);	o0 += r1;
				r0 = comp(x2, x1);	o1 += r0;	o2 -= r0;
				r1 = comp(x3, x1);	o1 += r1;	o3 -= r1;
				r0 = comp(x4, x1);	o1 += r0;	o4 -= r0;
				r1 = comp(x5, x1);	o1 += r1;	o5 -= r1;
				r0 = comp(x6, x1);	o1 += r0;	o6 -= r0;
				r1 = comp(x7, x1);	o1 += r1;	o7 -= r1;
				r0 = comp(x8, x1);	o1 += r0;	o8 -= r0;
				r1 = comp(x9, x1);	o1 += r1;	o9 -= r1;
				r0 = comp(x10, x1);	o1 += r0;	o10 -= r0;
				r1 = comp(x11, x1);	o1 += r1;	o11 -= r1;
				r0 = comp(x12, x1);	o1 += r0;	o12 -= r0;
				r1 = comp(x13, x1);	o1 += r1;	o13 -= r1;
				r0 = comp(x14, x1);	o1 += r0;	o14 -= r0;
				r1 = comp(x15, x1);	o1 += r1;	o15 -= r1;
				r0 = comp(x16, x1);	o1 += r0;	o16 -= r0;
				r1 = comp(x17, x1);	o1 += r1;	o17 -= r1;
				r0 = comp(x18, x1);	o1 += r0;	o18 -= r0;
				r1 = comp(x19, x1);	o1 += r1;	o19 -= r1;
				r0 = comp(x20, x1);	o1 += r0;
				r1 = comp(x3, x2);	o2 += r1;	o3 -= r1;
				r0 = comp(x4, x2);	o2 += r0;	o4 -= r0;
				r1 = comp(x5, x2);	o2 += r1;	o5 -= r1;
				r0 = comp(x6, x2);	o2 += r0;	o6 -= r0;
				r1 = comp(x7, x2);	o2 += r1;	o7 -= r1;
				r0 = comp(x8, x2);	o2 += r0;	o8 -= r0;
				r1 = comp(x9, x2);	o2 += r1;	o9 -= r1;
				r0 = comp(x10, x2);	o2 += r0;	o10 -= r0;
				r1 = comp(x11, x2);	o2 += r1;	o11 -= r1;
				r0 = comp(x12, x2);	o2 += r0;	o12 -= r0;
				r1 = comp(x13, x2);	o2 += r1;	o13 -= r1;
				r0 = comp(x14, x2);	o2 += r0;	o14 -= r0;
				r1 = comp(x15, x2);	o2 += r1;	o15 -= r1;
				r0 = comp(x16, x2);	o2 += r0;	o16 -= r0;
				r1 = comp(x17, x2);	o2 += r1;	o17 -= r1;
				r0 = comp(x18, x2);	o2 += r0;	o18 -= r0;
				r1 = comp(x19, x2);	o2 += r1;	o19 -= r1;
				r0 = comp(x20, x2);	o2 += r0;
				r1 = comp(x4, x3);	o3 += r1;	o4 -= r1;
				r0 = comp(x5, x3);	o3 += r0;	o5 -= r0;
				r1 = comp(x6, x3);	o3 += r1;	o6 -= r1;
				r0 = comp(x7, x3);	o3 += r0;	o7 -= r0;
				r1 = comp(x8, x3);	o3 += r1;	o8 -= r1;
				r0 = comp(x9, x3);	o3 += r0;	o9 -= r0;
				r1 = comp(x10, x3);	o3 += r1;	o10 -= r1;
				r0 = comp(x11, x3);	o3 += r0;	o11 -= r0;
				r1 = comp(x12, x3);	o3 += r1;	o12 -= r1;
				r0 = comp(x13, x3);	o3 += r0;	o13 -= r0;
				r1 = comp(x14, x3);	o3 += r1;	o14 -= r1;
				r0 = comp(x15, x3);	o3 += r0;	o15 -= r0;
				r1 = comp(x16, x3);	o3 += r1;	o16 -= r1;
				r0 = comp(x17, x3);	o3 += r0;	o17 -= r0;
				r1 = comp(x18, x3);	o3 += r1;	o18 -= r1;
				r0 = comp(x19, x3);	o3 += r0;	o19 -= r0;
				r1 = comp(x20, x3);	o3 += r1;
				r0 = comp(x5, x4);	o4 += r0;	o5 -= r0;
				r1 = comp(x6, x4);	o4 += r1;	o6 -= r1;
				r0 = comp(x7, x4);	o4 += r0;	o7 -= r0;
				r1 = comp(x8, x4);	o4 += r1;	o8 -= r1;
				r0 = comp(x9, x4);	o4 += r0;	o9 -= r0;
				r1 = comp(x10, x4);	o4 += r1;	o10 -= r1;
				r0 = comp(x11, x4);	o4 += r0;	o11 -= r0;
				r1 = comp(x12, x4);	o4 += r1;	o12 -= r1;
				r0 = comp(x13, x4);	o4 += r0;	o13 -= r0;
				r1 = comp(x14, x4);	o4 += r1;	o14 -= r1;
				r0 = comp(x15, x4);	o4 += r0;	o15 -= r0;
				r1 = comp(x16, x4);	o4 += r1;	o16 -= r1;
				r0 = comp(x17, x4);	o4 += r0;	o17 -= r0;
				r1 = comp(x18, x4);	o4 += r1;	o18 -= r1;
				r0 = comp(x19, x4);	o4 += r0;	o19 -= r0;
				r1 = comp(x20, x4);	o4 += r1;
				r0 = comp(x6, x5);	o5 += r0;	o6 -= r0;
				r1 = comp(x7, x5);	o5 += r1;	o7 -= r1;
				r0 = comp(x8, x5);	o5 += r0;	o8 -= r0;
				r1 = comp(x9, x5);	o5 += r1;	o9 -= r1;
				r0 = comp(x10, x5);	o5 += r0;	o10 -= r0;
				r1 = comp(x11, x5);	o5 += r1;	o11 -= r1;
				r0 = comp(x12, x5);	o5 += r0;	o12 -= r0;
				r1 = comp(x13, x5);	o5 += r1;	o13 -= r1;
				r0 = comp(x14, x5);	o5 += r0;	o14 -= r0;
				r1 = comp(x15, x5);	o5 += r1;	o15 -= r1;
				r0 = comp(x16, x5);	o5 += r0;	o16 -= r0;
				r1 = comp(x17, x5);	o5 += r1;	o17 -= r1;
				r0 = comp(x18, x5);	o5 += r0;	o18 -= r0;
				r1 = comp(x19, x5);	o5 += r1;	o19 -= r1;
				r0 = comp(x20, x5);	o5 += r0;
				r1 = comp(x7, x6);	o6 += r1;	o7 -= r1;
				r0 = comp(x8, x6);	o6 += r0;	o8 -= r0;
				r1 = comp(x9, x6);	o6 += r1;	o9 -= r1;
				r0 = comp(x10, x6);	o6 += r0;	o10 -= r0;
				r1 = comp(x11, x6);	o6 += r1;	o11 -= r1;
				r0 = comp(x12, x6);	o6 += r0;	o12 -= r0;
				r1 = comp(x13, x6);	o6 += r1;	o13 -= r1;
				r0 = comp(x14, x6);	o6 += r0;	o14 -= r0;
				r1 = comp(x15, x6);	o6 += r1;	o15 -= r1;
				r0 = comp(x16, x6);	o6 += r0;	o16 -= r0;
				r1 = comp(x17, x6);	o6 += r1;	o17 -= r1;
				r0 = comp(x18, x6);	o6 += r0;	o18 -= r0;
				r1 = comp(x19, x6);	o6 += r1;	o19 -= r1;
				r0 = comp(x20, x6);	o6 += r0;
				r1 = comp(x8, x7);	o7 += r1;	o8 -= r1;
				r0 = comp(x9, x7);	o7 += r0;	o9 -= r0;
				r1 = comp(x10, x7);	o7 += r1;	o10 -= r1;
				r0 = comp(x11, x7);	o7 += r0;	o11 -= r0;
				r1 = comp(x12, x7);	o7 += r1;	o12 -= r1;
				r0 = comp(x13, x7);	o7 += r0;	o13 -= r0;
				r1 = comp(x14, x7);	o7 += r1;	o14 -= r1;
				r0 = comp(x15, x7);	o7 += r0;	o15 -= r0;
				r1 = comp(x16, x7);	o7 += r1;	o16 -= r1;
				r0 = comp(x17, x7);	o7 += r0;	o17 -= r0;
				r1 = comp(x18, x7);	o7 += r1;	o18 -= r1;
				r0 = comp(x19, x7);	o7 += r0;	o19 -= r0;
				r1 = comp(x20, x7);	o7 += r1;
				r0 = comp(x9, x8);	o8 += r0;	o9 -= r0;
				r1 = comp(x10, x8);	o8 += r1;	o10 -= r1;
				r0 = comp(x11, x8);	o8 += r0;	o11 -= r0;
				r1 = comp(x12, x8);	o8 += r1;	o12 -= r1;
				r0 = comp(x13, x8);	o8 += r0;	o13 -= r0;
				r1 = comp(x14, x8);	o8 += r1;	o14 -= r1;
				r0 = comp(x15, x8);	o8 += r0;	o15 -= r0;
				r1 = comp(x16, x8);	o8 += r1;	o16 -= r1;
				r0 = comp(x17, x8);	o8 += r0;	o17 -= r0;
				r1 = comp(x18, x8);	o8 += r1;	o18 -= r1;
				r0 = comp(x19, x8);	o8 += r0;	o19 -= r0;
				r1 = comp(x20, x8);	o8 += r1;
				r0 = comp(x10, x9);	o9 += r0;	o10 -= r0;
				r1 = comp(x11, x9);	o9 += r1;	o11 -= r1;
				r0 = comp(x12, x9);	o9 += r0;	o12 -= r0;
				r1 = comp(x13, x9);	o9 += r1;	o13 -= r1;
				r0 = comp(x14, x9);	o9 += r0;	o14 -= r0;
				r1 = comp(x15, x9);	o9 += r1;	o15 -= r1;
				r0 = comp(x16, x9);	o9 += r0;	o16 -= r0;
				r1 = comp(x17, x9);	o9 += r1;	o17 -= r1;
				r0 = comp(x18, x9);	o9 += r0;	o18 -= r0;
				r1 = comp(x19, x9);	o9 += r1;	o19 -= r1;
				r0 = comp(x20, x9);	o9 += r0;
				r1 = comp(x11, x10);	o10 += r1;	o11 -= r1;
				r0 = comp(x12, x10);	o10 += r0;	o12 -= r0;
				r1 = comp(x13, x10);	o10 += r1;	o13 -= r1;
				r0 = comp(x14, x10);	o10 += r0;	o14 -= r0;
				r1 = comp(x15, x10);	o10 += r1;	o15 -= r1;
				r0 = comp(x16, x10);	o10 += r0;	o16 -= r0;
				r1 = comp(x17, x10);	o10 += r1;	o17 -= r1;
				r0 = comp(x18, x10);	o10 += r0;	o18 -= r0;
				r1 = comp(x19, x10);	o10 += r1;	o19 -= r1;
				r0 = comp(x20, x10);	o10 += r0;
				r1 = comp(x12, x11);	o11 += r1;	o12 -= r1;
				r0 = comp(x13, x11);	o11 += r0;	o13 -= r0;
				r1 = comp(x14, x11);	o11 += r1;	o14 -= r1;
				r0 = comp(x15, x11);	o11 += r0;	o15 -= r0;
				r1 = comp(x16, x11);	o11 += r1;	o16 -= r1;
				r0 = comp(x17, x11);	o11 += r0;	o17 -= r0;
				r1 = comp(x18, x11);	o11 += r1;	o18 -= r1;
				r0 = comp(x19, x11);	o11 += r0;	o19 -= r0;
				r1 = comp(x20, x11);	o11 += r1;
				r0 = comp(x13, x12);	o12 += r0;	o13 -= r0;
				r1 = comp(x14, x12);	o12 += r1;	o14 -= r1;
				r0 = comp(x15, x12);	o12 += r0;	o15 -= r0;
				r1 = comp(x16, x12);	o12 += r1;	o16 -= r1;
				r0 = comp(x17, x12);	o12 += r0;	o17 -= r0;
				r1 = comp(x18, x12);	o12 += r1;	o18 -= r1;
				r0 = comp(x19, x12);	o12 += r0;	o19 -= r0;
				r1 = comp(x20, x12);	o12 += r1;
				r0 = comp(x14, x13);	o13 += r0;	o14 -= r0;
				r1 = comp(x15, x13);	o13 += r1;	o15 -= r1;
				r0 = comp(x16, x13);	o13 += r0;	o16 -= r0;
				r1 = comp(x17, x13);	o13 += r1;	o17 -= r1;
				r0 = comp(x18, x13);	o13 += r0;	o18 -= r0;
				r1 = comp(x19, x13);	o13 += r1;	o19 -= r1;
				r0 = comp(x20, x13);	o13 += r0;
				r1 = comp(x15, x14);	o14 += r1;	o15 -= r1;
				r0 = comp(x16, x14);	o14 += r0;	o16 -= r0;
				r1 = comp(x17, x14);	o14 += r1;	o17 -= r1;
				r0 = comp(x18, x14);	o14 += r0;	o18 -= r0;
				r1 = comp(x19, x14);	o14 += r1;	o19 -= r1;
				r0 = comp(x20, x14);	o14 += r0;
				r1 = comp(x16, x15);	o15 += r1;	o16 -= r1;
				r0 = comp(x17, x15);	o15 += r0;	o17 -= r0;
				r1 = comp(x18, x15);	o15 += r1;	o18 -= r1;
				r0 = comp(x19, x15);	o15 += r0;	o19 -= r0;
				r1 = comp(x20, x15);	o15 += r1;
				r0 = comp(x17, x16);	o16 += r0;	o17 -= r0;
				r1 = comp(x18, x16);	o16 += r1;	o18 -= r1;
				r0 = comp(x19, x16);	o16 += r0;	o19 -= r0;
				r1 = comp(x20, x16);	o16 += r1;
				r0 = comp(x18, x17);	o17 += r0;	o18 -= r0;
				r1 = comp(x19, x17);	o17 += r1;	o19 -= r1;
				r0 = comp(x20, x17);	o17 += r0;
				r1 = comp(x19, x18);	o18 += r1;	o19 -= r1;
				r0 = comp(x20, x18);	o18 += r0;
				r1 = comp(x20, x19);	o19 += r1;
				o20 = 210 - o0 - o1 - o2 - o3 - o4 - o5 - o6 - o7 - o8 - o9 - o10 - o11 - o12 - o13 - o14 - o15 - o16 - o17 - o18 - o19;
				arr[o0] = x0;
				arr[o1] = x1;
				arr[o2] = x2;
				arr[o3] = x3;
				arr[o4] = x4;
				arr[o5] = x5;
				arr[o6] = x6;
				arr[o7] = x7;
				arr[o8] = x8;
				arr[o9] = x9;
				arr[o10] = x10;
				arr[o11] = x11;
				arr[o12] = x12;
				arr[o13] = x13;
				arr[o14] = x14;
				arr[o15] = x15;
				arr[o16] = x16;
				arr[o17] = x17;
				arr[o18] = x18;
				arr[o19] = x19;
				arr[o20] = x20;

				FinishingSorter{}(arr, 21);
			}

			void sort22(T* arr)
			{
				T x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21;
				x0 = arr[0];
				x1 = arr[1];
				x2 = arr[2];
				x3 = arr[3];
				x4 = arr[4];
				x5 = arr[5];
				x6 = arr[6];
				x7 = arr[7];
				x8 = arr[8];
				x9 = arr[9];
				x10 = arr[10];
				x11 = arr[11];
				x12 = arr[12];
				x13 = arr[13];
				x14 = arr[14];
				x15 = arr[15];
				x16 = arr[16];
				x17 = arr[17];
				x18 = arr[18];
				x19 = arr[19];
				x20 = arr[20];
				x21 = arr[21];
				int o0 = 0, o1 = 1, o2 = 2, o3 = 3, o4 = 4, o5 = 5, o6 = 6, o7 = 7, o8 = 8, o9 = 9, o10 = 10, o11 = 11, o12 = 12, o13 = 13, o14 = 14, o15 = 15, o16 = 16, o17 = 17, o18 = 18, o19 = 19, o20 = 20, o21 = 0;
				auto r0 = comp(x1, x0);	o0 += r0;	o1 -= r0;
				auto r1 = comp(x2, x0);	o0 += r1;	o2 -= r1;
				r0 = comp(x3, x0);	o0 += r0;	o3 -= r0;
				r1 = comp(x4, x0);	o0 += r1;	o4 -= r1;
				r0 = comp(x5, x0);	o0 += r0;	o5 -= r0;
				r1 = comp(x6, x0);	o0 += r1;	o6 -= r1;
				r0 = comp(x7, x0);	o0 += r0;	o7 -= r0;
				r1 = comp(x8, x0);	o0 += r1;	o8 -= r1;
				r0 = comp(x9, x0);	o0 += r0;	o9 -= r0;
				r1 = comp(x10, x0);	o0 += r1;	o10 -= r1;
				r0 = comp(x11, x0);	o0 += r0;	o11 -= r0;
				r1 = comp(x12, x0);	o0 += r1;	o12 -= r1;
				r0 = comp(x13, x0);	o0 += r0;	o13 -= r0;
				r1 = comp(x14, x0);	o0 += r1;	o14 -= r1;
				r0 = comp(x15, x0);	o0 += r0;	o15 -= r0;
				r1 = comp(x16, x0);	o0 += r1;	o16 -= r1;
				r0 = comp(x17, x0);	o0 += r0;	o17 -= r0;
				r1 = comp(x18, x0);	o0 += r1;	o18 -= r1;
				r0 = comp(x19, x0);	o0 += r0;	o19 -= r0;
				r1 = comp(x20, x0);	o0 += r1;	o20 -= r1;
				r0 = comp(x21, x0);	o0 += r0;
				r1 = comp(x2, x1);	o1 += r1;	o2 -= r1;
				r0 = comp(x3, x1);	o1 += r0;	o3 -= r0;
				r1 = comp(x4, x1);	o1 += r1;	o4 -= r1;
				r0 = comp(x5, x1);	o1 += r0;	o5 -= r0;
				r1 = comp(x6, x1);	o1 += r1;	o6 -= r1;
				r0 = comp(x7, x1);	o1 += r0;	o7 -= r0;
				r1 = comp(x8, x1);	o1 += r1;	o8 -= r1;
				r0 = comp(x9, x1);	o1 += r0;	o9 -= r0;
				r1 = comp(x10, x1);	o1 += r1;	o10 -= r1;
				r0 = comp(x11, x1);	o1 += r0;	o11 -= r0;
				r1 = comp(x12, x1);	o1 += r1;	o12 -= r1;
				r0 = comp(x13, x1);	o1 += r0;	o13 -= r0;
				r1 = comp(x14, x1);	o1 += r1;	o14 -= r1;
				r0 = comp(x15, x1);	o1 += r0;	o15 -= r0;
				r1 = comp(x16, x1);	o1 += r1;	o16 -= r1;
				r0 = comp(x17, x1);	o1 += r0;	o17 -= r0;
				r1 = comp(x18, x1);	o1 += r1;	o18 -= r1;
				r0 = comp(x19, x1);	o1 += r0;	o19 -= r0;
				r1 = comp(x20, x1);	o1 += r1;	o20 -= r1;
				r0 = comp(x21, x1);	o1 += r0;
				r1 = comp(x3, x2);	o2 += r1;	o3 -= r1;
				r0 = comp(x4, x2);	o2 += r0;	o4 -= r0;
				r1 = comp(x5, x2);	o2 += r1;	o5 -= r1;
				r0 = comp(x6, x2);	o2 += r0;	o6 -= r0;
				r1 = comp(x7, x2);	o2 += r1;	o7 -= r1;
				r0 = comp(x8, x2);	o2 += r0;	o8 -= r0;
				r1 = comp(x9, x2);	o2 += r1;	o9 -= r1;
				r0 = comp(x10, x2);	o2 += r0;	o10 -= r0;
				r1 = comp(x11, x2);	o2 += r1;	o11 -= r1;
				r0 = comp(x12, x2);	o2 += r0;	o12 -= r0;
				r1 = comp(x13, x2);	o2 += r1;	o13 -= r1;
				r0 = comp(x14, x2);	o2 += r0;	o14 -= r0;
				r1 = comp(x15, x2);	o2 += r1;	o15 -= r1;
				r0 = comp(x16, x2);	o2 += r0;	o16 -= r0;
				r1 = comp(x17, x2);	o2 += r1;	o17 -= r1;
				r0 = comp(x18, x2);	o2 += r0;	o18 -= r0;
				r1 = comp(x19, x2);	o2 += r1;	o19 -= r1;
				r0 = comp(x20, x2);	o2 += r0;	o20 -= r0;
				r1 = comp(x21, x2);	o2 += r1;
				r0 = comp(x4, x3);	o3 += r0;	o4 -= r0;
				r1 = comp(x5, x3);	o3 += r1;	o5 -= r1;
				r0 = comp(x6, x3);	o3 += r0;	o6 -= r0;
				r1 = comp(x7, x3);	o3 += r1;	o7 -= r1;
				r0 = comp(x8, x3);	o3 += r0;	o8 -= r0;
				r1 = comp(x9, x3);	o3 += r1;	o9 -= r1;
				r0 = comp(x10, x3);	o3 += r0;	o10 -= r0;
				r1 = comp(x11, x3);	o3 += r1;	o11 -= r1;
				r0 = comp(x12, x3);	o3 += r0;	o12 -= r0;
				r1 = comp(x13, x3);	o3 += r1;	o13 -= r1;
				r0 = comp(x14, x3);	o3 += r0;	o14 -= r0;
				r1 = comp(x15, x3);	o3 += r1;	o15 -= r1;
				r0 = comp(x16, x3);	o3 += r0;	o16 -= r0;
				r1 = comp(x17, x3);	o3 += r1;	o17 -= r1;
				r0 = comp(x18, x3);	o3 += r0;	o18 -= r0;
				r1 = comp(x19, x3);	o3 += r1;	o19 -= r1;
				r0 = comp(x20, x3);	o3 += r0;	o20 -= r0;
				r1 = comp(x21, x3);	o3 += r1;
				r0 = comp(x5, x4);	o4 += r0;	o5 -= r0;
				r1 = comp(x6, x4);	o4 += r1;	o6 -= r1;
				r0 = comp(x7, x4);	o4 += r0;	o7 -= r0;
				r1 = comp(x8, x4);	o4 += r1;	o8 -= r1;
				r0 = comp(x9, x4);	o4 += r0;	o9 -= r0;
				r1 = comp(x10, x4);	o4 += r1;	o10 -= r1;
				r0 = comp(x11, x4);	o4 += r0;	o11 -= r0;
				r1 = comp(x12, x4);	o4 += r1;	o12 -= r1;
				r0 = comp(x13, x4);	o4 += r0;	o13 -= r0;
				r1 = comp(x14, x4);	o4 += r1;	o14 -= r1;
				r0 = comp(x15, x4);	o4 += r0;	o15 -= r0;
				r1 = comp(x16, x4);	o4 += r1;	o16 -= r1;
				r0 = comp(x17, x4);	o4 += r0;	o17 -= r0;
				r1 = comp(x18, x4);	o4 += r1;	o18 -= r1;
				r0 = comp(x19, x4);	o4 += r0;	o19 -= r0;
				r1 = comp(x20, x4);	o4 += r1;	o20 -= r1;
				r0 = comp(x21, x4);	o4 += r0;
				r1 = comp(x6, x5);	o5 += r1;	o6 -= r1;
				r0 = comp(x7, x5);	o5 += r0;	o7 -= r0;
				r1 = comp(x8, x5);	o5 += r1;	o8 -= r1;
				r0 = comp(x9, x5);	o5 += r0;	o9 -= r0;
				r1 = comp(x10, x5);	o5 += r1;	o10 -= r1;
				r0 = comp(x11, x5);	o5 += r0;	o11 -= r0;
				r1 = comp(x12, x5);	o5 += r1;	o12 -= r1;
				r0 = comp(x13, x5);	o5 += r0;	o13 -= r0;
				r1 = comp(x14, x5);	o5 += r1;	o14 -= r1;
				r0 = comp(x15, x5);	o5 += r0;	o15 -= r0;
				r1 = comp(x16, x5);	o5 += r1;	o16 -= r1;
				r0 = comp(x17, x5);	o5 += r0;	o17 -= r0;
				r1 = comp(x18, x5);	o5 += r1;	o18 -= r1;
				r0 = comp(x19, x5);	o5 += r0;	o19 -= r0;
				r1 = comp(x20, x5);	o5 += r1;	o20 -= r1;
				r0 = comp(x21, x5);	o5 += r0;
				r1 = comp(x7, x6);	o6 += r1;	o7 -= r1;
				r0 = comp(x8, x6);	o6 += r0;	o8 -= r0;
				r1 = comp(x9, x6);	o6 += r1;	o9 -= r1;
				r0 = comp(x10, x6);	o6 += r0;	o10 -= r0;
				r1 = comp(x11, x6);	o6 += r1;	o11 -= r1;
				r0 = comp(x12, x6);	o6 += r0;	o12 -= r0;
				r1 = comp(x13, x6);	o6 += r1;	o13 -= r1;
				r0 = comp(x14, x6);	o6 += r0;	o14 -= r0;
				r1 = comp(x15, x6);	o6 += r1;	o15 -= r1;
				r0 = comp(x16, x6);	o6 += r0;	o16 -= r0;
				r1 = comp(x17, x6);	o6 += r1;	o17 -= r1;
				r0 = comp(x18, x6);	o6 += r0;	o18 -= r0;
				r1 = comp(x19, x6);	o6 += r1;	o19 -= r1;
				r0 = comp(x20, x6);	o6 += r0;	o20 -= r0;
				r1 = comp(x21, x6);	o6 += r1;
				r0 = comp(x8, x7);	o7 += r0;	o8 -= r0;
				r1 = comp(x9, x7);	o7 += r1;	o9 -= r1;
				r0 = comp(x10, x7);	o7 += r0;	o10 -= r0;
				r1 = comp(x11, x7);	o7 += r1;	o11 -= r1;
				r0 = comp(x12, x7);	o7 += r0;	o12 -= r0;
				r1 = comp(x13, x7);	o7 += r1;	o13 -= r1;
				r0 = comp(x14, x7);	o7 += r0;	o14 -= r0;
				r1 = comp(x15, x7);	o7 += r1;	o15 -= r1;
				r0 = comp(x16, x7);	o7 += r0;	o16 -= r0;
				r1 = comp(x17, x7);	o7 += r1;	o17 -= r1;
				r0 = comp(x18, x7);	o7 += r0;	o18 -= r0;
				r1 = comp(x19, x7);	o7 += r1;	o19 -= r1;
				r0 = comp(x20, x7);	o7 += r0;	o20 -= r0;
				r1 = comp(x21, x7);	o7 += r1;
				r0 = comp(x9, x8);	o8 += r0;	o9 -= r0;
				r1 = comp(x10, x8);	o8 += r1;	o10 -= r1;
				r0 = comp(x11, x8);	o8 += r0;	o11 -= r0;
				r1 = comp(x12, x8);	o8 += r1;	o12 -= r1;
				r0 = comp(x13, x8);	o8 += r0;	o13 -= r0;
				r1 = comp(x14, x8);	o8 += r1;	o14 -= r1;
				r0 = comp(x15, x8);	o8 += r0;	o15 -= r0;
				r1 = comp(x16, x8);	o8 += r1;	o16 -= r1;
				r0 = comp(x17, x8);	o8 += r0;	o17 -= r0;
				r1 = comp(x18, x8);	o8 += r1;	o18 -= r1;
				r0 = comp(x19, x8);	o8 += r0;	o19 -= r0;
				r1 = comp(x20, x8);	o8 += r1;	o20 -= r1;
				r0 = comp(x21, x8);	o8 += r0;
				r1 = comp(x10, x9);	o9 += r1;	o10 -= r1;
				r0 = comp(x11, x9);	o9 += r0;	o11 -= r0;
				r1 = comp(x12, x9);	o9 += r1;	o12 -= r1;
				r0 = comp(x13, x9);	o9 += r0;	o13 -= r0;
				r1 = comp(x14, x9);	o9 += r1;	o14 -= r1;
				r0 = comp(x15, x9);	o9 += r0;	o15 -= r0;
				r1 = comp(x16, x9);	o9 += r1;	o16 -= r1;
				r0 = comp(x17, x9);	o9 += r0;	o17 -= r0;
				r1 = comp(x18, x9);	o9 += r1;	o18 -= r1;
				r0 = comp(x19, x9);	o9 += r0;	o19 -= r0;
				r1 = comp(x20, x9);	o9 += r1;	o20 -= r1;
				r0 = comp(x21, x9);	o9 += r0;
				r1 = comp(x11, x10);	o10 += r1;	o11 -= r1;
				r0 = comp(x12, x10);	o10 += r0;	o12 -= r0;
				r1 = comp(x13, x10);	o10 += r1;	o13 -= r1;
				r0 = comp(x14, x10);	o10 += r0;	o14 -= r0;
				r1 = comp(x15, x10);	o10 += r1;	o15 -= r1;
				r0 = comp(x16, x10);	o10 += r0;	o16 -= r0;
				r1 = comp(x17, x10);	o10 += r1;	o17 -= r1;
				r0 = comp(x18, x10);	o10 += r0;	o18 -= r0;
				r1 = comp(x19, x10);	o10 += r1;	o19 -= r1;
				r0 = comp(x20, x10);	o10 += r0;	o20 -= r0;
				r1 = comp(x21, x10);	o10 += r1;
				r0 = comp(x12, x11);	o11 += r0;	o12 -= r0;
				r1 = comp(x13, x11);	o11 += r1;	o13 -= r1;
				r0 = comp(x14, x11);	o11 += r0;	o14 -= r0;
				r1 = comp(x15, x11);	o11 += r1;	o15 -= r1;
				r0 = comp(x16, x11);	o11 += r0;	o16 -= r0;
				r1 = comp(x17, x11);	o11 += r1;	o17 -= r1;
				r0 = comp(x18, x11);	o11 += r0;	o18 -= r0;
				r1 = comp(x19, x11);	o11 += r1;	o19 -= r1;
				r0 = comp(x20, x11);	o11 += r0;	o20 -= r0;
				r1 = comp(x21, x11);	o11 += r1;
				r0 = comp(x13, x12);	o12 += r0;	o13 -= r0;
				r1 = comp(x14, x12);	o12 += r1;	o14 -= r1;
				r0 = comp(x15, x12);	o12 += r0;	o15 -= r0;
				r1 = comp(x16, x12);	o12 += r1;	o16 -= r1;
				r0 = comp(x17, x12);	o12 += r0;	o17 -= r0;
				r1 = comp(x18, x12);	o12 += r1;	o18 -= r1;
				r0 = comp(x19, x12);	o12 += r0;	o19 -= r0;
				r1 = comp(x20, x12);	o12 += r1;	o20 -= r1;
				r0 = comp(x21, x12);	o12 += r0;
				r1 = comp(x14, x13);	o13 += r1;	o14 -= r1;
				r0 = comp(x15, x13);	o13 += r0;	o15 -= r0;
				r1 = comp(x16, x13);	o13 += r1;	o16 -= r1;
				r0 = comp(x17, x13);	o13 += r0;	o17 -= r0;
				r1 = comp(x18, x13);	o13 += r1;	o18 -= r1;
				r0 = comp(x19, x13);	o13 += r0;	o19 -= r0;
				r1 = comp(x20, x13);	o13 += r1;	o20 -= r1;
				r0 = comp(x21, x13);	o13 += r0;
				r1 = comp(x15, x14);	o14 += r1;	o15 -= r1;
				r0 = comp(x16, x14);	o14 += r0;	o16 -= r0;
				r1 = comp(x17, x14);	o14 += r1;	o17 -= r1;
				r0 = comp(x18, x14);	o14 += r0;	o18 -= r0;
				r1 = comp(x19, x14);	o14 += r1;	o19 -= r1;
				r0 = comp(x20, x14);	o14 += r0;	o20 -= r0;
				r1 = comp(x21, x14);	o14 += r1;
				r0 = comp(x16, x15);	o15 += r0;	o16 -= r0;
				r1 = comp(x17, x15);	o15 += r1;	o17 -= r1;
				r0 = comp(x18, x15);	o15 += r0;	o18 -= r0;
				r1 = comp(x19, x15);	o15 += r1;	o19 -= r1;
				r0 = comp(x20, x15);	o15 += r0;	o20 -= r0;
				r1 = comp(x21, x15);	o15 += r1;
				r0 = comp(x17, x16);	o16 += r0;	o17 -= r0;
				r1 = comp(x18, x16);	o16 += r1;	o18 -= r1;
				r0 = comp(x19, x16);	o16 += r0;	o19 -= r0;
				r1 = comp(x20, x16);	o16 += r1;	o20 -= r1;
				r0 = comp(x21, x16);	o16 += r0;
				r1 = comp(x18, x17);	o17 += r1;	o18 -= r1;
				r0 = comp(x19, x17);	o17 += r0;	o19 -= r0;
				r1 = comp(x20, x17);	o17 += r1;	o20 -= r1;
				r0 = comp(x21, x17);	o17 += r0;
				r1 = comp(x19, x18);	o18 += r1;	o19 -= r1;
				r0 = comp(x20, x18);	o18 += r0;	o20 -= r0;
				r1 = comp(x21, x18);	o18 += r1;
				r0 = comp(x20, x19);	o19 += r0;	o20 -= r0;
				r1 = comp(x21, x19);	o19 += r1;
				r0 = comp(x21, x20);	o20 += r0;
				o21 = 231 - o0 - o1 - o2 - o3 - o4 - o5 - o6 - o7 - o8 - o9 - o10 - o11 - o12 - o13 - o14 - o15 - o16 - o17 - o18 - o19 - o20;
				arr[o0] = x0;
				arr[o1] = x1;
				arr[o2] = x2;
				arr[o3] = x3;
				arr[o4] = x4;
				arr[o5] = x5;
				arr[o6] = x6;
				arr[o7] = x7;
				arr[o8] = x8;
				arr[o9] = x9;
				arr[o10] = x10;
				arr[o11] = x11;
				arr[o12] = x12;
				arr[o13] = x13;
				arr[o14] = x14;
				arr[o15] = x15;
				arr[o16] = x16;
				arr[o17] = x17;
				arr[o18] = x18;
				arr[o19] = x19;
				arr[o20] = x20;
				arr[o21] = x21;

				FinishingSorter{}(arr, 22);
			}

			void sort23(T* arr)
			{
				T x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22;
				x0 = arr[0];
				x1 = arr[1];
				x2 = arr[2];
				x3 = arr[3];
				x4 = arr[4];
				x5 = arr[5];
				x6 = arr[6];
				x7 = arr[7];
				x8 = arr[8];
				x9 = arr[9];
				x10 = arr[10];
				x11 = arr[11];
				x12 = arr[12];
				x13 = arr[13];
				x14 = arr[14];
				x15 = arr[15];
				x16 = arr[16];
				x17 = arr[17];
				x18 = arr[18];
				x19 = arr[19];
				x20 = arr[20];
				x21 = arr[21];
				x22 = arr[22];
				int o0 = 0, o1 = 1, o2 = 2, o3 = 3, o4 = 4, o5 = 5, o6 = 6, o7 = 7, o8 = 8, o9 = 9, o10 = 10, o11 = 11, o12 = 12, o13 = 13, o14 = 14, o15 = 15, o16 = 16, o17 = 17, o18 = 18, o19 = 19, o20 = 20, o21 = 21, o22 = 0;
				auto r0 = comp(x1, x0);	o0 += r0;	o1 -= r0;
				auto r1 = comp(x2, x0);	o0 += r1;	o2 -= r1;
				r0 = comp(x3, x0);	o0 += r0;	o3 -= r0;
				r1 = comp(x4, x0);	o0 += r1;	o4 -= r1;
				r0 = comp(x5, x0);	o0 += r0;	o5 -= r0;
				r1 = comp(x6, x0);	o0 += r1;	o6 -= r1;
				r0 = comp(x7, x0);	o0 += r0;	o7 -= r0;
				r1 = comp(x8, x0);	o0 += r1;	o8 -= r1;
				r0 = comp(x9, x0);	o0 += r0;	o9 -= r0;
				r1 = comp(x10, x0);	o0 += r1;	o10 -= r1;
				r0 = comp(x11, x0);	o0 += r0;	o11 -= r0;
				r1 = comp(x12, x0);	o0 += r1;	o12 -= r1;
				r0 = comp(x13, x0);	o0 += r0;	o13 -= r0;
				r1 = comp(x14, x0);	o0 += r1;	o14 -= r1;
				r0 = comp(x15, x0);	o0 += r0;	o15 -= r0;
				r1 = comp(x16, x0);	o0 += r1;	o16 -= r1;
				r0 = comp(x17, x0);	o0 += r0;	o17 -= r0;
				r1 = comp(x18, x0);	o0 += r1;	o18 -= r1;
				r0 = comp(x19, x0);	o0 += r0;	o19 -= r0;
				r1 = comp(x20, x0);	o0 += r1;	o20 -= r1;
				r0 = comp(x21, x0);	o0 += r0;	o21 -= r0;
				r1 = comp(x22, x0);	o0 += r1;
				r0 = comp(x2, x1);	o1 += r0;	o2 -= r0;
				r1 = comp(x3, x1);	o1 += r1;	o3 -= r1;
				r0 = comp(x4, x1);	o1 += r0;	o4 -= r0;
				r1 = comp(x5, x1);	o1 += r1;	o5 -= r1;
				r0 = comp(x6, x1);	o1 += r0;	o6 -= r0;
				r1 = comp(x7, x1);	o1 += r1;	o7 -= r1;
				r0 = comp(x8, x1);	o1 += r0;	o8 -= r0;
				r1 = comp(x9, x1);	o1 += r1;	o9 -= r1;
				r0 = comp(x10, x1);	o1 += r0;	o10 -= r0;
				r1 = comp(x11, x1);	o1 += r1;	o11 -= r1;
				r0 = comp(x12, x1);	o1 += r0;	o12 -= r0;
				r1 = comp(x13, x1);	o1 += r1;	o13 -= r1;
				r0 = comp(x14, x1);	o1 += r0;	o14 -= r0;
				r1 = comp(x15, x1);	o1 += r1;	o15 -= r1;
				r0 = comp(x16, x1);	o1 += r0;	o16 -= r0;
				r1 = comp(x17, x1);	o1 += r1;	o17 -= r1;
				r0 = comp(x18, x1);	o1 += r0;	o18 -= r0;
				r1 = comp(x19, x1);	o1 += r1;	o19 -= r1;
				r0 = comp(x20, x1);	o1 += r0;	o20 -= r0;
				r1 = comp(x21, x1);	o1 += r1;	o21 -= r1;
				r0 = comp(x22, x1);	o1 += r0;
				r1 = comp(x3, x2);	o2 += r1;	o3 -= r1;
				r0 = comp(x4, x2);	o2 += r0;	o4 -= r0;
				r1 = comp(x5, x2);	o2 += r1;	o5 -= r1;
				r0 = comp(x6, x2);	o2 += r0;	o6 -= r0;
				r1 = comp(x7, x2);	o2 += r1;	o7 -= r1;
				r0 = comp(x8, x2);	o2 += r0;	o8 -= r0;
				r1 = comp(x9, x2);	o2 += r1;	o9 -= r1;
				r0 = comp(x10, x2);	o2 += r0;	o10 -= r0;
				r1 = comp(x11, x2);	o2 += r1;	o11 -= r1;
				r0 = comp(x12, x2);	o2 += r0;	o12 -= r0;
				r1 = comp(x13, x2);	o2 += r1;	o13 -= r1;
				r0 = comp(x14, x2);	o2 += r0;	o14 -= r0;
				r1 = comp(x15, x2);	o2 += r1;	o15 -= r1;
				r0 = comp(x16, x2);	o2 += r0;	o16 -= r0;
				r1 = comp(x17, x2);	o2 += r1;	o17 -= r1;
				r0 = comp(x18, x2);	o2 += r0;	o18 -= r0;
				r1 = comp(x19, x2);	o2 += r1;	o19 -= r1;
				r0 = comp(x20, x2);	o2 += r0;	o20 -= r0;
				r1 = comp(x21, x2);	o2 += r1;	o21 -= r1;
				r0 = comp(x22, x2);	o2 += r0;
				r1 = comp(x4, x3);	o3 += r1;	o4 -= r1;
				r0 = comp(x5, x3);	o3 += r0;	o5 -= r0;
				r1 = comp(x6, x3);	o3 += r1;	o6 -= r1;
				r0 = comp(x7, x3);	o3 += r0;	o7 -= r0;
				r1 = comp(x8, x3);	o3 += r1;	o8 -= r1;
				r0 = comp(x9, x3);	o3 += r0;	o9 -= r0;
				r1 = comp(x10, x3);	o3 += r1;	o10 -= r1;
				r0 = comp(x11, x3);	o3 += r0;	o11 -= r0;
				r1 = comp(x12, x3);	o3 += r1;	o12 -= r1;
				r0 = comp(x13, x3);	o3 += r0;	o13 -= r0;
				r1 = comp(x14, x3);	o3 += r1;	o14 -= r1;
				r0 = comp(x15, x3);	o3 += r0;	o15 -= r0;
				r1 = comp(x16, x3);	o3 += r1;	o16 -= r1;
				r0 = comp(x17, x3);	o3 += r0;	o17 -= r0;
				r1 = comp(x18, x3);	o3 += r1;	o18 -= r1;
				r0 = comp(x19, x3);	o3 += r0;	o19 -= r0;
				r1 = comp(x20, x3);	o3 += r1;	o20 -= r1;
				r0 = comp(x21, x3);	o3 += r0;	o21 -= r0;
				r1 = comp(x22, x3);	o3 += r1;
				r0 = comp(x5, x4);	o4 += r0;	o5 -= r0;
				r1 = comp(x6, x4);	o4 += r1;	o6 -= r1;
				r0 = comp(x7, x4);	o4 += r0;	o7 -= r0;
				r1 = comp(x8, x4);	o4 += r1;	o8 -= r1;
				r0 = comp(x9, x4);	o4 += r0;	o9 -= r0;
				r1 = comp(x10, x4);	o4 += r1;	o10 -= r1;
				r0 = comp(x11, x4);	o4 += r0;	o11 -= r0;
				r1 = comp(x12, x4);	o4 += r1;	o12 -= r1;
				r0 = comp(x13, x4);	o4 += r0;	o13 -= r0;
				r1 = comp(x14, x4);	o4 += r1;	o14 -= r1;
				r0 = comp(x15, x4);	o4 += r0;	o15 -= r0;
				r1 = comp(x16, x4);	o4 += r1;	o16 -= r1;
				r0 = comp(x17, x4);	o4 += r0;	o17 -= r0;
				r1 = comp(x18, x4);	o4 += r1;	o18 -= r1;
				r0 = comp(x19, x4);	o4 += r0;	o19 -= r0;
				r1 = comp(x20, x4);	o4 += r1;	o20 -= r1;
				r0 = comp(x21, x4);	o4 += r0;	o21 -= r0;
				r1 = comp(x22, x4);	o4 += r1;
				r0 = comp(x6, x5);	o5 += r0;	o6 -= r0;
				r1 = comp(x7, x5);	o5 += r1;	o7 -= r1;
				r0 = comp(x8, x5);	o5 += r0;	o8 -= r0;
				r1 = comp(x9, x5);	o5 += r1;	o9 -= r1;
				r0 = comp(x10, x5);	o5 += r0;	o10 -= r0;
				r1 = comp(x11, x5);	o5 += r1;	o11 -= r1;
				r0 = comp(x12, x5);	o5 += r0;	o12 -= r0;
				r1 = comp(x13, x5);	o5 += r1;	o13 -= r1;
				r0 = comp(x14, x5);	o5 += r0;	o14 -= r0;
				r1 = comp(x15, x5);	o5 += r1;	o15 -= r1;
				r0 = comp(x16, x5);	o5 += r0;	o16 -= r0;
				r1 = comp(x17, x5);	o5 += r1;	o17 -= r1;
				r0 = comp(x18, x5);	o5 += r0;	o18 -= r0;
				r1 = comp(x19, x5);	o5 += r1;	o19 -= r1;
				r0 = comp(x20, x5);	o5 += r0;	o20 -= r0;
				r1 = comp(x21, x5);	o5 += r1;	o21 -= r1;
				r0 = comp(x22, x5);	o5 += r0;
				r1 = comp(x7, x6);	o6 += r1;	o7 -= r1;
				r0 = comp(x8, x6);	o6 += r0;	o8 -= r0;
				r1 = comp(x9, x6);	o6 += r1;	o9 -= r1;
				r0 = comp(x10, x6);	o6 += r0;	o10 -= r0;
				r1 = comp(x11, x6);	o6 += r1;	o11 -= r1;
				r0 = comp(x12, x6);	o6 += r0;	o12 -= r0;
				r1 = comp(x13, x6);	o6 += r1;	o13 -= r1;
				r0 = comp(x14, x6);	o6 += r0;	o14 -= r0;
				r1 = comp(x15, x6);	o6 += r1;	o15 -= r1;
				r0 = comp(x16, x6);	o6 += r0;	o16 -= r0;
				r1 = comp(x17, x6);	o6 += r1;	o17 -= r1;
				r0 = comp(x18, x6);	o6 += r0;	o18 -= r0;
				r1 = comp(x19, x6);	o6 += r1;	o19 -= r1;
				r0 = comp(x20, x6);	o6 += r0;	o20 -= r0;
				r1 = comp(x21, x6);	o6 += r1;	o21 -= r1;
				r0 = comp(x22, x6);	o6 += r0;
				r1 = comp(x8, x7);	o7 += r1;	o8 -= r1;
				r0 = comp(x9, x7);	o7 += r0;	o9 -= r0;
				r1 = comp(x10, x7);	o7 += r1;	o10 -= r1;
				r0 = comp(x11, x7);	o7 += r0;	o11 -= r0;
				r1 = comp(x12, x7);	o7 += r1;	o12 -= r1;
				r0 = comp(x13, x7);	o7 += r0;	o13 -= r0;
				r1 = comp(x14, x7);	o7 += r1;	o14 -= r1;
				r0 = comp(x15, x7);	o7 += r0;	o15 -= r0;
				r1 = comp(x16, x7);	o7 += r1;	o16 -= r1;
				r0 = comp(x17, x7);	o7 += r0;	o17 -= r0;
				r1 = comp(x18, x7);	o7 += r1;	o18 -= r1;
				r0 = comp(x19, x7);	o7 += r0;	o19 -= r0;
				r1 = comp(x20, x7);	o7 += r1;	o20 -= r1;
				r0 = comp(x21, x7);	o7 += r0;	o21 -= r0;
				r1 = comp(x22, x7);	o7 += r1;
				r0 = comp(x9, x8);	o8 += r0;	o9 -= r0;
				r1 = comp(x10, x8);	o8 += r1;	o10 -= r1;
				r0 = comp(x11, x8);	o8 += r0;	o11 -= r0;
				r1 = comp(x12, x8);	o8 += r1;	o12 -= r1;
				r0 = comp(x13, x8);	o8 += r0;	o13 -= r0;
				r1 = comp(x14, x8);	o8 += r1;	o14 -= r1;
				r0 = comp(x15, x8);	o8 += r0;	o15 -= r0;
				r1 = comp(x16, x8);	o8 += r1;	o16 -= r1;
				r0 = comp(x17, x8);	o8 += r0;	o17 -= r0;
				r1 = comp(x18, x8);	o8 += r1;	o18 -= r1;
				r0 = comp(x19, x8);	o8 += r0;	o19 -= r0;
				r1 = comp(x20, x8);	o8 += r1;	o20 -= r1;
				r0 = comp(x21, x8);	o8 += r0;	o21 -= r0;
				r1 = comp(x22, x8);	o8 += r1;
				r0 = comp(x10, x9);	o9 += r0;	o10 -= r0;
				r1 = comp(x11, x9);	o9 += r1;	o11 -= r1;
				r0 = comp(x12, x9);	o9 += r0;	o12 -= r0;
				r1 = comp(x13, x9);	o9 += r1;	o13 -= r1;
				r0 = comp(x14, x9);	o9 += r0;	o14 -= r0;
				r1 = comp(x15, x9);	o9 += r1;	o15 -= r1;
				r0 = comp(x16, x9);	o9 += r0;	o16 -= r0;
				r1 = comp(x17, x9);	o9 += r1;	o17 -= r1;
				r0 = comp(x18, x9);	o9 += r0;	o18 -= r0;
				r1 = comp(x19, x9);	o9 += r1;	o19 -= r1;
				r0 = comp(x20, x9);	o9 += r0;	o20 -= r0;
				r1 = comp(x21, x9);	o9 += r1;	o21 -= r1;
				r0 = comp(x22, x9);	o9 += r0;
				r1 = comp(x11, x10);	o10 += r1;	o11 -= r1;
				r0 = comp(x12, x10);	o10 += r0;	o12 -= r0;
				r1 = comp(x13, x10);	o10 += r1;	o13 -= r1;
				r0 = comp(x14, x10);	o10 += r0;	o14 -= r0;
				r1 = comp(x15, x10);	o10 += r1;	o15 -= r1;
				r0 = comp(x16, x10);	o10 += r0;	o16 -= r0;
				r1 = comp(x17, x10);	o10 += r1;	o17 -= r1;
				r0 = comp(x18, x10);	o10 += r0;	o18 -= r0;
				r1 = comp(x19, x10);	o10 += r1;	o19 -= r1;
				r0 = comp(x20, x10);	o10 += r0;	o20 -= r0;
				r1 = comp(x21, x10);	o10 += r1;	o21 -= r1;
				r0 = comp(x22, x10);	o10 += r0;
				r1 = comp(x12, x11);	o11 += r1;	o12 -= r1;
				r0 = comp(x13, x11);	o11 += r0;	o13 -= r0;
				r1 = comp(x14, x11);	o11 += r1;	o14 -= r1;
				r0 = comp(x15, x11);	o11 += r0;	o15 -= r0;
				r1 = comp(x16, x11);	o11 += r1;	o16 -= r1;
				r0 = comp(x17, x11);	o11 += r0;	o17 -= r0;
				r1 = comp(x18, x11);	o11 += r1;	o18 -= r1;
				r0 = comp(x19, x11);	o11 += r0;	o19 -= r0;
				r1 = comp(x20, x11);	o11 += r1;	o20 -= r1;
				r0 = comp(x21, x11);	o11 += r0;	o21 -= r0;
				r1 = comp(x22, x11);	o11 += r1;
				r0 = comp(x13, x12);	o12 += r0;	o13 -= r0;
				r1 = comp(x14, x12);	o12 += r1;	o14 -= r1;
				r0 = comp(x15, x12);	o12 += r0;	o15 -= r0;
				r1 = comp(x16, x12);	o12 += r1;	o16 -= r1;
				r0 = comp(x17, x12);	o12 += r0;	o17 -= r0;
				r1 = comp(x18, x12);	o12 += r1;	o18 -= r1;
				r0 = comp(x19, x12);	o12 += r0;	o19 -= r0;
				r1 = comp(x20, x12);	o12 += r1;	o20 -= r1;
				r0 = comp(x21, x12);	o12 += r0;	o21 -= r0;
				r1 = comp(x22, x12);	o12 += r1;
				r0 = comp(x14, x13);	o13 += r0;	o14 -= r0;
				r1 = comp(x15, x13);	o13 += r1;	o15 -= r1;
				r0 = comp(x16, x13);	o13 += r0;	o16 -= r0;
				r1 = comp(x17, x13);	o13 += r1;	o17 -= r1;
				r0 = comp(x18, x13);	o13 += r0;	o18 -= r0;
				r1 = comp(x19, x13);	o13 += r1;	o19 -= r1;
				r0 = comp(x20, x13);	o13 += r0;	o20 -= r0;
				r1 = comp(x21, x13);	o13 += r1;	o21 -= r1;
				r0 = comp(x22, x13);	o13 += r0;
				r1 = comp(x15, x14);	o14 += r1;	o15 -= r1;
				r0 = comp(x16, x14);	o14 += r0;	o16 -= r0;
				r1 = comp(x17, x14);	o14 += r1;	o17 -= r1;
				r0 = comp(x18, x14);	o14 += r0;	o18 -= r0;
				r1 = comp(x19, x14);	o14 += r1;	o19 -= r1;
				r0 = comp(x20, x14);	o14 += r0;	o20 -= r0;
				r1 = comp(x21, x14);	o14 += r1;	o21 -= r1;
				r0 = comp(x22, x14);	o14 += r0;
				r1 = comp(x16, x15);	o15 += r1;	o16 -= r1;
				r0 = comp(x17, x15);	o15 += r0;	o17 -= r0;
				r1 = comp(x18, x15);	o15 += r1;	o18 -= r1;
				r0 = comp(x19, x15);	o15 += r0;	o19 -= r0;
				r1 = comp(x20, x15);	o15 += r1;	o20 -= r1;
				r0 = comp(x21, x15);	o15 += r0;	o21 -= r0;
				r1 = comp(x22, x15);	o15 += r1;
				r0 = comp(x17, x16);	o16 += r0;	o17 -= r0;
				r1 = comp(x18, x16);	o16 += r1;	o18 -= r1;
				r0 = comp(x19, x16);	o16 += r0;	o19 -= r0;
				r1 = comp(x20, x16);	o16 += r1;	o20 -= r1;
				r0 = comp(x21, x16);	o16 += r0;	o21 -= r0;
				r1 = comp(x22, x16);	o16 += r1;
				r0 = comp(x18, x17);	o17 += r0;	o18 -= r0;
				r1 = comp(x19, x17);	o17 += r1;	o19 -= r1;
				r0 = comp(x20, x17);	o17 += r0;	o20 -= r0;
				r1 = comp(x21, x17);	o17 += r1;	o21 -= r1;
				r0 = comp(x22, x17);	o17 += r0;
				r1 = comp(x19, x18);	o18 += r1;	o19 -= r1;
				r0 = comp(x20, x18);	o18 += r0;	o20 -= r0;
				r1 = comp(x21, x18);	o18 += r1;	o21 -= r1;
				r0 = comp(x22, x18);	o18 += r0;
				r1 = comp(x20, x19);	o19 += r1;	o20 -= r1;
				r0 = comp(x21, x19);	o19 += r0;	o21 -= r0;
				r1 = comp(x22, x19);	o19 += r1;
				r0 = comp(x21, x20);	o20 += r0;	o21 -= r0;
				r1 = comp(x22, x20);	o20 += r1;
				r0 = comp(x22, x21);	o21 += r0;
				o22 = 253 - o0 - o1 - o2 - o3 - o4 - o5 - o6 - o7 - o8 - o9 - o10 - o11 - o12 - o13 - o14 - o15 - o16 - o17 - o18 - o19 - o20 - o21;
				arr[o0] = x0;
				arr[o1] = x1;
				arr[o2] = x2;
				arr[o3] = x3;
				arr[o4] = x4;
				arr[o5] = x5;
				arr[o6] = x6;
				arr[o7] = x7;
				arr[o8] = x8;
				arr[o9] = x9;
				arr[o10] = x10;
				arr[o11] = x11;
				arr[o12] = x12;
				arr[o13] = x13;
				arr[o14] = x14;
				arr[o15] = x15;
				arr[o16] = x16;
				arr[o17] = x17;
				arr[o18] = x18;
				arr[o19] = x19;
				arr[o20] = x20;
				arr[o21] = x21;
				arr[o22] = x22;

				FinishingSorter{}(arr, 23);
			}

			void sort24(T* arr)
			{
				T x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23;
				x0 = arr[0];
				x1 = arr[1];
				x2 = arr[2];
				x3 = arr[3];
				x4 = arr[4];
				x5 = arr[5];
				x6 = arr[6];
				x7 = arr[7];
				x8 = arr[8];
				x9 = arr[9];
				x10 = arr[10];
				x11 = arr[11];
				x12 = arr[12];
				x13 = arr[13];
				x14 = arr[14];
				x15 = arr[15];
				x16 = arr[16];
				x17 = arr[17];
				x18 = arr[18];
				x19 = arr[19];
				x20 = arr[20];
				x21 = arr[21];
				x22 = arr[22];
				x23 = arr[23];
				int o0 = 0, o1 = 1, o2 = 2, o3 = 3, o4 = 4, o5 = 5, o6 = 6, o7 = 7, o8 = 8, o9 = 9, o10 = 10, o11 = 11, o12 = 12, o13 = 13, o14 = 14, o15 = 15, o16 = 16, o17 = 17, o18 = 18, o19 = 19, o20 = 20, o21 = 21, o22 = 22, o23 = 0;
				auto r0 = comp(x1, x0);	o0 += r0;	o1 -= r0;
				auto r1 = comp(x2, x0);	o0 += r1;	o2 -= r1;
				r0 = comp(x3, x0);	o0 += r0;	o3 -= r0;
				r1 = comp(x4, x0);	o0 += r1;	o4 -= r1;
				r0 = comp(x5, x0);	o0 += r0;	o5 -= r0;
				r1 = comp(x6, x0);	o0 += r1;	o6 -= r1;
				r0 = comp(x7, x0);	o0 += r0;	o7 -= r0;
				r1 = comp(x8, x0);	o0 += r1;	o8 -= r1;
				r0 = comp(x9, x0);	o0 += r0;	o9 -= r0;
				r1 = comp(x10, x0);	o0 += r1;	o10 -= r1;
				r0 = comp(x11, x0);	o0 += r0;	o11 -= r0;
				r1 = comp(x12, x0);	o0 += r1;	o12 -= r1;
				r0 = comp(x13, x0);	o0 += r0;	o13 -= r0;
				r1 = comp(x14, x0);	o0 += r1;	o14 -= r1;
				r0 = comp(x15, x0);	o0 += r0;	o15 -= r0;
				r1 = comp(x16, x0);	o0 += r1;	o16 -= r1;
				r0 = comp(x17, x0);	o0 += r0;	o17 -= r0;
				r1 = comp(x18, x0);	o0 += r1;	o18 -= r1;
				r0 = comp(x19, x0);	o0 += r0;	o19 -= r0;
				r1 = comp(x20, x0);	o0 += r1;	o20 -= r1;
				r0 = comp(x21, x0);	o0 += r0;	o21 -= r0;
				r1 = comp(x22, x0);	o0 += r1;	o22 -= r1;
				r0 = comp(x23, x0);	o0 += r0;
				r1 = comp(x2, x1);	o1 += r1;	o2 -= r1;
				r0 = comp(x3, x1);	o1 += r0;	o3 -= r0;
				r1 = comp(x4, x1);	o1 += r1;	o4 -= r1;
				r0 = comp(x5, x1);	o1 += r0;	o5 -= r0;
				r1 = comp(x6, x1);	o1 += r1;	o6 -= r1;
				r0 = comp(x7, x1);	o1 += r0;	o7 -= r0;
				r1 = comp(x8, x1);	o1 += r1;	o8 -= r1;
				r0 = comp(x9, x1);	o1 += r0;	o9 -= r0;
				r1 = comp(x10, x1);	o1 += r1;	o10 -= r1;
				r0 = comp(x11, x1);	o1 += r0;	o11 -= r0;
				r1 = comp(x12, x1);	o1 += r1;	o12 -= r1;
				r0 = comp(x13, x1);	o1 += r0;	o13 -= r0;
				r1 = comp(x14, x1);	o1 += r1;	o14 -= r1;
				r0 = comp(x15, x1);	o1 += r0;	o15 -= r0;
				r1 = comp(x16, x1);	o1 += r1;	o16 -= r1;
				r0 = comp(x17, x1);	o1 += r0;	o17 -= r0;
				r1 = comp(x18, x1);	o1 += r1;	o18 -= r1;
				r0 = comp(x19, x1);	o1 += r0;	o19 -= r0;
				r1 = comp(x20, x1);	o1 += r1;	o20 -= r1;
				r0 = comp(x21, x1);	o1 += r0;	o21 -= r0;
				r1 = comp(x22, x1);	o1 += r1;	o22 -= r1;
				r0 = comp(x23, x1);	o1 += r0;
				r1 = comp(x3, x2);	o2 += r1;	o3 -= r1;
				r0 = comp(x4, x2);	o2 += r0;	o4 -= r0;
				r1 = comp(x5, x2);	o2 += r1;	o5 -= r1;
				r0 = comp(x6, x2);	o2 += r0;	o6 -= r0;
				r1 = comp(x7, x2);	o2 += r1;	o7 -= r1;
				r0 = comp(x8, x2);	o2 += r0;	o8 -= r0;
				r1 = comp(x9, x2);	o2 += r1;	o9 -= r1;
				r0 = comp(x10, x2);	o2 += r0;	o10 -= r0;
				r1 = comp(x11, x2);	o2 += r1;	o11 -= r1;
				r0 = comp(x12, x2);	o2 += r0;	o12 -= r0;
				r1 = comp(x13, x2);	o2 += r1;	o13 -= r1;
				r0 = comp(x14, x2);	o2 += r0;	o14 -= r0;
				r1 = comp(x15, x2);	o2 += r1;	o15 -= r1;
				r0 = comp(x16, x2);	o2 += r0;	o16 -= r0;
				r1 = comp(x17, x2);	o2 += r1;	o17 -= r1;
				r0 = comp(x18, x2);	o2 += r0;	o18 -= r0;
				r1 = comp(x19, x2);	o2 += r1;	o19 -= r1;
				r0 = comp(x20, x2);	o2 += r0;	o20 -= r0;
				r1 = comp(x21, x2);	o2 += r1;	o21 -= r1;
				r0 = comp(x22, x2);	o2 += r0;	o22 -= r0;
				r1 = comp(x23, x2);	o2 += r1;
				r0 = comp(x4, x3);	o3 += r0;	o4 -= r0;
				r1 = comp(x5, x3);	o3 += r1;	o5 -= r1;
				r0 = comp(x6, x3);	o3 += r0;	o6 -= r0;
				r1 = comp(x7, x3);	o3 += r1;	o7 -= r1;
				r0 = comp(x8, x3);	o3 += r0;	o8 -= r0;
				r1 = comp(x9, x3);	o3 += r1;	o9 -= r1;
				r0 = comp(x10, x3);	o3 += r0;	o10 -= r0;
				r1 = comp(x11, x3);	o3 += r1;	o11 -= r1;
				r0 = comp(x12, x3);	o3 += r0;	o12 -= r0;
				r1 = comp(x13, x3);	o3 += r1;	o13 -= r1;
				r0 = comp(x14, x3);	o3 += r0;	o14 -= r0;
				r1 = comp(x15, x3);	o3 += r1;	o15 -= r1;
				r0 = comp(x16, x3);	o3 += r0;	o16 -= r0;
				r1 = comp(x17, x3);	o3 += r1;	o17 -= r1;
				r0 = comp(x18, x3);	o3 += r0;	o18 -= r0;
				r1 = comp(x19, x3);	o3 += r1;	o19 -= r1;
				r0 = comp(x20, x3);	o3 += r0;	o20 -= r0;
				r1 = comp(x21, x3);	o3 += r1;	o21 -= r1;
				r0 = comp(x22, x3);	o3 += r0;	o22 -= r0;
				r1 = comp(x23, x3);	o3 += r1;
				r0 = comp(x5, x4);	o4 += r0;	o5 -= r0;
				r1 = comp(x6, x4);	o4 += r1;	o6 -= r1;
				r0 = comp(x7, x4);	o4 += r0;	o7 -= r0;
				r1 = comp(x8, x4);	o4 += r1;	o8 -= r1;
				r0 = comp(x9, x4);	o4 += r0;	o9 -= r0;
				r1 = comp(x10, x4);	o4 += r1;	o10 -= r1;
				r0 = comp(x11, x4);	o4 += r0;	o11 -= r0;
				r1 = comp(x12, x4);	o4 += r1;	o12 -= r1;
				r0 = comp(x13, x4);	o4 += r0;	o13 -= r0;
				r1 = comp(x14, x4);	o4 += r1;	o14 -= r1;
				r0 = comp(x15, x4);	o4 += r0;	o15 -= r0;
				r1 = comp(x16, x4);	o4 += r1;	o16 -= r1;
				r0 = comp(x17, x4);	o4 += r0;	o17 -= r0;
				r1 = comp(x18, x4);	o4 += r1;	o18 -= r1;
				r0 = comp(x19, x4);	o4 += r0;	o19 -= r0;
				r1 = comp(x20, x4);	o4 += r1;	o20 -= r1;
				r0 = comp(x21, x4);	o4 += r0;	o21 -= r0;
				r1 = comp(x22, x4);	o4 += r1;	o22 -= r1;
				r0 = comp(x23, x4);	o4 += r0;
				r1 = comp(x6, x5);	o5 += r1;	o6 -= r1;
				r0 = comp(x7, x5);	o5 += r0;	o7 -= r0;
				r1 = comp(x8, x5);	o5 += r1;	o8 -= r1;
				r0 = comp(x9, x5);	o5 += r0;	o9 -= r0;
				r1 = comp(x10, x5);	o5 += r1;	o10 -= r1;
				r0 = comp(x11, x5);	o5 += r0;	o11 -= r0;
				r1 = comp(x12, x5);	o5 += r1;	o12 -= r1;
				r0 = comp(x13, x5);	o5 += r0;	o13 -= r0;
				r1 = comp(x14, x5);	o5 += r1;	o14 -= r1;
				r0 = comp(x15, x5);	o5 += r0;	o15 -= r0;
				r1 = comp(x16, x5);	o5 += r1;	o16 -= r1;
				r0 = comp(x17, x5);	o5 += r0;	o17 -= r0;
				r1 = comp(x18, x5);	o5 += r1;	o18 -= r1;
				r0 = comp(x19, x5);	o5 += r0;	o19 -= r0;
				r1 = comp(x20, x5);	o5 += r1;	o20 -= r1;
				r0 = comp(x21, x5);	o5 += r0;	o21 -= r0;
				r1 = comp(x22, x5);	o5 += r1;	o22 -= r1;
				r0 = comp(x23, x5);	o5 += r0;
				r1 = comp(x7, x6);	o6 += r1;	o7 -= r1;
				r0 = comp(x8, x6);	o6 += r0;	o8 -= r0;
				r1 = comp(x9, x6);	o6 += r1;	o9 -= r1;
				r0 = comp(x10, x6);	o6 += r0;	o10 -= r0;
				r1 = comp(x11, x6);	o6 += r1;	o11 -= r1;
				r0 = comp(x12, x6);	o6 += r0;	o12 -= r0;
				r1 = comp(x13, x6);	o6 += r1;	o13 -= r1;
				r0 = comp(x14, x6);	o6 += r0;	o14 -= r0;
				r1 = comp(x15, x6);	o6 += r1;	o15 -= r1;
				r0 = comp(x16, x6);	o6 += r0;	o16 -= r0;
				r1 = comp(x17, x6);	o6 += r1;	o17 -= r1;
				r0 = comp(x18, x6);	o6 += r0;	o18 -= r0;
				r1 = comp(x19, x6);	o6 += r1;	o19 -= r1;
				r0 = comp(x20, x6);	o6 += r0;	o20 -= r0;
				r1 = comp(x21, x6);	o6 += r1;	o21 -= r1;
				r0 = comp(x22, x6);	o6 += r0;	o22 -= r0;
				r1 = comp(x23, x6);	o6 += r1;
				r0 = comp(x8, x7);	o7 += r0;	o8 -= r0;
				r1 = comp(x9, x7);	o7 += r1;	o9 -= r1;
				r0 = comp(x10, x7);	o7 += r0;	o10 -= r0;
				r1 = comp(x11, x7);	o7 += r1;	o11 -= r1;
				r0 = comp(x12, x7);	o7 += r0;	o12 -= r0;
				r1 = comp(x13, x7);	o7 += r1;	o13 -= r1;
				r0 = comp(x14, x7);	o7 += r0;	o14 -= r0;
				r1 = comp(x15, x7);	o7 += r1;	o15 -= r1;
				r0 = comp(x16, x7);	o7 += r0;	o16 -= r0;
				r1 = comp(x17, x7);	o7 += r1;	o17 -= r1;
				r0 = comp(x18, x7);	o7 += r0;	o18 -= r0;
				r1 = comp(x19, x7);	o7 += r1;	o19 -= r1;
				r0 = comp(x20, x7);	o7 += r0;	o20 -= r0;
				r1 = comp(x21, x7);	o7 += r1;	o21 -= r1;
				r0 = comp(x22, x7);	o7 += r0;	o22 -= r0;
				r1 = comp(x23, x7);	o7 += r1;
				r0 = comp(x9, x8);	o8 += r0;	o9 -= r0;
				r1 = comp(x10, x8);	o8 += r1;	o10 -= r1;
				r0 = comp(x11, x8);	o8 += r0;	o11 -= r0;
				r1 = comp(x12, x8);	o8 += r1;	o12 -= r1;
				r0 = comp(x13, x8);	o8 += r0;	o13 -= r0;
				r1 = comp(x14, x8);	o8 += r1;	o14 -= r1;
				r0 = comp(x15, x8);	o8 += r0;	o15 -= r0;
				r1 = comp(x16, x8);	o8 += r1;	o16 -= r1;
				r0 = comp(x17, x8);	o8 += r0;	o17 -= r0;
				r1 = comp(x18, x8);	o8 += r1;	o18 -= r1;
				r0 = comp(x19, x8);	o8 += r0;	o19 -= r0;
				r1 = comp(x20, x8);	o8 += r1;	o20 -= r1;
				r0 = comp(x21, x8);	o8 += r0;	o21 -= r0;
				r1 = comp(x22, x8);	o8 += r1;	o22 -= r1;
				r0 = comp(x23, x8);	o8 += r0;
				r1 = comp(x10, x9);	o9 += r1;	o10 -= r1;
				r0 = comp(x11, x9);	o9 += r0;	o11 -= r0;
				r1 = comp(x12, x9);	o9 += r1;	o12 -= r1;
				r0 = comp(x13, x9);	o9 += r0;	o13 -= r0;
				r1 = comp(x14, x9);	o9 += r1;	o14 -= r1;
				r0 = comp(x15, x9);	o9 += r0;	o15 -= r0;
				r1 = comp(x16, x9);	o9 += r1;	o16 -= r1;
				r0 = comp(x17, x9);	o9 += r0;	o17 -= r0;
				r1 = comp(x18, x9);	o9 += r1;	o18 -= r1;
				r0 = comp(x19, x9);	o9 += r0;	o19 -= r0;
				r1 = comp(x20, x9);	o9 += r1;	o20 -= r1;
				r0 = comp(x21, x9);	o9 += r0;	o21 -= r0;
				r1 = comp(x22, x9);	o9 += r1;	o22 -= r1;
				r0 = comp(x23, x9);	o9 += r0;
				r1 = comp(x11, x10);	o10 += r1;	o11 -= r1;
				r0 = comp(x12, x10);	o10 += r0;	o12 -= r0;
				r1 = comp(x13, x10);	o10 += r1;	o13 -= r1;
				r0 = comp(x14, x10);	o10 += r0;	o14 -= r0;
				r1 = comp(x15, x10);	o10 += r1;	o15 -= r1;
				r0 = comp(x16, x10);	o10 += r0;	o16 -= r0;
				r1 = comp(x17, x10);	o10 += r1;	o17 -= r1;
				r0 = comp(x18, x10);	o10 += r0;	o18 -= r0;
				r1 = comp(x19, x10);	o10 += r1;	o19 -= r1;
				r0 = comp(x20, x10);	o10 += r0;	o20 -= r0;
				r1 = comp(x21, x10);	o10 += r1;	o21 -= r1;
				r0 = comp(x22, x10);	o10 += r0;	o22 -= r0;
				r1 = comp(x23, x10);	o10 += r1;
				r0 = comp(x12, x11);	o11 += r0;	o12 -= r0;
				r1 = comp(x13, x11);	o11 += r1;	o13 -= r1;
				r0 = comp(x14, x11);	o11 += r0;	o14 -= r0;
				r1 = comp(x15, x11);	o11 += r1;	o15 -= r1;
				r0 = comp(x16, x11);	o11 += r0;	o16 -= r0;
				r1 = comp(x17, x11);	o11 += r1;	o17 -= r1;
				r0 = comp(x18, x11);	o11 += r0;	o18 -= r0;
				r1 = comp(x19, x11);	o11 += r1;	o19 -= r1;
				r0 = comp(x20, x11);	o11 += r0;	o20 -= r0;
				r1 = comp(x21, x11);	o11 += r1;	o21 -= r1;
				r0 = comp(x22, x11);	o11 += r0;	o22 -= r0;
				r1 = comp(x23, x11);	o11 += r1;
				r0 = comp(x13, x12);	o12 += r0;	o13 -= r0;
				r1 = comp(x14, x12);	o12 += r1;	o14 -= r1;
				r0 = comp(x15, x12);	o12 += r0;	o15 -= r0;
				r1 = comp(x16, x12);	o12 += r1;	o16 -= r1;
				r0 = comp(x17, x12);	o12 += r0;	o17 -= r0;
				r1 = comp(x18, x12);	o12 += r1;	o18 -= r1;
				r0 = comp(x19, x12);	o12 += r0;	o19 -= r0;
				r1 = comp(x20, x12);	o12 += r1;	o20 -= r1;
				r0 = comp(x21, x12);	o12 += r0;	o21 -= r0;
				r1 = comp(x22, x12);	o12 += r1;	o22 -= r1;
				r0 = comp(x23, x12);	o12 += r0;
				r1 = comp(x14, x13);	o13 += r1;	o14 -= r1;
				r0 = comp(x15, x13);	o13 += r0;	o15 -= r0;
				r1 = comp(x16, x13);	o13 += r1;	o16 -= r1;
				r0 = comp(x17, x13);	o13 += r0;	o17 -= r0;
				r1 = comp(x18, x13);	o13 += r1;	o18 -= r1;
				r0 = comp(x19, x13);	o13 += r0;	o19 -= r0;
				r1 = comp(x20, x13);	o13 += r1;	o20 -= r1;
				r0 = comp(x21, x13);	o13 += r0;	o21 -= r0;
				r1 = comp(x22, x13);	o13 += r1;	o22 -= r1;
				r0 = comp(x23, x13);	o13 += r0;
				r1 = comp(x15, x14);	o14 += r1;	o15 -= r1;
				r0 = comp(x16, x14);	o14 += r0;	o16 -= r0;
				r1 = comp(x17, x14);	o14 += r1;	o17 -= r1;
				r0 = comp(x18, x14);	o14 += r0;	o18 -= r0;
				r1 = comp(x19, x14);	o14 += r1;	o19 -= r1;
				r0 = comp(x20, x14);	o14 += r0;	o20 -= r0;
				r1 = comp(x21, x14);	o14 += r1;	o21 -= r1;
				r0 = comp(x22, x14);	o14 += r0;	o22 -= r0;
				r1 = comp(x23, x14);	o14 += r1;
				r0 = comp(x16, x15);	o15 += r0;	o16 -= r0;
				r1 = comp(x17, x15);	o15 += r1;	o17 -= r1;
				r0 = comp(x18, x15);	o15 += r0;	o18 -= r0;
				r1 = comp(x19, x15);	o15 += r1;	o19 -= r1;
				r0 = comp(x20, x15);	o15 += r0;	o20 -= r0;
				r1 = comp(x21, x15);	o15 += r1;	o21 -= r1;
				r0 = comp(x22, x15);	o15 += r0;	o22 -= r0;
				r1 = comp(x23, x15);	o15 += r1;
				r0 = comp(x17, x16);	o16 += r0;	o17 -= r0;
				r1 = comp(x18, x16);	o16 += r1;	o18 -= r1;
				r0 = comp(x19, x16);	o16 += r0;	o19 -= r0;
				r1 = comp(x20, x16);	o16 += r1;	o20 -= r1;
				r0 = comp(x21, x16);	o16 += r0;	o21 -= r0;
				r1 = comp(x22, x16);	o16 += r1;	o22 -= r1;
				r0 = comp(x23, x16);	o16 += r0;
				r1 = comp(x18, x17);	o17 += r1;	o18 -= r1;
				r0 = comp(x19, x17);	o17 += r0;	o19 -= r0;
				r1 = comp(x20, x17);	o17 += r1;	o20 -= r1;
				r0 = comp(x21, x17);	o17 += r0;	o21 -= r0;
				r1 = comp(x22, x17);	o17 += r1;	o22 -= r1;
				r0 = comp(x23, x17);	o17 += r0;
				r1 = comp(x19, x18);	o18 += r1;	o19 -= r1;
				r0 = comp(x20, x18);	o18 += r0;	o20 -= r0;
				r1 = comp(x21, x18);	o18 += r1;	o21 -= r1;
				r0 = comp(x22, x18);	o18 += r0;	o22 -= r0;
				r1 = comp(x23, x18);	o18 += r1;
				r0 = comp(x20, x19);	o19 += r0;	o20 -= r0;
				r1 = comp(x21, x19);	o19 += r1;	o21 -= r1;
				r0 = comp(x22, x19);	o19 += r0;	o22 -= r0;
				r1 = comp(x23, x19);	o19 += r1;
				r0 = comp(x21, x20);	o20 += r0;	o21 -= r0;
				r1 = comp(x22, x20);	o20 += r1;	o22 -= r1;
				r0 = comp(x23, x20);	o20 += r0;
				r1 = comp(x22, x21);	o21 += r1;	o22 -= r1;
				r0 = comp(x23, x21);	o21 += r0;
				r1 = comp(x23, x22);	o22 += r1;
				o23 = 276 - o0 - o1 - o2 - o3 - o4 - o5 - o6 - o7 - o8 - o9 - o10 - o11 - o12 - o13 - o14 - o15 - o16 - o17 - o18 - o19 - o20 - o21 - o22;
				arr[o0] = x0;
				arr[o1] = x1;
				arr[o2] = x2;
				arr[o3] = x3;
				arr[o4] = x4;
				arr[o5] = x5;
				arr[o6] = x6;
				arr[o7] = x7;
				arr[o8] = x8;
				arr[o9] = x9;
				arr[o10] = x10;
				arr[o11] = x11;
				arr[o12] = x12;
				arr[o13] = x13;
				arr[o14] = x14;
				arr[o15] = x15;
				arr[o16] = x16;
				arr[o17] = x17;
				arr[o18] = x18;
				arr[o19] = x19;
				arr[o20] = x20;
				arr[o21] = x21;
				arr[o22] = x22;
				arr[o23] = x23;

				FinishingSorter{}(arr, 24);
			}

			void sort25(T* arr)
			{
				T x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24;
				x0 = arr[0];
				x1 = arr[1];
				x2 = arr[2];
				x3 = arr[3];
				x4 = arr[4];
				x5 = arr[5];
				x6 = arr[6];
				x7 = arr[7];
				x8 = arr[8];
				x9 = arr[9];
				x10 = arr[10];
				x11 = arr[11];
				x12 = arr[12];
				x13 = arr[13];
				x14 = arr[14];
				x15 = arr[15];
				x16 = arr[16];
				x17 = arr[17];
				x18 = arr[18];
				x19 = arr[19];
				x20 = arr[20];
				x21 = arr[21];
				x22 = arr[22];
				x23 = arr[23];
				x24 = arr[24];
				int o0 = 0, o1 = 1, o2 = 2, o3 = 3, o4 = 4, o5 = 5, o6 = 6, o7 = 7, o8 = 8, o9 = 9, o10 = 10, o11 = 11, o12 = 12, o13 = 13, o14 = 14, o15 = 15, o16 = 16, o17 = 17, o18 = 18, o19 = 19, o20 = 20, o21 = 21, o22 = 22, o23 = 23, o24 = 0;
				auto r0 = comp(x1, x0);	o0 += r0;	o1 -= r0;
				auto r1 = comp(x2, x0);	o0 += r1;	o2 -= r1;
				r0 = comp(x3, x0);	o0 += r0;	o3 -= r0;
				r1 = comp(x4, x0);	o0 += r1;	o4 -= r1;
				r0 = comp(x5, x0);	o0 += r0;	o5 -= r0;
				r1 = comp(x6, x0);	o0 += r1;	o6 -= r1;
				r0 = comp(x7, x0);	o0 += r0;	o7 -= r0;
				r1 = comp(x8, x0);	o0 += r1;	o8 -= r1;
				r0 = comp(x9, x0);	o0 += r0;	o9 -= r0;
				r1 = comp(x10, x0);	o0 += r1;	o10 -= r1;
				r0 = comp(x11, x0);	o0 += r0;	o11 -= r0;
				r1 = comp(x12, x0);	o0 += r1;	o12 -= r1;
				r0 = comp(x13, x0);	o0 += r0;	o13 -= r0;
				r1 = comp(x14, x0);	o0 += r1;	o14 -= r1;
				r0 = comp(x15, x0);	o0 += r0;	o15 -= r0;
				r1 = comp(x16, x0);	o0 += r1;	o16 -= r1;
				r0 = comp(x17, x0);	o0 += r0;	o17 -= r0;
				r1 = comp(x18, x0);	o0 += r1;	o18 -= r1;
				r0 = comp(x19, x0);	o0 += r0;	o19 -= r0;
				r1 = comp(x20, x0);	o0 += r1;	o20 -= r1;
				r0 = comp(x21, x0);	o0 += r0;	o21 -= r0;
				r1 = comp(x22, x0);	o0 += r1;	o22 -= r1;
				r0 = comp(x23, x0);	o0 += r0;	o23 -= r0;
				r1 = comp(x24, x0);	o0 += r1;
				r0 = comp(x2, x1);	o1 += r0;	o2 -= r0;
				r1 = comp(x3, x1);	o1 += r1;	o3 -= r1;
				r0 = comp(x4, x1);	o1 += r0;	o4 -= r0;
				r1 = comp(x5, x1);	o1 += r1;	o5 -= r1;
				r0 = comp(x6, x1);	o1 += r0;	o6 -= r0;
				r1 = comp(x7, x1);	o1 += r1;	o7 -= r1;
				r0 = comp(x8, x1);	o1 += r0;	o8 -= r0;
				r1 = comp(x9, x1);	o1 += r1;	o9 -= r1;
				r0 = comp(x10, x1);	o1 += r0;	o10 -= r0;
				r1 = comp(x11, x1);	o1 += r1;	o11 -= r1;
				r0 = comp(x12, x1);	o1 += r0;	o12 -= r0;
				r1 = comp(x13, x1);	o1 += r1;	o13 -= r1;
				r0 = comp(x14, x1);	o1 += r0;	o14 -= r0;
				r1 = comp(x15, x1);	o1 += r1;	o15 -= r1;
				r0 = comp(x16, x1);	o1 += r0;	o16 -= r0;
				r1 = comp(x17, x1);	o1 += r1;	o17 -= r1;
				r0 = comp(x18, x1);	o1 += r0;	o18 -= r0;
				r1 = comp(x19, x1);	o1 += r1;	o19 -= r1;
				r0 = comp(x20, x1);	o1 += r0;	o20 -= r0;
				r1 = comp(x21, x1);	o1 += r1;	o21 -= r1;
				r0 = comp(x22, x1);	o1 += r0;	o22 -= r0;
				r1 = comp(x23, x1);	o1 += r1;	o23 -= r1;
				r0 = comp(x24, x1);	o1 += r0;
				r1 = comp(x3, x2);	o2 += r1;	o3 -= r1;
				r0 = comp(x4, x2);	o2 += r0;	o4 -= r0;
				r1 = comp(x5, x2);	o2 += r1;	o5 -= r1;
				r0 = comp(x6, x2);	o2 += r0;	o6 -= r0;
				r1 = comp(x7, x2);	o2 += r1;	o7 -= r1;
				r0 = comp(x8, x2);	o2 += r0;	o8 -= r0;
				r1 = comp(x9, x2);	o2 += r1;	o9 -= r1;
				r0 = comp(x10, x2);	o2 += r0;	o10 -= r0;
				r1 = comp(x11, x2);	o2 += r1;	o11 -= r1;
				r0 = comp(x12, x2);	o2 += r0;	o12 -= r0;
				r1 = comp(x13, x2);	o2 += r1;	o13 -= r1;
				r0 = comp(x14, x2);	o2 += r0;	o14 -= r0;
				r1 = comp(x15, x2);	o2 += r1;	o15 -= r1;
				r0 = comp(x16, x2);	o2 += r0;	o16 -= r0;
				r1 = comp(x17, x2);	o2 += r1;	o17 -= r1;
				r0 = comp(x18, x2);	o2 += r0;	o18 -= r0;
				r1 = comp(x19, x2);	o2 += r1;	o19 -= r1;
				r0 = comp(x20, x2);	o2 += r0;	o20 -= r0;
				r1 = comp(x21, x2);	o2 += r1;	o21 -= r1;
				r0 = comp(x22, x2);	o2 += r0;	o22 -= r0;
				r1 = comp(x23, x2);	o2 += r1;	o23 -= r1;
				r0 = comp(x24, x2);	o2 += r0;
				r1 = comp(x4, x3);	o3 += r1;	o4 -= r1;
				r0 = comp(x5, x3);	o3 += r0;	o5 -= r0;
				r1 = comp(x6, x3);	o3 += r1;	o6 -= r1;
				r0 = comp(x7, x3);	o3 += r0;	o7 -= r0;
				r1 = comp(x8, x3);	o3 += r1;	o8 -= r1;
				r0 = comp(x9, x3);	o3 += r0;	o9 -= r0;
				r1 = comp(x10, x3);	o3 += r1;	o10 -= r1;
				r0 = comp(x11, x3);	o3 += r0;	o11 -= r0;
				r1 = comp(x12, x3);	o3 += r1;	o12 -= r1;
				r0 = comp(x13, x3);	o3 += r0;	o13 -= r0;
				r1 = comp(x14, x3);	o3 += r1;	o14 -= r1;
				r0 = comp(x15, x3);	o3 += r0;	o15 -= r0;
				r1 = comp(x16, x3);	o3 += r1;	o16 -= r1;
				r0 = comp(x17, x3);	o3 += r0;	o17 -= r0;
				r1 = comp(x18, x3);	o3 += r1;	o18 -= r1;
				r0 = comp(x19, x3);	o3 += r0;	o19 -= r0;
				r1 = comp(x20, x3);	o3 += r1;	o20 -= r1;
				r0 = comp(x21, x3);	o3 += r0;	o21 -= r0;
				r1 = comp(x22, x3);	o3 += r1;	o22 -= r1;
				r0 = comp(x23, x3);	o3 += r0;	o23 -= r0;
				r1 = comp(x24, x3);	o3 += r1;
				r0 = comp(x5, x4);	o4 += r0;	o5 -= r0;
				r1 = comp(x6, x4);	o4 += r1;	o6 -= r1;
				r0 = comp(x7, x4);	o4 += r0;	o7 -= r0;
				r1 = comp(x8, x4);	o4 += r1;	o8 -= r1;
				r0 = comp(x9, x4);	o4 += r0;	o9 -= r0;
				r1 = comp(x10, x4);	o4 += r1;	o10 -= r1;
				r0 = comp(x11, x4);	o4 += r0;	o11 -= r0;
				r1 = comp(x12, x4);	o4 += r1;	o12 -= r1;
				r0 = comp(x13, x4);	o4 += r0;	o13 -= r0;
				r1 = comp(x14, x4);	o4 += r1;	o14 -= r1;
				r0 = comp(x15, x4);	o4 += r0;	o15 -= r0;
				r1 = comp(x16, x4);	o4 += r1;	o16 -= r1;
				r0 = comp(x17, x4);	o4 += r0;	o17 -= r0;
				r1 = comp(x18, x4);	o4 += r1;	o18 -= r1;
				r0 = comp(x19, x4);	o4 += r0;	o19 -= r0;
				r1 = comp(x20, x4);	o4 += r1;	o20 -= r1;
				r0 = comp(x21, x4);	o4 += r0;	o21 -= r0;
				r1 = comp(x22, x4);	o4 += r1;	o22 -= r1;
				r0 = comp(x23, x4);	o4 += r0;	o23 -= r0;
				r1 = comp(x24, x4);	o4 += r1;
				r0 = comp(x6, x5);	o5 += r0;	o6 -= r0;
				r1 = comp(x7, x5);	o5 += r1;	o7 -= r1;
				r0 = comp(x8, x5);	o5 += r0;	o8 -= r0;
				r1 = comp(x9, x5);	o5 += r1;	o9 -= r1;
				r0 = comp(x10, x5);	o5 += r0;	o10 -= r0;
				r1 = comp(x11, x5);	o5 += r1;	o11 -= r1;
				r0 = comp(x12, x5);	o5 += r0;	o12 -= r0;
				r1 = comp(x13, x5);	o5 += r1;	o13 -= r1;
				r0 = comp(x14, x5);	o5 += r0;	o14 -= r0;
				r1 = comp(x15, x5);	o5 += r1;	o15 -= r1;
				r0 = comp(x16, x5);	o5 += r0;	o16 -= r0;
				r1 = comp(x17, x5);	o5 += r1;	o17 -= r1;
				r0 = comp(x18, x5);	o5 += r0;	o18 -= r0;
				r1 = comp(x19, x5);	o5 += r1;	o19 -= r1;
				r0 = comp(x20, x5);	o5 += r0;	o20 -= r0;
				r1 = comp(x21, x5);	o5 += r1;	o21 -= r1;
				r0 = comp(x22, x5);	o5 += r0;	o22 -= r0;
				r1 = comp(x23, x5);	o5 += r1;	o23 -= r1;
				r0 = comp(x24, x5);	o5 += r0;
				r1 = comp(x7, x6);	o6 += r1;	o7 -= r1;
				r0 = comp(x8, x6);	o6 += r0;	o8 -= r0;
				r1 = comp(x9, x6);	o6 += r1;	o9 -= r1;
				r0 = comp(x10, x6);	o6 += r0;	o10 -= r0;
				r1 = comp(x11, x6);	o6 += r1;	o11 -= r1;
				r0 = comp(x12, x6);	o6 += r0;	o12 -= r0;
				r1 = comp(x13, x6);	o6 += r1;	o13 -= r1;
				r0 = comp(x14, x6);	o6 += r0;	o14 -= r0;
				r1 = comp(x15, x6);	o6 += r1;	o15 -= r1;
				r0 = comp(x16, x6);	o6 += r0;	o16 -= r0;
				r1 = comp(x17, x6);	o6 += r1;	o17 -= r1;
				r0 = comp(x18, x6);	o6 += r0;	o18 -= r0;
				r1 = comp(x19, x6);	o6 += r1;	o19 -= r1;
				r0 = comp(x20, x6);	o6 += r0;	o20 -= r0;
				r1 = comp(x21, x6);	o6 += r1;	o21 -= r1;
				r0 = comp(x22, x6);	o6 += r0;	o22 -= r0;
				r1 = comp(x23, x6);	o6 += r1;	o23 -= r1;
				r0 = comp(x24, x6);	o6 += r0;
				r1 = comp(x8, x7);	o7 += r1;	o8 -= r1;
				r0 = comp(x9, x7);	o7 += r0;	o9 -= r0;
				r1 = comp(x10, x7);	o7 += r1;	o10 -= r1;
				r0 = comp(x11, x7);	o7 += r0;	o11 -= r0;
				r1 = comp(x12, x7);	o7 += r1;	o12 -= r1;
				r0 = comp(x13, x7);	o7 += r0;	o13 -= r0;
				r1 = comp(x14, x7);	o7 += r1;	o14 -= r1;
				r0 = comp(x15, x7);	o7 += r0;	o15 -= r0;
				r1 = comp(x16, x7);	o7 += r1;	o16 -= r1;
				r0 = comp(x17, x7);	o7 += r0;	o17 -= r0;
				r1 = comp(x18, x7);	o7 += r1;	o18 -= r1;
				r0 = comp(x19, x7);	o7 += r0;	o19 -= r0;
				r1 = comp(x20, x7);	o7 += r1;	o20 -= r1;
				r0 = comp(x21, x7);	o7 += r0;	o21 -= r0;
				r1 = comp(x22, x7);	o7 += r1;	o22 -= r1;
				r0 = comp(x23, x7);	o7 += r0;	o23 -= r0;
				r1 = comp(x24, x7);	o7 += r1;
				r0 = comp(x9, x8);	o8 += r0;	o9 -= r0;
				r1 = comp(x10, x8);	o8 += r1;	o10 -= r1;
				r0 = comp(x11, x8);	o8 += r0;	o11 -= r0;
				r1 = comp(x12, x8);	o8 += r1;	o12 -= r1;
				r0 = comp(x13, x8);	o8 += r0;	o13 -= r0;
				r1 = comp(x14, x8);	o8 += r1;	o14 -= r1;
				r0 = comp(x15, x8);	o8 += r0;	o15 -= r0;
				r1 = comp(x16, x8);	o8 += r1;	o16 -= r1;
				r0 = comp(x17, x8);	o8 += r0;	o17 -= r0;
				r1 = comp(x18, x8);	o8 += r1;	o18 -= r1;
				r0 = comp(x19, x8);	o8 += r0;	o19 -= r0;
				r1 = comp(x20, x8);	o8 += r1;	o20 -= r1;
				r0 = comp(x21, x8);	o8 += r0;	o21 -= r0;
				r1 = comp(x22, x8);	o8 += r1;	o22 -= r1;
				r0 = comp(x23, x8);	o8 += r0;	o23 -= r0;
				r1 = comp(x24, x8);	o8 += r1;
				r0 = comp(x10, x9);	o9 += r0;	o10 -= r0;
				r1 = comp(x11, x9);	o9 += r1;	o11 -= r1;
				r0 = comp(x12, x9);	o9 += r0;	o12 -= r0;
				r1 = comp(x13, x9);	o9 += r1;	o13 -= r1;
				r0 = comp(x14, x9);	o9 += r0;	o14 -= r0;
				r1 = comp(x15, x9);	o9 += r1;	o15 -= r1;
				r0 = comp(x16, x9);	o9 += r0;	o16 -= r0;
				r1 = comp(x17, x9);	o9 += r1;	o17 -= r1;
				r0 = comp(x18, x9);	o9 += r0;	o18 -= r0;
				r1 = comp(x19, x9);	o9 += r1;	o19 -= r1;
				r0 = comp(x20, x9);	o9 += r0;	o20 -= r0;
				r1 = comp(x21, x9);	o9 += r1;	o21 -= r1;
				r0 = comp(x22, x9);	o9 += r0;	o22 -= r0;
				r1 = comp(x23, x9);	o9 += r1;	o23 -= r1;
				r0 = comp(x24, x9);	o9 += r0;
				r1 = comp(x11, x10);	o10 += r1;	o11 -= r1;
				r0 = comp(x12, x10);	o10 += r0;	o12 -= r0;
				r1 = comp(x13, x10);	o10 += r1;	o13 -= r1;
				r0 = comp(x14, x10);	o10 += r0;	o14 -= r0;
				r1 = comp(x15, x10);	o10 += r1;	o15 -= r1;
				r0 = comp(x16, x10);	o10 += r0;	o16 -= r0;
				r1 = comp(x17, x10);	o10 += r1;	o17 -= r1;
				r0 = comp(x18, x10);	o10 += r0;	o18 -= r0;
				r1 = comp(x19, x10);	o10 += r1;	o19 -= r1;
				r0 = comp(x20, x10);	o10 += r0;	o20 -= r0;
				r1 = comp(x21, x10);	o10 += r1;	o21 -= r1;
				r0 = comp(x22, x10);	o10 += r0;	o22 -= r0;
				r1 = comp(x23, x10);	o10 += r1;	o23 -= r1;
				r0 = comp(x24, x10);	o10 += r0;
				r1 = comp(x12, x11);	o11 += r1;	o12 -= r1;
				r0 = comp(x13, x11);	o11 += r0;	o13 -= r0;
				r1 = comp(x14, x11);	o11 += r1;	o14 -= r1;
				r0 = comp(x15, x11);	o11 += r0;	o15 -= r0;
				r1 = comp(x16, x11);	o11 += r1;	o16 -= r1;
				r0 = comp(x17, x11);	o11 += r0;	o17 -= r0;
				r1 = comp(x18, x11);	o11 += r1;	o18 -= r1;
				r0 = comp(x19, x11);	o11 += r0;	o19 -= r0;
				r1 = comp(x20, x11);	o11 += r1;	o20 -= r1;
				r0 = comp(x21, x11);	o11 += r0;	o21 -= r0;
				r1 = comp(x22, x11);	o11 += r1;	o22 -= r1;
				r0 = comp(x23, x11);	o11 += r0;	o23 -= r0;
				r1 = comp(x24, x11);	o11 += r1;
				r0 = comp(x13, x12);	o12 += r0;	o13 -= r0;
				r1 = comp(x14, x12);	o12 += r1;	o14 -= r1;
				r0 = comp(x15, x12);	o12 += r0;	o15 -= r0;
				r1 = comp(x16, x12);	o12 += r1;	o16 -= r1;
				r0 = comp(x17, x12);	o12 += r0;	o17 -= r0;
				r1 = comp(x18, x12);	o12 += r1;	o18 -= r1;
				r0 = comp(x19, x12);	o12 += r0;	o19 -= r0;
				r1 = comp(x20, x12);	o12 += r1;	o20 -= r1;
				r0 = comp(x21, x12);	o12 += r0;	o21 -= r0;
				r1 = comp(x22, x12);	o12 += r1;	o22 -= r1;
				r0 = comp(x23, x12);	o12 += r0;	o23 -= r0;
				r1 = comp(x24, x12);	o12 += r1;
				r0 = comp(x14, x13);	o13 += r0;	o14 -= r0;
				r1 = comp(x15, x13);	o13 += r1;	o15 -= r1;
				r0 = comp(x16, x13);	o13 += r0;	o16 -= r0;
				r1 = comp(x17, x13);	o13 += r1;	o17 -= r1;
				r0 = comp(x18, x13);	o13 += r0;	o18 -= r0;
				r1 = comp(x19, x13);	o13 += r1;	o19 -= r1;
				r0 = comp(x20, x13);	o13 += r0;	o20 -= r0;
				r1 = comp(x21, x13);	o13 += r1;	o21 -= r1;
				r0 = comp(x22, x13);	o13 += r0;	o22 -= r0;
				r1 = comp(x23, x13);	o13 += r1;	o23 -= r1;
				r0 = comp(x24, x13);	o13 += r0;
				r1 = comp(x15, x14);	o14 += r1;	o15 -= r1;
				r0 = comp(x16, x14);	o14 += r0;	o16 -= r0;
				r1 = comp(x17, x14);	o14 += r1;	o17 -= r1;
				r0 = comp(x18, x14);	o14 += r0;	o18 -= r0;
				r1 = comp(x19, x14);	o14 += r1;	o19 -= r1;
				r0 = comp(x20, x14);	o14 += r0;	o20 -= r0;
				r1 = comp(x21, x14);	o14 += r1;	o21 -= r1;
				r0 = comp(x22, x14);	o14 += r0;	o22 -= r0;
				r1 = comp(x23, x14);	o14 += r1;	o23 -= r1;
				r0 = comp(x24, x14);	o14 += r0;
				r1 = comp(x16, x15);	o15 += r1;	o16 -= r1;
				r0 = comp(x17, x15);	o15 += r0;	o17 -= r0;
				r1 = comp(x18, x15);	o15 += r1;	o18 -= r1;
				r0 = comp(x19, x15);	o15 += r0;	o19 -= r0;
				r1 = comp(x20, x15);	o15 += r1;	o20 -= r1;
				r0 = comp(x21, x15);	o15 += r0;	o21 -= r0;
				r1 = comp(x22, x15);	o15 += r1;	o22 -= r1;
				r0 = comp(x23, x15);	o15 += r0;	o23 -= r0;
				r1 = comp(x24, x15);	o15 += r1;
				r0 = comp(x17, x16);	o16 += r0;	o17 -= r0;
				r1 = comp(x18, x16);	o16 += r1;	o18 -= r1;
				r0 = comp(x19, x16);	o16 += r0;	o19 -= r0;
				r1 = comp(x20, x16);	o16 += r1;	o20 -= r1;
				r0 = comp(x21, x16);	o16 += r0;	o21 -= r0;
				r1 = comp(x22, x16);	o16 += r1;	o22 -= r1;
				r0 = comp(x23, x16);	o16 += r0;	o23 -= r0;
				r1 = comp(x24, x16);	o16 += r1;
				r0 = comp(x18, x17);	o17 += r0;	o18 -= r0;
				r1 = comp(x19, x17);	o17 += r1;	o19 -= r1;
				r0 = comp(x20, x17);	o17 += r0;	o20 -= r0;
				r1 = comp(x21, x17);	o17 += r1;	o21 -= r1;
				r0 = comp(x22, x17);	o17 += r0;	o22 -= r0;
				r1 = comp(x23, x17);	o17 += r1;	o23 -= r1;
				r0 = comp(x24, x17);	o17 += r0;
				r1 = comp(x19, x18);	o18 += r1;	o19 -= r1;
				r0 = comp(x20, x18);	o18 += r0;	o20 -= r0;
				r1 = comp(x21, x18);	o18 += r1;	o21 -= r1;
				r0 = comp(x22, x18);	o18 += r0;	o22 -= r0;
				r1 = comp(x23, x18);	o18 += r1;	o23 -= r1;
				r0 = comp(x24, x18);	o18 += r0;
				r1 = comp(x20, x19);	o19 += r1;	o20 -= r1;
				r0 = comp(x21, x19);	o19 += r0;	o21 -= r0;
				r1 = comp(x22, x19);	o19 += r1;	o22 -= r1;
				r0 = comp(x23, x19);	o19 += r0;	o23 -= r0;
				r1 = comp(x24, x19);	o19 += r1;
				r0 = comp(x21, x20);	o20 += r0;	o21 -= r0;
				r1 = comp(x22, x20);	o20 += r1;	o22 -= r1;
				r0 = comp(x23, x20);	o20 += r0;	o23 -= r0;
				r1 = comp(x24, x20);	o20 += r1;
				r0 = comp(x22, x21);	o21 += r0;	o22 -= r0;
				r1 = comp(x23, x21);	o21 += r1;	o23 -= r1;
				r0 = comp(x24, x21);	o21 += r0;
				r1 = comp(x23, x22);	o22 += r1;	o23 -= r1;
				r0 = comp(x24, x22);	o22 += r0;
				r1 = comp(x24, x23);	o23 += r1;
				o24 = 300 - o0 - o1 - o2 - o3 - o4 - o5 - o6 - o7 - o8 - o9 - o10 - o11 - o12 - o13 - o14 - o15 - o16 - o17 - o18 - o19 - o20 - o21 - o22 - o23;
				arr[o0] = x0;
				arr[o1] = x1;
				arr[o2] = x2;
				arr[o3] = x3;
				arr[o4] = x4;
				arr[o5] = x5;
				arr[o6] = x6;
				arr[o7] = x7;
				arr[o8] = x8;
				arr[o9] = x9;
				arr[o10] = x10;
				arr[o11] = x11;
				arr[o12] = x12;
				arr[o13] = x13;
				arr[o14] = x14;
				arr[o15] = x15;
				arr[o16] = x16;
				arr[o17] = x17;
				arr[o18] = x18;
				arr[o19] = x19;
				arr[o20] = x20;
				arr[o21] = x21;
				arr[o22] = x22;
				arr[o23] = x23;
				arr[o24] = x24;

				FinishingSorter{}(arr, 25);
			}

			void sort26(T* arr)
			{
				T x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25;
				x0 = arr[0];
				x1 = arr[1];
				x2 = arr[2];
				x3 = arr[3];
				x4 = arr[4];
				x5 = arr[5];
				x6 = arr[6];
				x7 = arr[7];
				x8 = arr[8];
				x9 = arr[9];
				x10 = arr[10];
				x11 = arr[11];
				x12 = arr[12];
				x13 = arr[13];
				x14 = arr[14];
				x15 = arr[15];
				x16 = arr[16];
				x17 = arr[17];
				x18 = arr[18];
				x19 = arr[19];
				x20 = arr[20];
				x21 = arr[21];
				x22 = arr[22];
				x23 = arr[23];
				x24 = arr[24];
				x25 = arr[25];
				int o0 = 0, o1 = 1, o2 = 2, o3 = 3, o4 = 4, o5 = 5, o6 = 6, o7 = 7, o8 = 8, o9 = 9, o10 = 10, o11 = 11, o12 = 12, o13 = 13, o14 = 14, o15 = 15, o16 = 16, o17 = 17, o18 = 18, o19 = 19, o20 = 20, o21 = 21, o22 = 22, o23 = 23, o24 = 24, o25 = 0;
				auto r0 = comp(x1, x0);	o0 += r0;	o1 -= r0;
				auto r1 = comp(x2, x0);	o0 += r1;	o2 -= r1;
				r0 = comp(x3, x0);	o0 += r0;	o3 -= r0;
				r1 = comp(x4, x0);	o0 += r1;	o4 -= r1;
				r0 = comp(x5, x0);	o0 += r0;	o5 -= r0;
				r1 = comp(x6, x0);	o0 += r1;	o6 -= r1;
				r0 = comp(x7, x0);	o0 += r0;	o7 -= r0;
				r1 = comp(x8, x0);	o0 += r1;	o8 -= r1;
				r0 = comp(x9, x0);	o0 += r0;	o9 -= r0;
				r1 = comp(x10, x0);	o0 += r1;	o10 -= r1;
				r0 = comp(x11, x0);	o0 += r0;	o11 -= r0;
				r1 = comp(x12, x0);	o0 += r1;	o12 -= r1;
				r0 = comp(x13, x0);	o0 += r0;	o13 -= r0;
				r1 = comp(x14, x0);	o0 += r1;	o14 -= r1;
				r0 = comp(x15, x0);	o0 += r0;	o15 -= r0;
				r1 = comp(x16, x0);	o0 += r1;	o16 -= r1;
				r0 = comp(x17, x0);	o0 += r0;	o17 -= r0;
				r1 = comp(x18, x0);	o0 += r1;	o18 -= r1;
				r0 = comp(x19, x0);	o0 += r0;	o19 -= r0;
				r1 = comp(x20, x0);	o0 += r1;	o20 -= r1;
				r0 = comp(x21, x0);	o0 += r0;	o21 -= r0;
				r1 = comp(x22, x0);	o0 += r1;	o22 -= r1;
				r0 = comp(x23, x0);	o0 += r0;	o23 -= r0;
				r1 = comp(x24, x0);	o0 += r1;	o24 -= r1;
				r0 = comp(x25, x0);	o0 += r0;
				r1 = comp(x2, x1);	o1 += r1;	o2 -= r1;
				r0 = comp(x3, x1);	o1 += r0;	o3 -= r0;
				r1 = comp(x4, x1);	o1 += r1;	o4 -= r1;
				r0 = comp(x5, x1);	o1 += r0;	o5 -= r0;
				r1 = comp(x6, x1);	o1 += r1;	o6 -= r1;
				r0 = comp(x7, x1);	o1 += r0;	o7 -= r0;
				r1 = comp(x8, x1);	o1 += r1;	o8 -= r1;
				r0 = comp(x9, x1);	o1 += r0;	o9 -= r0;
				r1 = comp(x10, x1);	o1 += r1;	o10 -= r1;
				r0 = comp(x11, x1);	o1 += r0;	o11 -= r0;
				r1 = comp(x12, x1);	o1 += r1;	o12 -= r1;
				r0 = comp(x13, x1);	o1 += r0;	o13 -= r0;
				r1 = comp(x14, x1);	o1 += r1;	o14 -= r1;
				r0 = comp(x15, x1);	o1 += r0;	o15 -= r0;
				r1 = comp(x16, x1);	o1 += r1;	o16 -= r1;
				r0 = comp(x17, x1);	o1 += r0;	o17 -= r0;
				r1 = comp(x18, x1);	o1 += r1;	o18 -= r1;
				r0 = comp(x19, x1);	o1 += r0;	o19 -= r0;
				r1 = comp(x20, x1);	o1 += r1;	o20 -= r1;
				r0 = comp(x21, x1);	o1 += r0;	o21 -= r0;
				r1 = comp(x22, x1);	o1 += r1;	o22 -= r1;
				r0 = comp(x23, x1);	o1 += r0;	o23 -= r0;
				r1 = comp(x24, x1);	o1 += r1;	o24 -= r1;
				r0 = comp(x25, x1);	o1 += r0;
				r1 = comp(x3, x2);	o2 += r1;	o3 -= r1;
				r0 = comp(x4, x2);	o2 += r0;	o4 -= r0;
				r1 = comp(x5, x2);	o2 += r1;	o5 -= r1;
				r0 = comp(x6, x2);	o2 += r0;	o6 -= r0;
				r1 = comp(x7, x2);	o2 += r1;	o7 -= r1;
				r0 = comp(x8, x2);	o2 += r0;	o8 -= r0;
				r1 = comp(x9, x2);	o2 += r1;	o9 -= r1;
				r0 = comp(x10, x2);	o2 += r0;	o10 -= r0;
				r1 = comp(x11, x2);	o2 += r1;	o11 -= r1;
				r0 = comp(x12, x2);	o2 += r0;	o12 -= r0;
				r1 = comp(x13, x2);	o2 += r1;	o13 -= r1;
				r0 = comp(x14, x2);	o2 += r0;	o14 -= r0;
				r1 = comp(x15, x2);	o2 += r1;	o15 -= r1;
				r0 = comp(x16, x2);	o2 += r0;	o16 -= r0;
				r1 = comp(x17, x2);	o2 += r1;	o17 -= r1;
				r0 = comp(x18, x2);	o2 += r0;	o18 -= r0;
				r1 = comp(x19, x2);	o2 += r1;	o19 -= r1;
				r0 = comp(x20, x2);	o2 += r0;	o20 -= r0;
				r1 = comp(x21, x2);	o2 += r1;	o21 -= r1;
				r0 = comp(x22, x2);	o2 += r0;	o22 -= r0;
				r1 = comp(x23, x2);	o2 += r1;	o23 -= r1;
				r0 = comp(x24, x2);	o2 += r0;	o24 -= r0;
				r1 = comp(x25, x2);	o2 += r1;
				r0 = comp(x4, x3);	o3 += r0;	o4 -= r0;
				r1 = comp(x5, x3);	o3 += r1;	o5 -= r1;
				r0 = comp(x6, x3);	o3 += r0;	o6 -= r0;
				r1 = comp(x7, x3);	o3 += r1;	o7 -= r1;
				r0 = comp(x8, x3);	o3 += r0;	o8 -= r0;
				r1 = comp(x9, x3);	o3 += r1;	o9 -= r1;
				r0 = comp(x10, x3);	o3 += r0;	o10 -= r0;
				r1 = comp(x11, x3);	o3 += r1;	o11 -= r1;
				r0 = comp(x12, x3);	o3 += r0;	o12 -= r0;
				r1 = comp(x13, x3);	o3 += r1;	o13 -= r1;
				r0 = comp(x14, x3);	o3 += r0;	o14 -= r0;
				r1 = comp(x15, x3);	o3 += r1;	o15 -= r1;
				r0 = comp(x16, x3);	o3 += r0;	o16 -= r0;
				r1 = comp(x17, x3);	o3 += r1;	o17 -= r1;
				r0 = comp(x18, x3);	o3 += r0;	o18 -= r0;
				r1 = comp(x19, x3);	o3 += r1;	o19 -= r1;
				r0 = comp(x20, x3);	o3 += r0;	o20 -= r0;
				r1 = comp(x21, x3);	o3 += r1;	o21 -= r1;
				r0 = comp(x22, x3);	o3 += r0;	o22 -= r0;
				r1 = comp(x23, x3);	o3 += r1;	o23 -= r1;
				r0 = comp(x24, x3);	o3 += r0;	o24 -= r0;
				r1 = comp(x25, x3);	o3 += r1;
				r0 = comp(x5, x4);	o4 += r0;	o5 -= r0;
				r1 = comp(x6, x4);	o4 += r1;	o6 -= r1;
				r0 = comp(x7, x4);	o4 += r0;	o7 -= r0;
				r1 = comp(x8, x4);	o4 += r1;	o8 -= r1;
				r0 = comp(x9, x4);	o4 += r0;	o9 -= r0;
				r1 = comp(x10, x4);	o4 += r1;	o10 -= r1;
				r0 = comp(x11, x4);	o4 += r0;	o11 -= r0;
				r1 = comp(x12, x4);	o4 += r1;	o12 -= r1;
				r0 = comp(x13, x4);	o4 += r0;	o13 -= r0;
				r1 = comp(x14, x4);	o4 += r1;	o14 -= r1;
				r0 = comp(x15, x4);	o4 += r0;	o15 -= r0;
				r1 = comp(x16, x4);	o4 += r1;	o16 -= r1;
				r0 = comp(x17, x4);	o4 += r0;	o17 -= r0;
				r1 = comp(x18, x4);	o4 += r1;	o18 -= r1;
				r0 = comp(x19, x4);	o4 += r0;	o19 -= r0;
				r1 = comp(x20, x4);	o4 += r1;	o20 -= r1;
				r0 = comp(x21, x4);	o4 += r0;	o21 -= r0;
				r1 = comp(x22, x4);	o4 += r1;	o22 -= r1;
				r0 = comp(x23, x4);	o4 += r0;	o23 -= r0;
				r1 = comp(x24, x4);	o4 += r1;	o24 -= r1;
				r0 = comp(x25, x4);	o4 += r0;
				r1 = comp(x6, x5);	o5 += r1;	o6 -= r1;
				r0 = comp(x7, x5);	o5 += r0;	o7 -= r0;
				r1 = comp(x8, x5);	o5 += r1;	o8 -= r1;
				r0 = comp(x9, x5);	o5 += r0;	o9 -= r0;
				r1 = comp(x10, x5);	o5 += r1;	o10 -= r1;
				r0 = comp(x11, x5);	o5 += r0;	o11 -= r0;
				r1 = comp(x12, x5);	o5 += r1;	o12 -= r1;
				r0 = comp(x13, x5);	o5 += r0;	o13 -= r0;
				r1 = comp(x14, x5);	o5 += r1;	o14 -= r1;
				r0 = comp(x15, x5);	o5 += r0;	o15 -= r0;
				r1 = comp(x16, x5);	o5 += r1;	o16 -= r1;
				r0 = comp(x17, x5);	o5 += r0;	o17 -= r0;
				r1 = comp(x18, x5);	o5 += r1;	o18 -= r1;
				r0 = comp(x19, x5);	o5 += r0;	o19 -= r0;
				r1 = comp(x20, x5);	o5 += r1;	o20 -= r1;
				r0 = comp(x21, x5);	o5 += r0;	o21 -= r0;
				r1 = comp(x22, x5);	o5 += r1;	o22 -= r1;
				r0 = comp(x23, x5);	o5 += r0;	o23 -= r0;
				r1 = comp(x24, x5);	o5 += r1;	o24 -= r1;
				r0 = comp(x25, x5);	o5 += r0;
				r1 = comp(x7, x6);	o6 += r1;	o7 -= r1;
				r0 = comp(x8, x6);	o6 += r0;	o8 -= r0;
				r1 = comp(x9, x6);	o6 += r1;	o9 -= r1;
				r0 = comp(x10, x6);	o6 += r0;	o10 -= r0;
				r1 = comp(x11, x6);	o6 += r1;	o11 -= r1;
				r0 = comp(x12, x6);	o6 += r0;	o12 -= r0;
				r1 = comp(x13, x6);	o6 += r1;	o13 -= r1;
				r0 = comp(x14, x6);	o6 += r0;	o14 -= r0;
				r1 = comp(x15, x6);	o6 += r1;	o15 -= r1;
				r0 = comp(x16, x6);	o6 += r0;	o16 -= r0;
				r1 = comp(x17, x6);	o6 += r1;	o17 -= r1;
				r0 = comp(x18, x6);	o6 += r0;	o18 -= r0;
				r1 = comp(x19, x6);	o6 += r1;	o19 -= r1;
				r0 = comp(x20, x6);	o6 += r0;	o20 -= r0;
				r1 = comp(x21, x6);	o6 += r1;	o21 -= r1;
				r0 = comp(x22, x6);	o6 += r0;	o22 -= r0;
				r1 = comp(x23, x6);	o6 += r1;	o23 -= r1;
				r0 = comp(x24, x6);	o6 += r0;	o24 -= r0;
				r1 = comp(x25, x6);	o6 += r1;
				r0 = comp(x8, x7);	o7 += r0;	o8 -= r0;
				r1 = comp(x9, x7);	o7 += r1;	o9 -= r1;
				r0 = comp(x10, x7);	o7 += r0;	o10 -= r0;
				r1 = comp(x11, x7);	o7 += r1;	o11 -= r1;
				r0 = comp(x12, x7);	o7 += r0;	o12 -= r0;
				r1 = comp(x13, x7);	o7 += r1;	o13 -= r1;
				r0 = comp(x14, x7);	o7 += r0;	o14 -= r0;
				r1 = comp(x15, x7);	o7 += r1;	o15 -= r1;
				r0 = comp(x16, x7);	o7 += r0;	o16 -= r0;
				r1 = comp(x17, x7);	o7 += r1;	o17 -= r1;
				r0 = comp(x18, x7);	o7 += r0;	o18 -= r0;
				r1 = comp(x19, x7);	o7 += r1;	o19 -= r1;
				r0 = comp(x20, x7);	o7 += r0;	o20 -= r0;
				r1 = comp(x21, x7);	o7 += r1;	o21 -= r1;
				r0 = comp(x22, x7);	o7 += r0;	o22 -= r0;
				r1 = comp(x23, x7);	o7 += r1;	o23 -= r1;
				r0 = comp(x24, x7);	o7 += r0;	o24 -= r0;
				r1 = comp(x25, x7);	o7 += r1;
				r0 = comp(x9, x8);	o8 += r0;	o9 -= r0;
				r1 = comp(x10, x8);	o8 += r1;	o10 -= r1;
				r0 = comp(x11, x8);	o8 += r0;	o11 -= r0;
				r1 = comp(x12, x8);	o8 += r1;	o12 -= r1;
				r0 = comp(x13, x8);	o8 += r0;	o13 -= r0;
				r1 = comp(x14, x8);	o8 += r1;	o14 -= r1;
				r0 = comp(x15, x8);	o8 += r0;	o15 -= r0;
				r1 = comp(x16, x8);	o8 += r1;	o16 -= r1;
				r0 = comp(x17, x8);	o8 += r0;	o17 -= r0;
				r1 = comp(x18, x8);	o8 += r1;	o18 -= r1;
				r0 = comp(x19, x8);	o8 += r0;	o19 -= r0;
				r1 = comp(x20, x8);	o8 += r1;	o20 -= r1;
				r0 = comp(x21, x8);	o8 += r0;	o21 -= r0;
				r1 = comp(x22, x8);	o8 += r1;	o22 -= r1;
				r0 = comp(x23, x8);	o8 += r0;	o23 -= r0;
				r1 = comp(x24, x8);	o8 += r1;	o24 -= r1;
				r0 = comp(x25, x8);	o8 += r0;
				r1 = comp(x10, x9);	o9 += r1;	o10 -= r1;
				r0 = comp(x11, x9);	o9 += r0;	o11 -= r0;
				r1 = comp(x12, x9);	o9 += r1;	o12 -= r1;
				r0 = comp(x13, x9);	o9 += r0;	o13 -= r0;
				r1 = comp(x14, x9);	o9 += r1;	o14 -= r1;
				r0 = comp(x15, x9);	o9 += r0;	o15 -= r0;
				r1 = comp(x16, x9);	o9 += r1;	o16 -= r1;
				r0 = comp(x17, x9);	o9 += r0;	o17 -= r0;
				r1 = comp(x18, x9);	o9 += r1;	o18 -= r1;
				r0 = comp(x19, x9);	o9 += r0;	o19 -= r0;
				r1 = comp(x20, x9);	o9 += r1;	o20 -= r1;
				r0 = comp(x21, x9);	o9 += r0;	o21 -= r0;
				r1 = comp(x22, x9);	o9 += r1;	o22 -= r1;
				r0 = comp(x23, x9);	o9 += r0;	o23 -= r0;
				r1 = comp(x24, x9);	o9 += r1;	o24 -= r1;
				r0 = comp(x25, x9);	o9 += r0;
				r1 = comp(x11, x10);	o10 += r1;	o11 -= r1;
				r0 = comp(x12, x10);	o10 += r0;	o12 -= r0;
				r1 = comp(x13, x10);	o10 += r1;	o13 -= r1;
				r0 = comp(x14, x10);	o10 += r0;	o14 -= r0;
				r1 = comp(x15, x10);	o10 += r1;	o15 -= r1;
				r0 = comp(x16, x10);	o10 += r0;	o16 -= r0;
				r1 = comp(x17, x10);	o10 += r1;	o17 -= r1;
				r0 = comp(x18, x10);	o10 += r0;	o18 -= r0;
				r1 = comp(x19, x10);	o10 += r1;	o19 -= r1;
				r0 = comp(x20, x10);	o10 += r0;	o20 -= r0;
				r1 = comp(x21, x10);	o10 += r1;	o21 -= r1;
				r0 = comp(x22, x10);	o10 += r0;	o22 -= r0;
				r1 = comp(x23, x10);	o10 += r1;	o23 -= r1;
				r0 = comp(x24, x10);	o10 += r0;	o24 -= r0;
				r1 = comp(x25, x10);	o10 += r1;
				r0 = comp(x12, x11);	o11 += r0;	o12 -= r0;
				r1 = comp(x13, x11);	o11 += r1;	o13 -= r1;
				r0 = comp(x14, x11);	o11 += r0;	o14 -= r0;
				r1 = comp(x15, x11);	o11 += r1;	o15 -= r1;
				r0 = comp(x16, x11);	o11 += r0;	o16 -= r0;
				r1 = comp(x17, x11);	o11 += r1;	o17 -= r1;
				r0 = comp(x18, x11);	o11 += r0;	o18 -= r0;
				r1 = comp(x19, x11);	o11 += r1;	o19 -= r1;
				r0 = comp(x20, x11);	o11 += r0;	o20 -= r0;
				r1 = comp(x21, x11);	o11 += r1;	o21 -= r1;
				r0 = comp(x22, x11);	o11 += r0;	o22 -= r0;
				r1 = comp(x23, x11);	o11 += r1;	o23 -= r1;
				r0 = comp(x24, x11);	o11 += r0;	o24 -= r0;
				r1 = comp(x25, x11);	o11 += r1;
				r0 = comp(x13, x12);	o12 += r0;	o13 -= r0;
				r1 = comp(x14, x12);	o12 += r1;	o14 -= r1;
				r0 = comp(x15, x12);	o12 += r0;	o15 -= r0;
				r1 = comp(x16, x12);	o12 += r1;	o16 -= r1;
				r0 = comp(x17, x12);	o12 += r0;	o17 -= r0;
				r1 = comp(x18, x12);	o12 += r1;	o18 -= r1;
				r0 = comp(x19, x12);	o12 += r0;	o19 -= r0;
				r1 = comp(x20, x12);	o12 += r1;	o20 -= r1;
				r0 = comp(x21, x12);	o12 += r0;	o21 -= r0;
				r1 = comp(x22, x12);	o12 += r1;	o22 -= r1;
				r0 = comp(x23, x12);	o12 += r0;	o23 -= r0;
				r1 = comp(x24, x12);	o12 += r1;	o24 -= r1;
				r0 = comp(x25, x12);	o12 += r0;
				r1 = comp(x14, x13);	o13 += r1;	o14 -= r1;
				r0 = comp(x15, x13);	o13 += r0;	o15 -= r0;
				r1 = comp(x16, x13);	o13 += r1;	o16 -= r1;
				r0 = comp(x17, x13);	o13 += r0;	o17 -= r0;
				r1 = comp(x18, x13);	o13 += r1;	o18 -= r1;
				r0 = comp(x19, x13);	o13 += r0;	o19 -= r0;
				r1 = comp(x20, x13);	o13 += r1;	o20 -= r1;
				r0 = comp(x21, x13);	o13 += r0;	o21 -= r0;
				r1 = comp(x22, x13);	o13 += r1;	o22 -= r1;
				r0 = comp(x23, x13);	o13 += r0;	o23 -= r0;
				r1 = comp(x24, x13);	o13 += r1;	o24 -= r1;
				r0 = comp(x25, x13);	o13 += r0;
				r1 = comp(x15, x14);	o14 += r1;	o15 -= r1;
				r0 = comp(x16, x14);	o14 += r0;	o16 -= r0;
				r1 = comp(x17, x14);	o14 += r1;	o17 -= r1;
				r0 = comp(x18, x14);	o14 += r0;	o18 -= r0;
				r1 = comp(x19, x14);	o14 += r1;	o19 -= r1;
				r0 = comp(x20, x14);	o14 += r0;	o20 -= r0;
				r1 = comp(x21, x14);	o14 += r1;	o21 -= r1;
				r0 = comp(x22, x14);	o14 += r0;	o22 -= r0;
				r1 = comp(x23, x14);	o14 += r1;	o23 -= r1;
				r0 = comp(x24, x14);	o14 += r0;	o24 -= r0;
				r1 = comp(x25, x14);	o14 += r1;
				r0 = comp(x16, x15);	o15 += r0;	o16 -= r0;
				r1 = comp(x17, x15);	o15 += r1;	o17 -= r1;
				r0 = comp(x18, x15);	o15 += r0;	o18 -= r0;
				r1 = comp(x19, x15);	o15 += r1;	o19 -= r1;
				r0 = comp(x20, x15);	o15 += r0;	o20 -= r0;
				r1 = comp(x21, x15);	o15 += r1;	o21 -= r1;
				r0 = comp(x22, x15);	o15 += r0;	o22 -= r0;
				r1 = comp(x23, x15);	o15 += r1;	o23 -= r1;
				r0 = comp(x24, x15);	o15 += r0;	o24 -= r0;
				r1 = comp(x25, x15);	o15 += r1;
				r0 = comp(x17, x16);	o16 += r0;	o17 -= r0;
				r1 = comp(x18, x16);	o16 += r1;	o18 -= r1;
				r0 = comp(x19, x16);	o16 += r0;	o19 -= r0;
				r1 = comp(x20, x16);	o16 += r1;	o20 -= r1;
				r0 = comp(x21, x16);	o16 += r0;	o21 -= r0;
				r1 = comp(x22, x16);	o16 += r1;	o22 -= r1;
				r0 = comp(x23, x16);	o16 += r0;	o23 -= r0;
				r1 = comp(x24, x16);	o16 += r1;	o24 -= r1;
				r0 = comp(x25, x16);	o16 += r0;
				r1 = comp(x18, x17);	o17 += r1;	o18 -= r1;
				r0 = comp(x19, x17);	o17 += r0;	o19 -= r0;
				r1 = comp(x20, x17);	o17 += r1;	o20 -= r1;
				r0 = comp(x21, x17);	o17 += r0;	o21 -= r0;
				r1 = comp(x22, x17);	o17 += r1;	o22 -= r1;
				r0 = comp(x23, x17);	o17 += r0;	o23 -= r0;
				r1 = comp(x24, x17);	o17 += r1;	o24 -= r1;
				r0 = comp(x25, x17);	o17 += r0;
				r1 = comp(x19, x18);	o18 += r1;	o19 -= r1;
				r0 = comp(x20, x18);	o18 += r0;	o20 -= r0;
				r1 = comp(x21, x18);	o18 += r1;	o21 -= r1;
				r0 = comp(x22, x18);	o18 += r0;	o22 -= r0;
				r1 = comp(x23, x18);	o18 += r1;	o23 -= r1;
				r0 = comp(x24, x18);	o18 += r0;	o24 -= r0;
				r1 = comp(x25, x18);	o18 += r1;
				r0 = comp(x20, x19);	o19 += r0;	o20 -= r0;
				r1 = comp(x21, x19);	o19 += r1;	o21 -= r1;
				r0 = comp(x22, x19);	o19 += r0;	o22 -= r0;
				r1 = comp(x23, x19);	o19 += r1;	o23 -= r1;
				r0 = comp(x24, x19);	o19 += r0;	o24 -= r0;
				r1 = comp(x25, x19);	o19 += r1;
				r0 = comp(x21, x20);	o20 += r0;	o21 -= r0;
				r1 = comp(x22, x20);	o20 += r1;	o22 -= r1;
				r0 = comp(x23, x20);	o20 += r0;	o23 -= r0;
				r1 = comp(x24, x20);	o20 += r1;	o24 -= r1;
				r0 = comp(x25, x20);	o20 += r0;
				r1 = comp(x22, x21);	o21 += r1;	o22 -= r1;
				r0 = comp(x23, x21);	o21 += r0;	o23 -= r0;
				r1 = comp(x24, x21);	o21 += r1;	o24 -= r1;
				r0 = comp(x25, x21);	o21 += r0;
				r1 = comp(x23, x22);	o22 += r1;	o23 -= r1;
				r0 = comp(x24, x22);	o22 += r0;	o24 -= r0;
				r1 = comp(x25, x22);	o22 += r1;
				r0 = comp(x24, x23);	o23 += r0;	o24 -= r0;
				r1 = comp(x25, x23);	o23 += r1;
				r0 = comp(x25, x24);	o24 += r0;
				o25 = 325 - o0 - o1 - o2 - o3 - o4 - o5 - o6 - o7 - o8 - o9 - o10 - o11 - o12 - o13 - o14 - o15 - o16 - o17 - o18 - o19 - o20 - o21 - o22 - o23 - o24;
				arr[o0] = x0;
				arr[o1] = x1;
				arr[o2] = x2;
				arr[o3] = x3;
				arr[o4] = x4;
				arr[o5] = x5;
				arr[o6] = x6;
				arr[o7] = x7;
				arr[o8] = x8;
				arr[o9] = x9;
				arr[o10] = x10;
				arr[o11] = x11;
				arr[o12] = x12;
				arr[o13] = x13;
				arr[o14] = x14;
				arr[o15] = x15;
				arr[o16] = x16;
				arr[o17] = x17;
				arr[o18] = x18;
				arr[o19] = x19;
				arr[o20] = x20;
				arr[o21] = x21;
				arr[o22] = x22;
				arr[o23] = x23;
				arr[o24] = x24;
				arr[o25] = x25;

				FinishingSorter{}(arr, 26);
			}

			void sort27(T* arr)
			{
				T x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26;
				x0 = arr[0];
				x1 = arr[1];
				x2 = arr[2];
				x3 = arr[3];
				x4 = arr[4];
				x5 = arr[5];
				x6 = arr[6];
				x7 = arr[7];
				x8 = arr[8];
				x9 = arr[9];
				x10 = arr[10];
				x11 = arr[11];
				x12 = arr[12];
				x13 = arr[13];
				x14 = arr[14];
				x15 = arr[15];
				x16 = arr[16];
				x17 = arr[17];
				x18 = arr[18];
				x19 = arr[19];
				x20 = arr[20];
				x21 = arr[21];
				x22 = arr[22];
				x23 = arr[23];
				x24 = arr[24];
				x25 = arr[25];
				x26 = arr[26];
				int o0 = 0, o1 = 1, o2 = 2, o3 = 3, o4 = 4, o5 = 5, o6 = 6, o7 = 7, o8 = 8, o9 = 9, o10 = 10, o11 = 11, o12 = 12, o13 = 13, o14 = 14, o15 = 15, o16 = 16, o17 = 17, o18 = 18, o19 = 19, o20 = 20, o21 = 21, o22 = 22, o23 = 23, o24 = 24, o25 = 25, o26 = 0;
				auto r0 = comp(x1, x0);	o0 += r0;	o1 -= r0;
				auto r1 = comp(x2, x0);	o0 += r1;	o2 -= r1;
				r0 = comp(x3, x0);	o0 += r0;	o3 -= r0;
				r1 = comp(x4, x0);	o0 += r1;	o4 -= r1;
				r0 = comp(x5, x0);	o0 += r0;	o5 -= r0;
				r1 = comp(x6, x0);	o0 += r1;	o6 -= r1;
				r0 = comp(x7, x0);	o0 += r0;	o7 -= r0;
				r1 = comp(x8, x0);	o0 += r1;	o8 -= r1;
				r0 = comp(x9, x0);	o0 += r0;	o9 -= r0;
				r1 = comp(x10, x0);	o0 += r1;	o10 -= r1;
				r0 = comp(x11, x0);	o0 += r0;	o11 -= r0;
				r1 = comp(x12, x0);	o0 += r1;	o12 -= r1;
				r0 = comp(x13, x0);	o0 += r0;	o13 -= r0;
				r1 = comp(x14, x0);	o0 += r1;	o14 -= r1;
				r0 = comp(x15, x0);	o0 += r0;	o15 -= r0;
				r1 = comp(x16, x0);	o0 += r1;	o16 -= r1;
				r0 = comp(x17, x0);	o0 += r0;	o17 -= r0;
				r1 = comp(x18, x0);	o0 += r1;	o18 -= r1;
				r0 = comp(x19, x0);	o0 += r0;	o19 -= r0;
				r1 = comp(x20, x0);	o0 += r1;	o20 -= r1;
				r0 = comp(x21, x0);	o0 += r0;	o21 -= r0;
				r1 = comp(x22, x0);	o0 += r1;	o22 -= r1;
				r0 = comp(x23, x0);	o0 += r0;	o23 -= r0;
				r1 = comp(x24, x0);	o0 += r1;	o24 -= r1;
				r0 = comp(x25, x0);	o0 += r0;	o25 -= r0;
				r1 = comp(x26, x0);	o0 += r1;
				r0 = comp(x2, x1);	o1 += r0;	o2 -= r0;
				r1 = comp(x3, x1);	o1 += r1;	o3 -= r1;
				r0 = comp(x4, x1);	o1 += r0;	o4 -= r0;
				r1 = comp(x5, x1);	o1 += r1;	o5 -= r1;
				r0 = comp(x6, x1);	o1 += r0;	o6 -= r0;
				r1 = comp(x7, x1);	o1 += r1;	o7 -= r1;
				r0 = comp(x8, x1);	o1 += r0;	o8 -= r0;
				r1 = comp(x9, x1);	o1 += r1;	o9 -= r1;
				r0 = comp(x10, x1);	o1 += r0;	o10 -= r0;
				r1 = comp(x11, x1);	o1 += r1;	o11 -= r1;
				r0 = comp(x12, x1);	o1 += r0;	o12 -= r0;
				r1 = comp(x13, x1);	o1 += r1;	o13 -= r1;
				r0 = comp(x14, x1);	o1 += r0;	o14 -= r0;
				r1 = comp(x15, x1);	o1 += r1;	o15 -= r1;
				r0 = comp(x16, x1);	o1 += r0;	o16 -= r0;
				r1 = comp(x17, x1);	o1 += r1;	o17 -= r1;
				r0 = comp(x18, x1);	o1 += r0;	o18 -= r0;
				r1 = comp(x19, x1);	o1 += r1;	o19 -= r1;
				r0 = comp(x20, x1);	o1 += r0;	o20 -= r0;
				r1 = comp(x21, x1);	o1 += r1;	o21 -= r1;
				r0 = comp(x22, x1);	o1 += r0;	o22 -= r0;
				r1 = comp(x23, x1);	o1 += r1;	o23 -= r1;
				r0 = comp(x24, x1);	o1 += r0;	o24 -= r0;
				r1 = comp(x25, x1);	o1 += r1;	o25 -= r1;
				r0 = comp(x26, x1);	o1 += r0;
				r1 = comp(x3, x2);	o2 += r1;	o3 -= r1;
				r0 = comp(x4, x2);	o2 += r0;	o4 -= r0;
				r1 = comp(x5, x2);	o2 += r1;	o5 -= r1;
				r0 = comp(x6, x2);	o2 += r0;	o6 -= r0;
				r1 = comp(x7, x2);	o2 += r1;	o7 -= r1;
				r0 = comp(x8, x2);	o2 += r0;	o8 -= r0;
				r1 = comp(x9, x2);	o2 += r1;	o9 -= r1;
				r0 = comp(x10, x2);	o2 += r0;	o10 -= r0;
				r1 = comp(x11, x2);	o2 += r1;	o11 -= r1;
				r0 = comp(x12, x2);	o2 += r0;	o12 -= r0;
				r1 = comp(x13, x2);	o2 += r1;	o13 -= r1;
				r0 = comp(x14, x2);	o2 += r0;	o14 -= r0;
				r1 = comp(x15, x2);	o2 += r1;	o15 -= r1;
				r0 = comp(x16, x2);	o2 += r0;	o16 -= r0;
				r1 = comp(x17, x2);	o2 += r1;	o17 -= r1;
				r0 = comp(x18, x2);	o2 += r0;	o18 -= r0;
				r1 = comp(x19, x2);	o2 += r1;	o19 -= r1;
				r0 = comp(x20, x2);	o2 += r0;	o20 -= r0;
				r1 = comp(x21, x2);	o2 += r1;	o21 -= r1;
				r0 = comp(x22, x2);	o2 += r0;	o22 -= r0;
				r1 = comp(x23, x2);	o2 += r1;	o23 -= r1;
				r0 = comp(x24, x2);	o2 += r0;	o24 -= r0;
				r1 = comp(x25, x2);	o2 += r1;	o25 -= r1;
				r0 = comp(x26, x2);	o2 += r0;
				r1 = comp(x4, x3);	o3 += r1;	o4 -= r1;
				r0 = comp(x5, x3);	o3 += r0;	o5 -= r0;
				r1 = comp(x6, x3);	o3 += r1;	o6 -= r1;
				r0 = comp(x7, x3);	o3 += r0;	o7 -= r0;
				r1 = comp(x8, x3);	o3 += r1;	o8 -= r1;
				r0 = comp(x9, x3);	o3 += r0;	o9 -= r0;
				r1 = comp(x10, x3);	o3 += r1;	o10 -= r1;
				r0 = comp(x11, x3);	o3 += r0;	o11 -= r0;
				r1 = comp(x12, x3);	o3 += r1;	o12 -= r1;
				r0 = comp(x13, x3);	o3 += r0;	o13 -= r0;
				r1 = comp(x14, x3);	o3 += r1;	o14 -= r1;
				r0 = comp(x15, x3);	o3 += r0;	o15 -= r0;
				r1 = comp(x16, x3);	o3 += r1;	o16 -= r1;
				r0 = comp(x17, x3);	o3 += r0;	o17 -= r0;
				r1 = comp(x18, x3);	o3 += r1;	o18 -= r1;
				r0 = comp(x19, x3);	o3 += r0;	o19 -= r0;
				r1 = comp(x20, x3);	o3 += r1;	o20 -= r1;
				r0 = comp(x21, x3);	o3 += r0;	o21 -= r0;
				r1 = comp(x22, x3);	o3 += r1;	o22 -= r1;
				r0 = comp(x23, x3);	o3 += r0;	o23 -= r0;
				r1 = comp(x24, x3);	o3 += r1;	o24 -= r1;
				r0 = comp(x25, x3);	o3 += r0;	o25 -= r0;
				r1 = comp(x26, x3);	o3 += r1;
				r0 = comp(x5, x4);	o4 += r0;	o5 -= r0;
				r1 = comp(x6, x4);	o4 += r1;	o6 -= r1;
				r0 = comp(x7, x4);	o4 += r0;	o7 -= r0;
				r1 = comp(x8, x4);	o4 += r1;	o8 -= r1;
				r0 = comp(x9, x4);	o4 += r0;	o9 -= r0;
				r1 = comp(x10, x4);	o4 += r1;	o10 -= r1;
				r0 = comp(x11, x4);	o4 += r0;	o11 -= r0;
				r1 = comp(x12, x4);	o4 += r1;	o12 -= r1;
				r0 = comp(x13, x4);	o4 += r0;	o13 -= r0;
				r1 = comp(x14, x4);	o4 += r1;	o14 -= r1;
				r0 = comp(x15, x4);	o4 += r0;	o15 -= r0;
				r1 = comp(x16, x4);	o4 += r1;	o16 -= r1;
				r0 = comp(x17, x4);	o4 += r0;	o17 -= r0;
				r1 = comp(x18, x4);	o4 += r1;	o18 -= r1;
				r0 = comp(x19, x4);	o4 += r0;	o19 -= r0;
				r1 = comp(x20, x4);	o4 += r1;	o20 -= r1;
				r0 = comp(x21, x4);	o4 += r0;	o21 -= r0;
				r1 = comp(x22, x4);	o4 += r1;	o22 -= r1;
				r0 = comp(x23, x4);	o4 += r0;	o23 -= r0;
				r1 = comp(x24, x4);	o4 += r1;	o24 -= r1;
				r0 = comp(x25, x4);	o4 += r0;	o25 -= r0;
				r1 = comp(x26, x4);	o4 += r1;
				r0 = comp(x6, x5);	o5 += r0;	o6 -= r0;
				r1 = comp(x7, x5);	o5 += r1;	o7 -= r1;
				r0 = comp(x8, x5);	o5 += r0;	o8 -= r0;
				r1 = comp(x9, x5);	o5 += r1;	o9 -= r1;
				r0 = comp(x10, x5);	o5 += r0;	o10 -= r0;
				r1 = comp(x11, x5);	o5 += r1;	o11 -= r1;
				r0 = comp(x12, x5);	o5 += r0;	o12 -= r0;
				r1 = comp(x13, x5);	o5 += r1;	o13 -= r1;
				r0 = comp(x14, x5);	o5 += r0;	o14 -= r0;
				r1 = comp(x15, x5);	o5 += r1;	o15 -= r1;
				r0 = comp(x16, x5);	o5 += r0;	o16 -= r0;
				r1 = comp(x17, x5);	o5 += r1;	o17 -= r1;
				r0 = comp(x18, x5);	o5 += r0;	o18 -= r0;
				r1 = comp(x19, x5);	o5 += r1;	o19 -= r1;
				r0 = comp(x20, x5);	o5 += r0;	o20 -= r0;
				r1 = comp(x21, x5);	o5 += r1;	o21 -= r1;
				r0 = comp(x22, x5);	o5 += r0;	o22 -= r0;
				r1 = comp(x23, x5);	o5 += r1;	o23 -= r1;
				r0 = comp(x24, x5);	o5 += r0;	o24 -= r0;
				r1 = comp(x25, x5);	o5 += r1;	o25 -= r1;
				r0 = comp(x26, x5);	o5 += r0;
				r1 = comp(x7, x6);	o6 += r1;	o7 -= r1;
				r0 = comp(x8, x6);	o6 += r0;	o8 -= r0;
				r1 = comp(x9, x6);	o6 += r1;	o9 -= r1;
				r0 = comp(x10, x6);	o6 += r0;	o10 -= r0;
				r1 = comp(x11, x6);	o6 += r1;	o11 -= r1;
				r0 = comp(x12, x6);	o6 += r0;	o12 -= r0;
				r1 = comp(x13, x6);	o6 += r1;	o13 -= r1;
				r0 = comp(x14, x6);	o6 += r0;	o14 -= r0;
				r1 = comp(x15, x6);	o6 += r1;	o15 -= r1;
				r0 = comp(x16, x6);	o6 += r0;	o16 -= r0;
				r1 = comp(x17, x6);	o6 += r1;	o17 -= r1;
				r0 = comp(x18, x6);	o6 += r0;	o18 -= r0;
				r1 = comp(x19, x6);	o6 += r1;	o19 -= r1;
				r0 = comp(x20, x6);	o6 += r0;	o20 -= r0;
				r1 = comp(x21, x6);	o6 += r1;	o21 -= r1;
				r0 = comp(x22, x6);	o6 += r0;	o22 -= r0;
				r1 = comp(x23, x6);	o6 += r1;	o23 -= r1;
				r0 = comp(x24, x6);	o6 += r0;	o24 -= r0;
				r1 = comp(x25, x6);	o6 += r1;	o25 -= r1;
				r0 = comp(x26, x6);	o6 += r0;
				r1 = comp(x8, x7);	o7 += r1;	o8 -= r1;
				r0 = comp(x9, x7);	o7 += r0;	o9 -= r0;
				r1 = comp(x10, x7);	o7 += r1;	o10 -= r1;
				r0 = comp(x11, x7);	o7 += r0;	o11 -= r0;
				r1 = comp(x12, x7);	o7 += r1;	o12 -= r1;
				r0 = comp(x13, x7);	o7 += r0;	o13 -= r0;
				r1 = comp(x14, x7);	o7 += r1;	o14 -= r1;
				r0 = comp(x15, x7);	o7 += r0;	o15 -= r0;
				r1 = comp(x16, x7);	o7 += r1;	o16 -= r1;
				r0 = comp(x17, x7);	o7 += r0;	o17 -= r0;
				r1 = comp(x18, x7);	o7 += r1;	o18 -= r1;
				r0 = comp(x19, x7);	o7 += r0;	o19 -= r0;
				r1 = comp(x20, x7);	o7 += r1;	o20 -= r1;
				r0 = comp(x21, x7);	o7 += r0;	o21 -= r0;
				r1 = comp(x22, x7);	o7 += r1;	o22 -= r1;
				r0 = comp(x23, x7);	o7 += r0;	o23 -= r0;
				r1 = comp(x24, x7);	o7 += r1;	o24 -= r1;
				r0 = comp(x25, x7);	o7 += r0;	o25 -= r0;
				r1 = comp(x26, x7);	o7 += r1;
				r0 = comp(x9, x8);	o8 += r0;	o9 -= r0;
				r1 = comp(x10, x8);	o8 += r1;	o10 -= r1;
				r0 = comp(x11, x8);	o8 += r0;	o11 -= r0;
				r1 = comp(x12, x8);	o8 += r1;	o12 -= r1;
				r0 = comp(x13, x8);	o8 += r0;	o13 -= r0;
				r1 = comp(x14, x8);	o8 += r1;	o14 -= r1;
				r0 = comp(x15, x8);	o8 += r0;	o15 -= r0;
				r1 = comp(x16, x8);	o8 += r1;	o16 -= r1;
				r0 = comp(x17, x8);	o8 += r0;	o17 -= r0;
				r1 = comp(x18, x8);	o8 += r1;	o18 -= r1;
				r0 = comp(x19, x8);	o8 += r0;	o19 -= r0;
				r1 = comp(x20, x8);	o8 += r1;	o20 -= r1;
				r0 = comp(x21, x8);	o8 += r0;	o21 -= r0;
				r1 = comp(x22, x8);	o8 += r1;	o22 -= r1;
				r0 = comp(x23, x8);	o8 += r0;	o23 -= r0;
				r1 = comp(x24, x8);	o8 += r1;	o24 -= r1;
				r0 = comp(x25, x8);	o8 += r0;	o25 -= r0;
				r1 = comp(x26, x8);	o8 += r1;
				r0 = comp(x10, x9);	o9 += r0;	o10 -= r0;
				r1 = comp(x11, x9);	o9 += r1;	o11 -= r1;
				r0 = comp(x12, x9);	o9 += r0;	o12 -= r0;
				r1 = comp(x13, x9);	o9 += r1;	o13 -= r1;
				r0 = comp(x14, x9);	o9 += r0;	o14 -= r0;
				r1 = comp(x15, x9);	o9 += r1;	o15 -= r1;
				r0 = comp(x16, x9);	o9 += r0;	o16 -= r0;
				r1 = comp(x17, x9);	o9 += r1;	o17 -= r1;
				r0 = comp(x18, x9);	o9 += r0;	o18 -= r0;
				r1 = comp(x19, x9);	o9 += r1;	o19 -= r1;
				r0 = comp(x20, x9);	o9 += r0;	o20 -= r0;
				r1 = comp(x21, x9);	o9 += r1;	o21 -= r1;
				r0 = comp(x22, x9);	o9 += r0;	o22 -= r0;
				r1 = comp(x23, x9);	o9 += r1;	o23 -= r1;
				r0 = comp(x24, x9);	o9 += r0;	o24 -= r0;
				r1 = comp(x25, x9);	o9 += r1;	o25 -= r1;
				r0 = comp(x26, x9);	o9 += r0;
				r1 = comp(x11, x10);	o10 += r1;	o11 -= r1;
				r0 = comp(x12, x10);	o10 += r0;	o12 -= r0;
				r1 = comp(x13, x10);	o10 += r1;	o13 -= r1;
				r0 = comp(x14, x10);	o10 += r0;	o14 -= r0;
				r1 = comp(x15, x10);	o10 += r1;	o15 -= r1;
				r0 = comp(x16, x10);	o10 += r0;	o16 -= r0;
				r1 = comp(x17, x10);	o10 += r1;	o17 -= r1;
				r0 = comp(x18, x10);	o10 += r0;	o18 -= r0;
				r1 = comp(x19, x10);	o10 += r1;	o19 -= r1;
				r0 = comp(x20, x10);	o10 += r0;	o20 -= r0;
				r1 = comp(x21, x10);	o10 += r1;	o21 -= r1;
				r0 = comp(x22, x10);	o10 += r0;	o22 -= r0;
				r1 = comp(x23, x10);	o10 += r1;	o23 -= r1;
				r0 = comp(x24, x10);	o10 += r0;	o24 -= r0;
				r1 = comp(x25, x10);	o10 += r1;	o25 -= r1;
				r0 = comp(x26, x10);	o10 += r0;
				r1 = comp(x12, x11);	o11 += r1;	o12 -= r1;
				r0 = comp(x13, x11);	o11 += r0;	o13 -= r0;
				r1 = comp(x14, x11);	o11 += r1;	o14 -= r1;
				r0 = comp(x15, x11);	o11 += r0;	o15 -= r0;
				r1 = comp(x16, x11);	o11 += r1;	o16 -= r1;
				r0 = comp(x17, x11);	o11 += r0;	o17 -= r0;
				r1 = comp(x18, x11);	o11 += r1;	o18 -= r1;
				r0 = comp(x19, x11);	o11 += r0;	o19 -= r0;
				r1 = comp(x20, x11);	o11 += r1;	o20 -= r1;
				r0 = comp(x21, x11);	o11 += r0;	o21 -= r0;
				r1 = comp(x22, x11);	o11 += r1;	o22 -= r1;
				r0 = comp(x23, x11);	o11 += r0;	o23 -= r0;
				r1 = comp(x24, x11);	o11 += r1;	o24 -= r1;
				r0 = comp(x25, x11);	o11 += r0;	o25 -= r0;
				r1 = comp(x26, x11);	o11 += r1;
				r0 = comp(x13, x12);	o12 += r0;	o13 -= r0;
				r1 = comp(x14, x12);	o12 += r1;	o14 -= r1;
				r0 = comp(x15, x12);	o12 += r0;	o15 -= r0;
				r1 = comp(x16, x12);	o12 += r1;	o16 -= r1;
				r0 = comp(x17, x12);	o12 += r0;	o17 -= r0;
				r1 = comp(x18, x12);	o12 += r1;	o18 -= r1;
				r0 = comp(x19, x12);	o12 += r0;	o19 -= r0;
				r1 = comp(x20, x12);	o12 += r1;	o20 -= r1;
				r0 = comp(x21, x12);	o12 += r0;	o21 -= r0;
				r1 = comp(x22, x12);	o12 += r1;	o22 -= r1;
				r0 = comp(x23, x12);	o12 += r0;	o23 -= r0;
				r1 = comp(x24, x12);	o12 += r1;	o24 -= r1;
				r0 = comp(x25, x12);	o12 += r0;	o25 -= r0;
				r1 = comp(x26, x12);	o12 += r1;
				r0 = comp(x14, x13);	o13 += r0;	o14 -= r0;
				r1 = comp(x15, x13);	o13 += r1;	o15 -= r1;
				r0 = comp(x16, x13);	o13 += r0;	o16 -= r0;
				r1 = comp(x17, x13);	o13 += r1;	o17 -= r1;
				r0 = comp(x18, x13);	o13 += r0;	o18 -= r0;
				r1 = comp(x19, x13);	o13 += r1;	o19 -= r1;
				r0 = comp(x20, x13);	o13 += r0;	o20 -= r0;
				r1 = comp(x21, x13);	o13 += r1;	o21 -= r1;
				r0 = comp(x22, x13);	o13 += r0;	o22 -= r0;
				r1 = comp(x23, x13);	o13 += r1;	o23 -= r1;
				r0 = comp(x24, x13);	o13 += r0;	o24 -= r0;
				r1 = comp(x25, x13);	o13 += r1;	o25 -= r1;
				r0 = comp(x26, x13);	o13 += r0;
				r1 = comp(x15, x14);	o14 += r1;	o15 -= r1;
				r0 = comp(x16, x14);	o14 += r0;	o16 -= r0;
				r1 = comp(x17, x14);	o14 += r1;	o17 -= r1;
				r0 = comp(x18, x14);	o14 += r0;	o18 -= r0;
				r1 = comp(x19, x14);	o14 += r1;	o19 -= r1;
				r0 = comp(x20, x14);	o14 += r0;	o20 -= r0;
				r1 = comp(x21, x14);	o14 += r1;	o21 -= r1;
				r0 = comp(x22, x14);	o14 += r0;	o22 -= r0;
				r1 = comp(x23, x14);	o14 += r1;	o23 -= r1;
				r0 = comp(x24, x14);	o14 += r0;	o24 -= r0;
				r1 = comp(x25, x14);	o14 += r1;	o25 -= r1;
				r0 = comp(x26, x14);	o14 += r0;
				r1 = comp(x16, x15);	o15 += r1;	o16 -= r1;
				r0 = comp(x17, x15);	o15 += r0;	o17 -= r0;
				r1 = comp(x18, x15);	o15 += r1;	o18 -= r1;
				r0 = comp(x19, x15);	o15 += r0;	o19 -= r0;
				r1 = comp(x20, x15);	o15 += r1;	o20 -= r1;
				r0 = comp(x21, x15);	o15 += r0;	o21 -= r0;
				r1 = comp(x22, x15);	o15 += r1;	o22 -= r1;
				r0 = comp(x23, x15);	o15 += r0;	o23 -= r0;
				r1 = comp(x24, x15);	o15 += r1;	o24 -= r1;
				r0 = comp(x25, x15);	o15 += r0;	o25 -= r0;
				r1 = comp(x26, x15);	o15 += r1;
				r0 = comp(x17, x16);	o16 += r0;	o17 -= r0;
				r1 = comp(x18, x16);	o16 += r1;	o18 -= r1;
				r0 = comp(x19, x16);	o16 += r0;	o19 -= r0;
				r1 = comp(x20, x16);	o16 += r1;	o20 -= r1;
				r0 = comp(x21, x16);	o16 += r0;	o21 -= r0;
				r1 = comp(x22, x16);	o16 += r1;	o22 -= r1;
				r0 = comp(x23, x16);	o16 += r0;	o23 -= r0;
				r1 = comp(x24, x16);	o16 += r1;	o24 -= r1;
				r0 = comp(x25, x16);	o16 += r0;	o25 -= r0;
				r1 = comp(x26, x16);	o16 += r1;
				r0 = comp(x18, x17);	o17 += r0;	o18 -= r0;
				r1 = comp(x19, x17);	o17 += r1;	o19 -= r1;
				r0 = comp(x20, x17);	o17 += r0;	o20 -= r0;
				r1 = comp(x21, x17);	o17 += r1;	o21 -= r1;
				r0 = comp(x22, x17);	o17 += r0;	o22 -= r0;
				r1 = comp(x23, x17);	o17 += r1;	o23 -= r1;
				r0 = comp(x24, x17);	o17 += r0;	o24 -= r0;
				r1 = comp(x25, x17);	o17 += r1;	o25 -= r1;
				r0 = comp(x26, x17);	o17 += r0;
				r1 = comp(x19, x18);	o18 += r1;	o19 -= r1;
				r0 = comp(x20, x18);	o18 += r0;	o20 -= r0;
				r1 = comp(x21, x18);	o18 += r1;	o21 -= r1;
				r0 = comp(x22, x18);	o18 += r0;	o22 -= r0;
				r1 = comp(x23, x18);	o18 += r1;	o23 -= r1;
				r0 = comp(x24, x18);	o18 += r0;	o24 -= r0;
				r1 = comp(x25, x18);	o18 += r1;	o25 -= r1;
				r0 = comp(x26, x18);	o18 += r0;
				r1 = comp(x20, x19);	o19 += r1;	o20 -= r1;
				r0 = comp(x21, x19);	o19 += r0;	o21 -= r0;
				r1 = comp(x22, x19);	o19 += r1;	o22 -= r1;
				r0 = comp(x23, x19);	o19 += r0;	o23 -= r0;
				r1 = comp(x24, x19);	o19 += r1;	o24 -= r1;
				r0 = comp(x25, x19);	o19 += r0;	o25 -= r0;
				r1 = comp(x26, x19);	o19 += r1;
				r0 = comp(x21, x20);	o20 += r0;	o21 -= r0;
				r1 = comp(x22, x20);	o20 += r1;	o22 -= r1;
				r0 = comp(x23, x20);	o20 += r0;	o23 -= r0;
				r1 = comp(x24, x20);	o20 += r1;	o24 -= r1;
				r0 = comp(x25, x20);	o20 += r0;	o25 -= r0;
				r1 = comp(x26, x20);	o20 += r1;
				r0 = comp(x22, x21);	o21 += r0;	o22 -= r0;
				r1 = comp(x23, x21);	o21 += r1;	o23 -= r1;
				r0 = comp(x24, x21);	o21 += r0;	o24 -= r0;
				r1 = comp(x25, x21);	o21 += r1;	o25 -= r1;
				r0 = comp(x26, x21);	o21 += r0;
				r1 = comp(x23, x22);	o22 += r1;	o23 -= r1;
				r0 = comp(x24, x22);	o22 += r0;	o24 -= r0;
				r1 = comp(x25, x22);	o22 += r1;	o25 -= r1;
				r0 = comp(x26, x22);	o22 += r0;
				r1 = comp(x24, x23);	o23 += r1;	o24 -= r1;
				r0 = comp(x25, x23);	o23 += r0;	o25 -= r0;
				r1 = comp(x26, x23);	o23 += r1;
				r0 = comp(x25, x24);	o24 += r0;	o25 -= r0;
				r1 = comp(x26, x24);	o24 += r1;
				r0 = comp(x26, x25);	o25 += r0;
				o26 = 351 - o0 - o1 - o2 - o3 - o4 - o5 - o6 - o7 - o8 - o9 - o10 - o11 - o12 - o13 - o14 - o15 - o16 - o17 - o18 - o19 - o20 - o21 - o22 - o23 - o24 - o25;
				arr[o0] = x0;
				arr[o1] = x1;
				arr[o2] = x2;
				arr[o3] = x3;
				arr[o4] = x4;
				arr[o5] = x5;
				arr[o6] = x6;
				arr[o7] = x7;
				arr[o8] = x8;
				arr[o9] = x9;
				arr[o10] = x10;
				arr[o11] = x11;
				arr[o12] = x12;
				arr[o13] = x13;
				arr[o14] = x14;
				arr[o15] = x15;
				arr[o16] = x16;
				arr[o17] = x17;
				arr[o18] = x18;
				arr[o19] = x19;
				arr[o20] = x20;
				arr[o21] = x21;
				arr[o22] = x22;
				arr[o23] = x23;
				arr[o24] = x24;
				arr[o25] = x25;
				arr[o26] = x26;

				FinishingSorter{}(arr, 27);
			}

			void sort28(T* arr)
			{
				T x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27;
				x0 = arr[0];
				x1 = arr[1];
				x2 = arr[2];
				x3 = arr[3];
				x4 = arr[4];
				x5 = arr[5];
				x6 = arr[6];
				x7 = arr[7];
				x8 = arr[8];
				x9 = arr[9];
				x10 = arr[10];
				x11 = arr[11];
				x12 = arr[12];
				x13 = arr[13];
				x14 = arr[14];
				x15 = arr[15];
				x16 = arr[16];
				x17 = arr[17];
				x18 = arr[18];
				x19 = arr[19];
				x20 = arr[20];
				x21 = arr[21];
				x22 = arr[22];
				x23 = arr[23];
				x24 = arr[24];
				x25 = arr[25];
				x26 = arr[26];
				x27 = arr[27];
				int o0 = 0, o1 = 1, o2 = 2, o3 = 3, o4 = 4, o5 = 5, o6 = 6, o7 = 7, o8 = 8, o9 = 9, o10 = 10, o11 = 11, o12 = 12, o13 = 13, o14 = 14, o15 = 15, o16 = 16, o17 = 17, o18 = 18, o19 = 19, o20 = 20, o21 = 21, o22 = 22, o23 = 23, o24 = 24, o25 = 25, o26 = 26, o27 = 0;
				auto r0 = comp(x1, x0);	o0 += r0;	o1 -= r0;
				auto r1 = comp(x2, x0);	o0 += r1;	o2 -= r1;
				r0 = comp(x3, x0);	o0 += r0;	o3 -= r0;
				r1 = comp(x4, x0);	o0 += r1;	o4 -= r1;
				r0 = comp(x5, x0);	o0 += r0;	o5 -= r0;
				r1 = comp(x6, x0);	o0 += r1;	o6 -= r1;
				r0 = comp(x7, x0);	o0 += r0;	o7 -= r0;
				r1 = comp(x8, x0);	o0 += r1;	o8 -= r1;
				r0 = comp(x9, x0);	o0 += r0;	o9 -= r0;
				r1 = comp(x10, x0);	o0 += r1;	o10 -= r1;
				r0 = comp(x11, x0);	o0 += r0;	o11 -= r0;
				r1 = comp(x12, x0);	o0 += r1;	o12 -= r1;
				r0 = comp(x13, x0);	o0 += r0;	o13 -= r0;
				r1 = comp(x14, x0);	o0 += r1;	o14 -= r1;
				r0 = comp(x15, x0);	o0 += r0;	o15 -= r0;
				r1 = comp(x16, x0);	o0 += r1;	o16 -= r1;
				r0 = comp(x17, x0);	o0 += r0;	o17 -= r0;
				r1 = comp(x18, x0);	o0 += r1;	o18 -= r1;
				r0 = comp(x19, x0);	o0 += r0;	o19 -= r0;
				r1 = comp(x20, x0);	o0 += r1;	o20 -= r1;
				r0 = comp(x21, x0);	o0 += r0;	o21 -= r0;
				r1 = comp(x22, x0);	o0 += r1;	o22 -= r1;
				r0 = comp(x23, x0);	o0 += r0;	o23 -= r0;
				r1 = comp(x24, x0);	o0 += r1;	o24 -= r1;
				r0 = comp(x25, x0);	o0 += r0;	o25 -= r0;
				r1 = comp(x26, x0);	o0 += r1;	o26 -= r1;
				r0 = comp(x27, x0);	o0 += r0;
				r1 = comp(x2, x1);	o1 += r1;	o2 -= r1;
				r0 = comp(x3, x1);	o1 += r0;	o3 -= r0;
				r1 = comp(x4, x1);	o1 += r1;	o4 -= r1;
				r0 = comp(x5, x1);	o1 += r0;	o5 -= r0;
				r1 = comp(x6, x1);	o1 += r1;	o6 -= r1;
				r0 = comp(x7, x1);	o1 += r0;	o7 -= r0;
				r1 = comp(x8, x1);	o1 += r1;	o8 -= r1;
				r0 = comp(x9, x1);	o1 += r0;	o9 -= r0;
				r1 = comp(x10, x1);	o1 += r1;	o10 -= r1;
				r0 = comp(x11, x1);	o1 += r0;	o11 -= r0;
				r1 = comp(x12, x1);	o1 += r1;	o12 -= r1;
				r0 = comp(x13, x1);	o1 += r0;	o13 -= r0;
				r1 = comp(x14, x1);	o1 += r1;	o14 -= r1;
				r0 = comp(x15, x1);	o1 += r0;	o15 -= r0;
				r1 = comp(x16, x1);	o1 += r1;	o16 -= r1;
				r0 = comp(x17, x1);	o1 += r0;	o17 -= r0;
				r1 = comp(x18, x1);	o1 += r1;	o18 -= r1;
				r0 = comp(x19, x1);	o1 += r0;	o19 -= r0;
				r1 = comp(x20, x1);	o1 += r1;	o20 -= r1;
				r0 = comp(x21, x1);	o1 += r0;	o21 -= r0;
				r1 = comp(x22, x1);	o1 += r1;	o22 -= r1;
				r0 = comp(x23, x1);	o1 += r0;	o23 -= r0;
				r1 = comp(x24, x1);	o1 += r1;	o24 -= r1;
				r0 = comp(x25, x1);	o1 += r0;	o25 -= r0;
				r1 = comp(x26, x1);	o1 += r1;	o26 -= r1;
				r0 = comp(x27, x1);	o1 += r0;
				r1 = comp(x3, x2);	o2 += r1;	o3 -= r1;
				r0 = comp(x4, x2);	o2 += r0;	o4 -= r0;
				r1 = comp(x5, x2);	o2 += r1;	o5 -= r1;
				r0 = comp(x6, x2);	o2 += r0;	o6 -= r0;
				r1 = comp(x7, x2);	o2 += r1;	o7 -= r1;
				r0 = comp(x8, x2);	o2 += r0;	o8 -= r0;
				r1 = comp(x9, x2);	o2 += r1;	o9 -= r1;
				r0 = comp(x10, x2);	o2 += r0;	o10 -= r0;
				r1 = comp(x11, x2);	o2 += r1;	o11 -= r1;
				r0 = comp(x12, x2);	o2 += r0;	o12 -= r0;
				r1 = comp(x13, x2);	o2 += r1;	o13 -= r1;
				r0 = comp(x14, x2);	o2 += r0;	o14 -= r0;
				r1 = comp(x15, x2);	o2 += r1;	o15 -= r1;
				r0 = comp(x16, x2);	o2 += r0;	o16 -= r0;
				r1 = comp(x17, x2);	o2 += r1;	o17 -= r1;
				r0 = comp(x18, x2);	o2 += r0;	o18 -= r0;
				r1 = comp(x19, x2);	o2 += r1;	o19 -= r1;
				r0 = comp(x20, x2);	o2 += r0;	o20 -= r0;
				r1 = comp(x21, x2);	o2 += r1;	o21 -= r1;
				r0 = comp(x22, x2);	o2 += r0;	o22 -= r0;
				r1 = comp(x23, x2);	o2 += r1;	o23 -= r1;
				r0 = comp(x24, x2);	o2 += r0;	o24 -= r0;
				r1 = comp(x25, x2);	o2 += r1;	o25 -= r1;
				r0 = comp(x26, x2);	o2 += r0;	o26 -= r0;
				r1 = comp(x27, x2);	o2 += r1;
				r0 = comp(x4, x3);	o3 += r0;	o4 -= r0;
				r1 = comp(x5, x3);	o3 += r1;	o5 -= r1;
				r0 = comp(x6, x3);	o3 += r0;	o6 -= r0;
				r1 = comp(x7, x3);	o3 += r1;	o7 -= r1;
				r0 = comp(x8, x3);	o3 += r0;	o8 -= r0;
				r1 = comp(x9, x3);	o3 += r1;	o9 -= r1;
				r0 = comp(x10, x3);	o3 += r0;	o10 -= r0;
				r1 = comp(x11, x3);	o3 += r1;	o11 -= r1;
				r0 = comp(x12, x3);	o3 += r0;	o12 -= r0;
				r1 = comp(x13, x3);	o3 += r1;	o13 -= r1;
				r0 = comp(x14, x3);	o3 += r0;	o14 -= r0;
				r1 = comp(x15, x3);	o3 += r1;	o15 -= r1;
				r0 = comp(x16, x3);	o3 += r0;	o16 -= r0;
				r1 = comp(x17, x3);	o3 += r1;	o17 -= r1;
				r0 = comp(x18, x3);	o3 += r0;	o18 -= r0;
				r1 = comp(x19, x3);	o3 += r1;	o19 -= r1;
				r0 = comp(x20, x3);	o3 += r0;	o20 -= r0;
				r1 = comp(x21, x3);	o3 += r1;	o21 -= r1;
				r0 = comp(x22, x3);	o3 += r0;	o22 -= r0;
				r1 = comp(x23, x3);	o3 += r1;	o23 -= r1;
				r0 = comp(x24, x3);	o3 += r0;	o24 -= r0;
				r1 = comp(x25, x3);	o3 += r1;	o25 -= r1;
				r0 = comp(x26, x3);	o3 += r0;	o26 -= r0;
				r1 = comp(x27, x3);	o3 += r1;
				r0 = comp(x5, x4);	o4 += r0;	o5 -= r0;
				r1 = comp(x6, x4);	o4 += r1;	o6 -= r1;
				r0 = comp(x7, x4);	o4 += r0;	o7 -= r0;
				r1 = comp(x8, x4);	o4 += r1;	o8 -= r1;
				r0 = comp(x9, x4);	o4 += r0;	o9 -= r0;
				r1 = comp(x10, x4);	o4 += r1;	o10 -= r1;
				r0 = comp(x11, x4);	o4 += r0;	o11 -= r0;
				r1 = comp(x12, x4);	o4 += r1;	o12 -= r1;
				r0 = comp(x13, x4);	o4 += r0;	o13 -= r0;
				r1 = comp(x14, x4);	o4 += r1;	o14 -= r1;
				r0 = comp(x15, x4);	o4 += r0;	o15 -= r0;
				r1 = comp(x16, x4);	o4 += r1;	o16 -= r1;
				r0 = comp(x17, x4);	o4 += r0;	o17 -= r0;
				r1 = comp(x18, x4);	o4 += r1;	o18 -= r1;
				r0 = comp(x19, x4);	o4 += r0;	o19 -= r0;
				r1 = comp(x20, x4);	o4 += r1;	o20 -= r1;
				r0 = comp(x21, x4);	o4 += r0;	o21 -= r0;
				r1 = comp(x22, x4);	o4 += r1;	o22 -= r1;
				r0 = comp(x23, x4);	o4 += r0;	o23 -= r0;
				r1 = comp(x24, x4);	o4 += r1;	o24 -= r1;
				r0 = comp(x25, x4);	o4 += r0;	o25 -= r0;
				r1 = comp(x26, x4);	o4 += r1;	o26 -= r1;
				r0 = comp(x27, x4);	o4 += r0;
				r1 = comp(x6, x5);	o5 += r1;	o6 -= r1;
				r0 = comp(x7, x5);	o5 += r0;	o7 -= r0;
				r1 = comp(x8, x5);	o5 += r1;	o8 -= r1;
				r0 = comp(x9, x5);	o5 += r0;	o9 -= r0;
				r1 = comp(x10, x5);	o5 += r1;	o10 -= r1;
				r0 = comp(x11, x5);	o5 += r0;	o11 -= r0;
				r1 = comp(x12, x5);	o5 += r1;	o12 -= r1;
				r0 = comp(x13, x5);	o5 += r0;	o13 -= r0;
				r1 = comp(x14, x5);	o5 += r1;	o14 -= r1;
				r0 = comp(x15, x5);	o5 += r0;	o15 -= r0;
				r1 = comp(x16, x5);	o5 += r1;	o16 -= r1;
				r0 = comp(x17, x5);	o5 += r0;	o17 -= r0;
				r1 = comp(x18, x5);	o5 += r1;	o18 -= r1;
				r0 = comp(x19, x5);	o5 += r0;	o19 -= r0;
				r1 = comp(x20, x5);	o5 += r1;	o20 -= r1;
				r0 = comp(x21, x5);	o5 += r0;	o21 -= r0;
				r1 = comp(x22, x5);	o5 += r1;	o22 -= r1;
				r0 = comp(x23, x5);	o5 += r0;	o23 -= r0;
				r1 = comp(x24, x5);	o5 += r1;	o24 -= r1;
				r0 = comp(x25, x5);	o5 += r0;	o25 -= r0;
				r1 = comp(x26, x5);	o5 += r1;	o26 -= r1;
				r0 = comp(x27, x5);	o5 += r0;
				r1 = comp(x7, x6);	o6 += r1;	o7 -= r1;
				r0 = comp(x8, x6);	o6 += r0;	o8 -= r0;
				r1 = comp(x9, x6);	o6 += r1;	o9 -= r1;
				r0 = comp(x10, x6);	o6 += r0;	o10 -= r0;
				r1 = comp(x11, x6);	o6 += r1;	o11 -= r1;
				r0 = comp(x12, x6);	o6 += r0;	o12 -= r0;
				r1 = comp(x13, x6);	o6 += r1;	o13 -= r1;
				r0 = comp(x14, x6);	o6 += r0;	o14 -= r0;
				r1 = comp(x15, x6);	o6 += r1;	o15 -= r1;
				r0 = comp(x16, x6);	o6 += r0;	o16 -= r0;
				r1 = comp(x17, x6);	o6 += r1;	o17 -= r1;
				r0 = comp(x18, x6);	o6 += r0;	o18 -= r0;
				r1 = comp(x19, x6);	o6 += r1;	o19 -= r1;
				r0 = comp(x20, x6);	o6 += r0;	o20 -= r0;
				r1 = comp(x21, x6);	o6 += r1;	o21 -= r1;
				r0 = comp(x22, x6);	o6 += r0;	o22 -= r0;
				r1 = comp(x23, x6);	o6 += r1;	o23 -= r1;
				r0 = comp(x24, x6);	o6 += r0;	o24 -= r0;
				r1 = comp(x25, x6);	o6 += r1;	o25 -= r1;
				r0 = comp(x26, x6);	o6 += r0;	o26 -= r0;
				r1 = comp(x27, x6);	o6 += r1;
				r0 = comp(x8, x7);	o7 += r0;	o8 -= r0;
				r1 = comp(x9, x7);	o7 += r1;	o9 -= r1;
				r0 = comp(x10, x7);	o7 += r0;	o10 -= r0;
				r1 = comp(x11, x7);	o7 += r1;	o11 -= r1;
				r0 = comp(x12, x7);	o7 += r0;	o12 -= r0;
				r1 = comp(x13, x7);	o7 += r1;	o13 -= r1;
				r0 = comp(x14, x7);	o7 += r0;	o14 -= r0;
				r1 = comp(x15, x7);	o7 += r1;	o15 -= r1;
				r0 = comp(x16, x7);	o7 += r0;	o16 -= r0;
				r1 = comp(x17, x7);	o7 += r1;	o17 -= r1;
				r0 = comp(x18, x7);	o7 += r0;	o18 -= r0;
				r1 = comp(x19, x7);	o7 += r1;	o19 -= r1;
				r0 = comp(x20, x7);	o7 += r0;	o20 -= r0;
				r1 = comp(x21, x7);	o7 += r1;	o21 -= r1;
				r0 = comp(x22, x7);	o7 += r0;	o22 -= r0;
				r1 = comp(x23, x7);	o7 += r1;	o23 -= r1;
				r0 = comp(x24, x7);	o7 += r0;	o24 -= r0;
				r1 = comp(x25, x7);	o7 += r1;	o25 -= r1;
				r0 = comp(x26, x7);	o7 += r0;	o26 -= r0;
				r1 = comp(x27, x7);	o7 += r1;
				r0 = comp(x9, x8);	o8 += r0;	o9 -= r0;
				r1 = comp(x10, x8);	o8 += r1;	o10 -= r1;
				r0 = comp(x11, x8);	o8 += r0;	o11 -= r0;
				r1 = comp(x12, x8);	o8 += r1;	o12 -= r1;
				r0 = comp(x13, x8);	o8 += r0;	o13 -= r0;
				r1 = comp(x14, x8);	o8 += r1;	o14 -= r1;
				r0 = comp(x15, x8);	o8 += r0;	o15 -= r0;
				r1 = comp(x16, x8);	o8 += r1;	o16 -= r1;
				r0 = comp(x17, x8);	o8 += r0;	o17 -= r0;
				r1 = comp(x18, x8);	o8 += r1;	o18 -= r1;
				r0 = comp(x19, x8);	o8 += r0;	o19 -= r0;
				r1 = comp(x20, x8);	o8 += r1;	o20 -= r1;
				r0 = comp(x21, x8);	o8 += r0;	o21 -= r0;
				r1 = comp(x22, x8);	o8 += r1;	o22 -= r1;
				r0 = comp(x23, x8);	o8 += r0;	o23 -= r0;
				r1 = comp(x24, x8);	o8 += r1;	o24 -= r1;
				r0 = comp(x25, x8);	o8 += r0;	o25 -= r0;
				r1 = comp(x26, x8);	o8 += r1;	o26 -= r1;
				r0 = comp(x27, x8);	o8 += r0;
				r1 = comp(x10, x9);	o9 += r1;	o10 -= r1;
				r0 = comp(x11, x9);	o9 += r0;	o11 -= r0;
				r1 = comp(x12, x9);	o9 += r1;	o12 -= r1;
				r0 = comp(x13, x9);	o9 += r0;	o13 -= r0;
				r1 = comp(x14, x9);	o9 += r1;	o14 -= r1;
				r0 = comp(x15, x9);	o9 += r0;	o15 -= r0;
				r1 = comp(x16, x9);	o9 += r1;	o16 -= r1;
				r0 = comp(x17, x9);	o9 += r0;	o17 -= r0;
				r1 = comp(x18, x9);	o9 += r1;	o18 -= r1;
				r0 = comp(x19, x9);	o9 += r0;	o19 -= r0;
				r1 = comp(x20, x9);	o9 += r1;	o20 -= r1;
				r0 = comp(x21, x9);	o9 += r0;	o21 -= r0;
				r1 = comp(x22, x9);	o9 += r1;	o22 -= r1;
				r0 = comp(x23, x9);	o9 += r0;	o23 -= r0;
				r1 = comp(x24, x9);	o9 += r1;	o24 -= r1;
				r0 = comp(x25, x9);	o9 += r0;	o25 -= r0;
				r1 = comp(x26, x9);	o9 += r1;	o26 -= r1;
				r0 = comp(x27, x9);	o9 += r0;
				r1 = comp(x11, x10);	o10 += r1;	o11 -= r1;
				r0 = comp(x12, x10);	o10 += r0;	o12 -= r0;
				r1 = comp(x13, x10);	o10 += r1;	o13 -= r1;
				r0 = comp(x14, x10);	o10 += r0;	o14 -= r0;
				r1 = comp(x15, x10);	o10 += r1;	o15 -= r1;
				r0 = comp(x16, x10);	o10 += r0;	o16 -= r0;
				r1 = comp(x17, x10);	o10 += r1;	o17 -= r1;
				r0 = comp(x18, x10);	o10 += r0;	o18 -= r0;
				r1 = comp(x19, x10);	o10 += r1;	o19 -= r1;
				r0 = comp(x20, x10);	o10 += r0;	o20 -= r0;
				r1 = comp(x21, x10);	o10 += r1;	o21 -= r1;
				r0 = comp(x22, x10);	o10 += r0;	o22 -= r0;
				r1 = comp(x23, x10);	o10 += r1;	o23 -= r1;
				r0 = comp(x24, x10);	o10 += r0;	o24 -= r0;
				r1 = comp(x25, x10);	o10 += r1;	o25 -= r1;
				r0 = comp(x26, x10);	o10 += r0;	o26 -= r0;
				r1 = comp(x27, x10);	o10 += r1;
				r0 = comp(x12, x11);	o11 += r0;	o12 -= r0;
				r1 = comp(x13, x11);	o11 += r1;	o13 -= r1;
				r0 = comp(x14, x11);	o11 += r0;	o14 -= r0;
				r1 = comp(x15, x11);	o11 += r1;	o15 -= r1;
				r0 = comp(x16, x11);	o11 += r0;	o16 -= r0;
				r1 = comp(x17, x11);	o11 += r1;	o17 -= r1;
				r0 = comp(x18, x11);	o11 += r0;	o18 -= r0;
				r1 = comp(x19, x11);	o11 += r1;	o19 -= r1;
				r0 = comp(x20, x11);	o11 += r0;	o20 -= r0;
				r1 = comp(x21, x11);	o11 += r1;	o21 -= r1;
				r0 = comp(x22, x11);	o11 += r0;	o22 -= r0;
				r1 = comp(x23, x11);	o11 += r1;	o23 -= r1;
				r0 = comp(x24, x11);	o11 += r0;	o24 -= r0;
				r1 = comp(x25, x11);	o11 += r1;	o25 -= r1;
				r0 = comp(x26, x11);	o11 += r0;	o26 -= r0;
				r1 = comp(x27, x11);	o11 += r1;
				r0 = comp(x13, x12);	o12 += r0;	o13 -= r0;
				r1 = comp(x14, x12);	o12 += r1;	o14 -= r1;
				r0 = comp(x15, x12);	o12 += r0;	o15 -= r0;
				r1 = comp(x16, x12);	o12 += r1;	o16 -= r1;
				r0 = comp(x17, x12);	o12 += r0;	o17 -= r0;
				r1 = comp(x18, x12);	o12 += r1;	o18 -= r1;
				r0 = comp(x19, x12);	o12 += r0;	o19 -= r0;
				r1 = comp(x20, x12);	o12 += r1;	o20 -= r1;
				r0 = comp(x21, x12);	o12 += r0;	o21 -= r0;
				r1 = comp(x22, x12);	o12 += r1;	o22 -= r1;
				r0 = comp(x23, x12);	o12 += r0;	o23 -= r0;
				r1 = comp(x24, x12);	o12 += r1;	o24 -= r1;
				r0 = comp(x25, x12);	o12 += r0;	o25 -= r0;
				r1 = comp(x26, x12);	o12 += r1;	o26 -= r1;
				r0 = comp(x27, x12);	o12 += r0;
				r1 = comp(x14, x13);	o13 += r1;	o14 -= r1;
				r0 = comp(x15, x13);	o13 += r0;	o15 -= r0;
				r1 = comp(x16, x13);	o13 += r1;	o16 -= r1;
				r0 = comp(x17, x13);	o13 += r0;	o17 -= r0;
				r1 = comp(x18, x13);	o13 += r1;	o18 -= r1;
				r0 = comp(x19, x13);	o13 += r0;	o19 -= r0;
				r1 = comp(x20, x13);	o13 += r1;	o20 -= r1;
				r0 = comp(x21, x13);	o13 += r0;	o21 -= r0;
				r1 = comp(x22, x13);	o13 += r1;	o22 -= r1;
				r0 = comp(x23, x13);	o13 += r0;	o23 -= r0;
				r1 = comp(x24, x13);	o13 += r1;	o24 -= r1;
				r0 = comp(x25, x13);	o13 += r0;	o25 -= r0;
				r1 = comp(x26, x13);	o13 += r1;	o26 -= r1;
				r0 = comp(x27, x13);	o13 += r0;
				r1 = comp(x15, x14);	o14 += r1;	o15 -= r1;
				r0 = comp(x16, x14);	o14 += r0;	o16 -= r0;
				r1 = comp(x17, x14);	o14 += r1;	o17 -= r1;
				r0 = comp(x18, x14);	o14 += r0;	o18 -= r0;
				r1 = comp(x19, x14);	o14 += r1;	o19 -= r1;
				r0 = comp(x20, x14);	o14 += r0;	o20 -= r0;
				r1 = comp(x21, x14);	o14 += r1;	o21 -= r1;
				r0 = comp(x22, x14);	o14 += r0;	o22 -= r0;
				r1 = comp(x23, x14);	o14 += r1;	o23 -= r1;
				r0 = comp(x24, x14);	o14 += r0;	o24 -= r0;
				r1 = comp(x25, x14);	o14 += r1;	o25 -= r1;
				r0 = comp(x26, x14);	o14 += r0;	o26 -= r0;
				r1 = comp(x27, x14);	o14 += r1;
				r0 = comp(x16, x15);	o15 += r0;	o16 -= r0;
				r1 = comp(x17, x15);	o15 += r1;	o17 -= r1;
				r0 = comp(x18, x15);	o15 += r0;	o18 -= r0;
				r1 = comp(x19, x15);	o15 += r1;	o19 -= r1;
				r0 = comp(x20, x15);	o15 += r0;	o20 -= r0;
				r1 = comp(x21, x15);	o15 += r1;	o21 -= r1;
				r0 = comp(x22, x15);	o15 += r0;	o22 -= r0;
				r1 = comp(x23, x15);	o15 += r1;	o23 -= r1;
				r0 = comp(x24, x15);	o15 += r0;	o24 -= r0;
				r1 = comp(x25, x15);	o15 += r1;	o25 -= r1;
				r0 = comp(x26, x15);	o15 += r0;	o26 -= r0;
				r1 = comp(x27, x15);	o15 += r1;
				r0 = comp(x17, x16);	o16 += r0;	o17 -= r0;
				r1 = comp(x18, x16);	o16 += r1;	o18 -= r1;
				r0 = comp(x19, x16);	o16 += r0;	o19 -= r0;
				r1 = comp(x20, x16);	o16 += r1;	o20 -= r1;
				r0 = comp(x21, x16);	o16 += r0;	o21 -= r0;
				r1 = comp(x22, x16);	o16 += r1;	o22 -= r1;
				r0 = comp(x23, x16);	o16 += r0;	o23 -= r0;
				r1 = comp(x24, x16);	o16 += r1;	o24 -= r1;
				r0 = comp(x25, x16);	o16 += r0;	o25 -= r0;
				r1 = comp(x26, x16);	o16 += r1;	o26 -= r1;
				r0 = comp(x27, x16);	o16 += r0;
				r1 = comp(x18, x17);	o17 += r1;	o18 -= r1;
				r0 = comp(x19, x17);	o17 += r0;	o19 -= r0;
				r1 = comp(x20, x17);	o17 += r1;	o20 -= r1;
				r0 = comp(x21, x17);	o17 += r0;	o21 -= r0;
				r1 = comp(x22, x17);	o17 += r1;	o22 -= r1;
				r0 = comp(x23, x17);	o17 += r0;	o23 -= r0;
				r1 = comp(x24, x17);	o17 += r1;	o24 -= r1;
				r0 = comp(x25, x17);	o17 += r0;	o25 -= r0;
				r1 = comp(x26, x17);	o17 += r1;	o26 -= r1;
				r0 = comp(x27, x17);	o17 += r0;
				r1 = comp(x19, x18);	o18 += r1;	o19 -= r1;
				r0 = comp(x20, x18);	o18 += r0;	o20 -= r0;
				r1 = comp(x21, x18);	o18 += r1;	o21 -= r1;
				r0 = comp(x22, x18);	o18 += r0;	o22 -= r0;
				r1 = comp(x23, x18);	o18 += r1;	o23 -= r1;
				r0 = comp(x24, x18);	o18 += r0;	o24 -= r0;
				r1 = comp(x25, x18);	o18 += r1;	o25 -= r1;
				r0 = comp(x26, x18);	o18 += r0;	o26 -= r0;
				r1 = comp(x27, x18);	o18 += r1;
				r0 = comp(x20, x19);	o19 += r0;	o20 -= r0;
				r1 = comp(x21, x19);	o19 += r1;	o21 -= r1;
				r0 = comp(x22, x19);	o19 += r0;	o22 -= r0;
				r1 = comp(x23, x19);	o19 += r1;	o23 -= r1;
				r0 = comp(x24, x19);	o19 += r0;	o24 -= r0;
				r1 = comp(x25, x19);	o19 += r1;	o25 -= r1;
				r0 = comp(x26, x19);	o19 += r0;	o26 -= r0;
				r1 = comp(x27, x19);	o19 += r1;
				r0 = comp(x21, x20);	o20 += r0;	o21 -= r0;
				r1 = comp(x22, x20);	o20 += r1;	o22 -= r1;
				r0 = comp(x23, x20);	o20 += r0;	o23 -= r0;
				r1 = comp(x24, x20);	o20 += r1;	o24 -= r1;
				r0 = comp(x25, x20);	o20 += r0;	o25 -= r0;
				r1 = comp(x26, x20);	o20 += r1;	o26 -= r1;
				r0 = comp(x27, x20);	o20 += r0;
				r1 = comp(x22, x21);	o21 += r1;	o22 -= r1;
				r0 = comp(x23, x21);	o21 += r0;	o23 -= r0;
				r1 = comp(x24, x21);	o21 += r1;	o24 -= r1;
				r0 = comp(x25, x21);	o21 += r0;	o25 -= r0;
				r1 = comp(x26, x21);	o21 += r1;	o26 -= r1;
				r0 = comp(x27, x21);	o21 += r0;
				r1 = comp(x23, x22);	o22 += r1;	o23 -= r1;
				r0 = comp(x24, x22);	o22 += r0;	o24 -= r0;
				r1 = comp(x25, x22);	o22 += r1;	o25 -= r1;
				r0 = comp(x26, x22);	o22 += r0;	o26 -= r0;
				r1 = comp(x27, x22);	o22 += r1;
				r0 = comp(x24, x23);	o23 += r0;	o24 -= r0;
				r1 = comp(x25, x23);	o23 += r1;	o25 -= r1;
				r0 = comp(x26, x23);	o23 += r0;	o26 -= r0;
				r1 = comp(x27, x23);	o23 += r1;
				r0 = comp(x25, x24);	o24 += r0;	o25 -= r0;
				r1 = comp(x26, x24);	o24 += r1;	o26 -= r1;
				r0 = comp(x27, x24);	o24 += r0;
				r1 = comp(x26, x25);	o25 += r1;	o26 -= r1;
				r0 = comp(x27, x25);	o25 += r0;
				r1 = comp(x27, x26);	o26 += r1;
				o27 = 378 - o0 - o1 - o2 - o3 - o4 - o5 - o6 - o7 - o8 - o9 - o10 - o11 - o12 - o13 - o14 - o15 - o16 - o17 - o18 - o19 - o20 - o21 - o22 - o23 - o24 - o25 - o26;
				arr[o0] = x0;
				arr[o1] = x1;
				arr[o2] = x2;
				arr[o3] = x3;
				arr[o4] = x4;
				arr[o5] = x5;
				arr[o6] = x6;
				arr[o7] = x7;
				arr[o8] = x8;
				arr[o9] = x9;
				arr[o10] = x10;
				arr[o11] = x11;
				arr[o12] = x12;
				arr[o13] = x13;
				arr[o14] = x14;
				arr[o15] = x15;
				arr[o16] = x16;
				arr[o17] = x17;
				arr[o18] = x18;
				arr[o19] = x19;
				arr[o20] = x20;
				arr[o21] = x21;
				arr[o22] = x22;
				arr[o23] = x23;
				arr[o24] = x24;
				arr[o25] = x25;
				arr[o26] = x26;
				arr[o27] = x27;

				FinishingSorter{}(arr, 28);
			}

			void sort29(T* arr)
			{
				T x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28;
				x0 = arr[0];
				x1 = arr[1];
				x2 = arr[2];
				x3 = arr[3];
				x4 = arr[4];
				x5 = arr[5];
				x6 = arr[6];
				x7 = arr[7];
				x8 = arr[8];
				x9 = arr[9];
				x10 = arr[10];
				x11 = arr[11];
				x12 = arr[12];
				x13 = arr[13];
				x14 = arr[14];
				x15 = arr[15];
				x16 = arr[16];
				x17 = arr[17];
				x18 = arr[18];
				x19 = arr[19];
				x20 = arr[20];
				x21 = arr[21];
				x22 = arr[22];
				x23 = arr[23];
				x24 = arr[24];
				x25 = arr[25];
				x26 = arr[26];
				x27 = arr[27];
				x28 = arr[28];
				int o0 = 0, o1 = 1, o2 = 2, o3 = 3, o4 = 4, o5 = 5, o6 = 6, o7 = 7, o8 = 8, o9 = 9, o10 = 10, o11 = 11, o12 = 12, o13 = 13, o14 = 14, o15 = 15, o16 = 16, o17 = 17, o18 = 18, o19 = 19, o20 = 20, o21 = 21, o22 = 22, o23 = 23, o24 = 24, o25 = 25, o26 = 26, o27 = 27, o28 = 0;
				auto r0 = comp(x1, x0);	o0 += r0;	o1 -= r0;
				auto r1 = comp(x2, x0);	o0 += r1;	o2 -= r1;
				r0 = comp(x3, x0);	o0 += r0;	o3 -= r0;
				r1 = comp(x4, x0);	o0 += r1;	o4 -= r1;
				r0 = comp(x5, x0);	o0 += r0;	o5 -= r0;
				r1 = comp(x6, x0);	o0 += r1;	o6 -= r1;
				r0 = comp(x7, x0);	o0 += r0;	o7 -= r0;
				r1 = comp(x8, x0);	o0 += r1;	o8 -= r1;
				r0 = comp(x9, x0);	o0 += r0;	o9 -= r0;
				r1 = comp(x10, x0);	o0 += r1;	o10 -= r1;
				r0 = comp(x11, x0);	o0 += r0;	o11 -= r0;
				r1 = comp(x12, x0);	o0 += r1;	o12 -= r1;
				r0 = comp(x13, x0);	o0 += r0;	o13 -= r0;
				r1 = comp(x14, x0);	o0 += r1;	o14 -= r1;
				r0 = comp(x15, x0);	o0 += r0;	o15 -= r0;
				r1 = comp(x16, x0);	o0 += r1;	o16 -= r1;
				r0 = comp(x17, x0);	o0 += r0;	o17 -= r0;
				r1 = comp(x18, x0);	o0 += r1;	o18 -= r1;
				r0 = comp(x19, x0);	o0 += r0;	o19 -= r0;
				r1 = comp(x20, x0);	o0 += r1;	o20 -= r1;
				r0 = comp(x21, x0);	o0 += r0;	o21 -= r0;
				r1 = comp(x22, x0);	o0 += r1;	o22 -= r1;
				r0 = comp(x23, x0);	o0 += r0;	o23 -= r0;
				r1 = comp(x24, x0);	o0 += r1;	o24 -= r1;
				r0 = comp(x25, x0);	o0 += r0;	o25 -= r0;
				r1 = comp(x26, x0);	o0 += r1;	o26 -= r1;
				r0 = comp(x27, x0);	o0 += r0;	o27 -= r0;
				r1 = comp(x28, x0);	o0 += r1;
				r0 = comp(x2, x1);	o1 += r0;	o2 -= r0;
				r1 = comp(x3, x1);	o1 += r1;	o3 -= r1;
				r0 = comp(x4, x1);	o1 += r0;	o4 -= r0;
				r1 = comp(x5, x1);	o1 += r1;	o5 -= r1;
				r0 = comp(x6, x1);	o1 += r0;	o6 -= r0;
				r1 = comp(x7, x1);	o1 += r1;	o7 -= r1;
				r0 = comp(x8, x1);	o1 += r0;	o8 -= r0;
				r1 = comp(x9, x1);	o1 += r1;	o9 -= r1;
				r0 = comp(x10, x1);	o1 += r0;	o10 -= r0;
				r1 = comp(x11, x1);	o1 += r1;	o11 -= r1;
				r0 = comp(x12, x1);	o1 += r0;	o12 -= r0;
				r1 = comp(x13, x1);	o1 += r1;	o13 -= r1;
				r0 = comp(x14, x1);	o1 += r0;	o14 -= r0;
				r1 = comp(x15, x1);	o1 += r1;	o15 -= r1;
				r0 = comp(x16, x1);	o1 += r0;	o16 -= r0;
				r1 = comp(x17, x1);	o1 += r1;	o17 -= r1;
				r0 = comp(x18, x1);	o1 += r0;	o18 -= r0;
				r1 = comp(x19, x1);	o1 += r1;	o19 -= r1;
				r0 = comp(x20, x1);	o1 += r0;	o20 -= r0;
				r1 = comp(x21, x1);	o1 += r1;	o21 -= r1;
				r0 = comp(x22, x1);	o1 += r0;	o22 -= r0;
				r1 = comp(x23, x1);	o1 += r1;	o23 -= r1;
				r0 = comp(x24, x1);	o1 += r0;	o24 -= r0;
				r1 = comp(x25, x1);	o1 += r1;	o25 -= r1;
				r0 = comp(x26, x1);	o1 += r0;	o26 -= r0;
				r1 = comp(x27, x1);	o1 += r1;	o27 -= r1;
				r0 = comp(x28, x1);	o1 += r0;
				r1 = comp(x3, x2);	o2 += r1;	o3 -= r1;
				r0 = comp(x4, x2);	o2 += r0;	o4 -= r0;
				r1 = comp(x5, x2);	o2 += r1;	o5 -= r1;
				r0 = comp(x6, x2);	o2 += r0;	o6 -= r0;
				r1 = comp(x7, x2);	o2 += r1;	o7 -= r1;
				r0 = comp(x8, x2);	o2 += r0;	o8 -= r0;
				r1 = comp(x9, x2);	o2 += r1;	o9 -= r1;
				r0 = comp(x10, x2);	o2 += r0;	o10 -= r0;
				r1 = comp(x11, x2);	o2 += r1;	o11 -= r1;
				r0 = comp(x12, x2);	o2 += r0;	o12 -= r0;
				r1 = comp(x13, x2);	o2 += r1;	o13 -= r1;
				r0 = comp(x14, x2);	o2 += r0;	o14 -= r0;
				r1 = comp(x15, x2);	o2 += r1;	o15 -= r1;
				r0 = comp(x16, x2);	o2 += r0;	o16 -= r0;
				r1 = comp(x17, x2);	o2 += r1;	o17 -= r1;
				r0 = comp(x18, x2);	o2 += r0;	o18 -= r0;
				r1 = comp(x19, x2);	o2 += r1;	o19 -= r1;
				r0 = comp(x20, x2);	o2 += r0;	o20 -= r0;
				r1 = comp(x21, x2);	o2 += r1;	o21 -= r1;
				r0 = comp(x22, x2);	o2 += r0;	o22 -= r0;
				r1 = comp(x23, x2);	o2 += r1;	o23 -= r1;
				r0 = comp(x24, x2);	o2 += r0;	o24 -= r0;
				r1 = comp(x25, x2);	o2 += r1;	o25 -= r1;
				r0 = comp(x26, x2);	o2 += r0;	o26 -= r0;
				r1 = comp(x27, x2);	o2 += r1;	o27 -= r1;
				r0 = comp(x28, x2);	o2 += r0;
				r1 = comp(x4, x3);	o3 += r1;	o4 -= r1;
				r0 = comp(x5, x3);	o3 += r0;	o5 -= r0;
				r1 = comp(x6, x3);	o3 += r1;	o6 -= r1;
				r0 = comp(x7, x3);	o3 += r0;	o7 -= r0;
				r1 = comp(x8, x3);	o3 += r1;	o8 -= r1;
				r0 = comp(x9, x3);	o3 += r0;	o9 -= r0;
				r1 = comp(x10, x3);	o3 += r1;	o10 -= r1;
				r0 = comp(x11, x3);	o3 += r0;	o11 -= r0;
				r1 = comp(x12, x3);	o3 += r1;	o12 -= r1;
				r0 = comp(x13, x3);	o3 += r0;	o13 -= r0;
				r1 = comp(x14, x3);	o3 += r1;	o14 -= r1;
				r0 = comp(x15, x3);	o3 += r0;	o15 -= r0;
				r1 = comp(x16, x3);	o3 += r1;	o16 -= r1;
				r0 = comp(x17, x3);	o3 += r0;	o17 -= r0;
				r1 = comp(x18, x3);	o3 += r1;	o18 -= r1;
				r0 = comp(x19, x3);	o3 += r0;	o19 -= r0;
				r1 = comp(x20, x3);	o3 += r1;	o20 -= r1;
				r0 = comp(x21, x3);	o3 += r0;	o21 -= r0;
				r1 = comp(x22, x3);	o3 += r1;	o22 -= r1;
				r0 = comp(x23, x3);	o3 += r0;	o23 -= r0;
				r1 = comp(x24, x3);	o3 += r1;	o24 -= r1;
				r0 = comp(x25, x3);	o3 += r0;	o25 -= r0;
				r1 = comp(x26, x3);	o3 += r1;	o26 -= r1;
				r0 = comp(x27, x3);	o3 += r0;	o27 -= r0;
				r1 = comp(x28, x3);	o3 += r1;
				r0 = comp(x5, x4);	o4 += r0;	o5 -= r0;
				r1 = comp(x6, x4);	o4 += r1;	o6 -= r1;
				r0 = comp(x7, x4);	o4 += r0;	o7 -= r0;
				r1 = comp(x8, x4);	o4 += r1;	o8 -= r1;
				r0 = comp(x9, x4);	o4 += r0;	o9 -= r0;
				r1 = comp(x10, x4);	o4 += r1;	o10 -= r1;
				r0 = comp(x11, x4);	o4 += r0;	o11 -= r0;
				r1 = comp(x12, x4);	o4 += r1;	o12 -= r1;
				r0 = comp(x13, x4);	o4 += r0;	o13 -= r0;
				r1 = comp(x14, x4);	o4 += r1;	o14 -= r1;
				r0 = comp(x15, x4);	o4 += r0;	o15 -= r0;
				r1 = comp(x16, x4);	o4 += r1;	o16 -= r1;
				r0 = comp(x17, x4);	o4 += r0;	o17 -= r0;
				r1 = comp(x18, x4);	o4 += r1;	o18 -= r1;
				r0 = comp(x19, x4);	o4 += r0;	o19 -= r0;
				r1 = comp(x20, x4);	o4 += r1;	o20 -= r1;
				r0 = comp(x21, x4);	o4 += r0;	o21 -= r0;
				r1 = comp(x22, x4);	o4 += r1;	o22 -= r1;
				r0 = comp(x23, x4);	o4 += r0;	o23 -= r0;
				r1 = comp(x24, x4);	o4 += r1;	o24 -= r1;
				r0 = comp(x25, x4);	o4 += r0;	o25 -= r0;
				r1 = comp(x26, x4);	o4 += r1;	o26 -= r1;
				r0 = comp(x27, x4);	o4 += r0;	o27 -= r0;
				r1 = comp(x28, x4);	o4 += r1;
				r0 = comp(x6, x5);	o5 += r0;	o6 -= r0;
				r1 = comp(x7, x5);	o5 += r1;	o7 -= r1;
				r0 = comp(x8, x5);	o5 += r0;	o8 -= r0;
				r1 = comp(x9, x5);	o5 += r1;	o9 -= r1;
				r0 = comp(x10, x5);	o5 += r0;	o10 -= r0;
				r1 = comp(x11, x5);	o5 += r1;	o11 -= r1;
				r0 = comp(x12, x5);	o5 += r0;	o12 -= r0;
				r1 = comp(x13, x5);	o5 += r1;	o13 -= r1;
				r0 = comp(x14, x5);	o5 += r0;	o14 -= r0;
				r1 = comp(x15, x5);	o5 += r1;	o15 -= r1;
				r0 = comp(x16, x5);	o5 += r0;	o16 -= r0;
				r1 = comp(x17, x5);	o5 += r1;	o17 -= r1;
				r0 = comp(x18, x5);	o5 += r0;	o18 -= r0;
				r1 = comp(x19, x5);	o5 += r1;	o19 -= r1;
				r0 = comp(x20, x5);	o5 += r0;	o20 -= r0;
				r1 = comp(x21, x5);	o5 += r1;	o21 -= r1;
				r0 = comp(x22, x5);	o5 += r0;	o22 -= r0;
				r1 = comp(x23, x5);	o5 += r1;	o23 -= r1;
				r0 = comp(x24, x5);	o5 += r0;	o24 -= r0;
				r1 = comp(x25, x5);	o5 += r1;	o25 -= r1;
				r0 = comp(x26, x5);	o5 += r0;	o26 -= r0;
				r1 = comp(x27, x5);	o5 += r1;	o27 -= r1;
				r0 = comp(x28, x5);	o5 += r0;
				r1 = comp(x7, x6);	o6 += r1;	o7 -= r1;
				r0 = comp(x8, x6);	o6 += r0;	o8 -= r0;
				r1 = comp(x9, x6);	o6 += r1;	o9 -= r1;
				r0 = comp(x10, x6);	o6 += r0;	o10 -= r0;
				r1 = comp(x11, x6);	o6 += r1;	o11 -= r1;
				r0 = comp(x12, x6);	o6 += r0;	o12 -= r0;
				r1 = comp(x13, x6);	o6 += r1;	o13 -= r1;
				r0 = comp(x14, x6);	o6 += r0;	o14 -= r0;
				r1 = comp(x15, x6);	o6 += r1;	o15 -= r1;
				r0 = comp(x16, x6);	o6 += r0;	o16 -= r0;
				r1 = comp(x17, x6);	o6 += r1;	o17 -= r1;
				r0 = comp(x18, x6);	o6 += r0;	o18 -= r0;
				r1 = comp(x19, x6);	o6 += r1;	o19 -= r1;
				r0 = comp(x20, x6);	o6 += r0;	o20 -= r0;
				r1 = comp(x21, x6);	o6 += r1;	o21 -= r1;
				r0 = comp(x22, x6);	o6 += r0;	o22 -= r0;
				r1 = comp(x23, x6);	o6 += r1;	o23 -= r1;
				r0 = comp(x24, x6);	o6 += r0;	o24 -= r0;
				r1 = comp(x25, x6);	o6 += r1;	o25 -= r1;
				r0 = comp(x26, x6);	o6 += r0;	o26 -= r0;
				r1 = comp(x27, x6);	o6 += r1;	o27 -= r1;
				r0 = comp(x28, x6);	o6 += r0;
				r1 = comp(x8, x7);	o7 += r1;	o8 -= r1;
				r0 = comp(x9, x7);	o7 += r0;	o9 -= r0;
				r1 = comp(x10, x7);	o7 += r1;	o10 -= r1;
				r0 = comp(x11, x7);	o7 += r0;	o11 -= r0;
				r1 = comp(x12, x7);	o7 += r1;	o12 -= r1;
				r0 = comp(x13, x7);	o7 += r0;	o13 -= r0;
				r1 = comp(x14, x7);	o7 += r1;	o14 -= r1;
				r0 = comp(x15, x7);	o7 += r0;	o15 -= r0;
				r1 = comp(x16, x7);	o7 += r1;	o16 -= r1;
				r0 = comp(x17, x7);	o7 += r0;	o17 -= r0;
				r1 = comp(x18, x7);	o7 += r1;	o18 -= r1;
				r0 = comp(x19, x7);	o7 += r0;	o19 -= r0;
				r1 = comp(x20, x7);	o7 += r1;	o20 -= r1;
				r0 = comp(x21, x7);	o7 += r0;	o21 -= r0;
				r1 = comp(x22, x7);	o7 += r1;	o22 -= r1;
				r0 = comp(x23, x7);	o7 += r0;	o23 -= r0;
				r1 = comp(x24, x7);	o7 += r1;	o24 -= r1;
				r0 = comp(x25, x7);	o7 += r0;	o25 -= r0;
				r1 = comp(x26, x7);	o7 += r1;	o26 -= r1;
				r0 = comp(x27, x7);	o7 += r0;	o27 -= r0;
				r1 = comp(x28, x7);	o7 += r1;
				r0 = comp(x9, x8);	o8 += r0;	o9 -= r0;
				r1 = comp(x10, x8);	o8 += r1;	o10 -= r1;
				r0 = comp(x11, x8);	o8 += r0;	o11 -= r0;
				r1 = comp(x12, x8);	o8 += r1;	o12 -= r1;
				r0 = comp(x13, x8);	o8 += r0;	o13 -= r0;
				r1 = comp(x14, x8);	o8 += r1;	o14 -= r1;
				r0 = comp(x15, x8);	o8 += r0;	o15 -= r0;
				r1 = comp(x16, x8);	o8 += r1;	o16 -= r1;
				r0 = comp(x17, x8);	o8 += r0;	o17 -= r0;
				r1 = comp(x18, x8);	o8 += r1;	o18 -= r1;
				r0 = comp(x19, x8);	o8 += r0;	o19 -= r0;
				r1 = comp(x20, x8);	o8 += r1;	o20 -= r1;
				r0 = comp(x21, x8);	o8 += r0;	o21 -= r0;
				r1 = comp(x22, x8);	o8 += r1;	o22 -= r1;
				r0 = comp(x23, x8);	o8 += r0;	o23 -= r0;
				r1 = comp(x24, x8);	o8 += r1;	o24 -= r1;
				r0 = comp(x25, x8);	o8 += r0;	o25 -= r0;
				r1 = comp(x26, x8);	o8 += r1;	o26 -= r1;
				r0 = comp(x27, x8);	o8 += r0;	o27 -= r0;
				r1 = comp(x28, x8);	o8 += r1;
				r0 = comp(x10, x9);	o9 += r0;	o10 -= r0;
				r1 = comp(x11, x9);	o9 += r1;	o11 -= r1;
				r0 = comp(x12, x9);	o9 += r0;	o12 -= r0;
				r1 = comp(x13, x9);	o9 += r1;	o13 -= r1;
				r0 = comp(x14, x9);	o9 += r0;	o14 -= r0;
				r1 = comp(x15, x9);	o9 += r1;	o15 -= r1;
				r0 = comp(x16, x9);	o9 += r0;	o16 -= r0;
				r1 = comp(x17, x9);	o9 += r1;	o17 -= r1;
				r0 = comp(x18, x9);	o9 += r0;	o18 -= r0;
				r1 = comp(x19, x9);	o9 += r1;	o19 -= r1;
				r0 = comp(x20, x9);	o9 += r0;	o20 -= r0;
				r1 = comp(x21, x9);	o9 += r1;	o21 -= r1;
				r0 = comp(x22, x9);	o9 += r0;	o22 -= r0;
				r1 = comp(x23, x9);	o9 += r1;	o23 -= r1;
				r0 = comp(x24, x9);	o9 += r0;	o24 -= r0;
				r1 = comp(x25, x9);	o9 += r1;	o25 -= r1;
				r0 = comp(x26, x9);	o9 += r0;	o26 -= r0;
				r1 = comp(x27, x9);	o9 += r1;	o27 -= r1;
				r0 = comp(x28, x9);	o9 += r0;
				r1 = comp(x11, x10);	o10 += r1;	o11 -= r1;
				r0 = comp(x12, x10);	o10 += r0;	o12 -= r0;
				r1 = comp(x13, x10);	o10 += r1;	o13 -= r1;
				r0 = comp(x14, x10);	o10 += r0;	o14 -= r0;
				r1 = comp(x15, x10);	o10 += r1;	o15 -= r1;
				r0 = comp(x16, x10);	o10 += r0;	o16 -= r0;
				r1 = comp(x17, x10);	o10 += r1;	o17 -= r1;
				r0 = comp(x18, x10);	o10 += r0;	o18 -= r0;
				r1 = comp(x19, x10);	o10 += r1;	o19 -= r1;
				r0 = comp(x20, x10);	o10 += r0;	o20 -= r0;
				r1 = comp(x21, x10);	o10 += r1;	o21 -= r1;
				r0 = comp(x22, x10);	o10 += r0;	o22 -= r0;
				r1 = comp(x23, x10);	o10 += r1;	o23 -= r1;
				r0 = comp(x24, x10);	o10 += r0;	o24 -= r0;
				r1 = comp(x25, x10);	o10 += r1;	o25 -= r1;
				r0 = comp(x26, x10);	o10 += r0;	o26 -= r0;
				r1 = comp(x27, x10);	o10 += r1;	o27 -= r1;
				r0 = comp(x28, x10);	o10 += r0;
				r1 = comp(x12, x11);	o11 += r1;	o12 -= r1;
				r0 = comp(x13, x11);	o11 += r0;	o13 -= r0;
				r1 = comp(x14, x11);	o11 += r1;	o14 -= r1;
				r0 = comp(x15, x11);	o11 += r0;	o15 -= r0;
				r1 = comp(x16, x11);	o11 += r1;	o16 -= r1;
				r0 = comp(x17, x11);	o11 += r0;	o17 -= r0;
				r1 = comp(x18, x11);	o11 += r1;	o18 -= r1;
				r0 = comp(x19, x11);	o11 += r0;	o19 -= r0;
				r1 = comp(x20, x11);	o11 += r1;	o20 -= r1;
				r0 = comp(x21, x11);	o11 += r0;	o21 -= r0;
				r1 = comp(x22, x11);	o11 += r1;	o22 -= r1;
				r0 = comp(x23, x11);	o11 += r0;	o23 -= r0;
				r1 = comp(x24, x11);	o11 += r1;	o24 -= r1;
				r0 = comp(x25, x11);	o11 += r0;	o25 -= r0;
				r1 = comp(x26, x11);	o11 += r1;	o26 -= r1;
				r0 = comp(x27, x11);	o11 += r0;	o27 -= r0;
				r1 = comp(x28, x11);	o11 += r1;
				r0 = comp(x13, x12);	o12 += r0;	o13 -= r0;
				r1 = comp(x14, x12);	o12 += r1;	o14 -= r1;
				r0 = comp(x15, x12);	o12 += r0;	o15 -= r0;
				r1 = comp(x16, x12);	o12 += r1;	o16 -= r1;
				r0 = comp(x17, x12);	o12 += r0;	o17 -= r0;
				r1 = comp(x18, x12);	o12 += r1;	o18 -= r1;
				r0 = comp(x19, x12);	o12 += r0;	o19 -= r0;
				r1 = comp(x20, x12);	o12 += r1;	o20 -= r1;
				r0 = comp(x21, x12);	o12 += r0;	o21 -= r0;
				r1 = comp(x22, x12);	o12 += r1;	o22 -= r1;
				r0 = comp(x23, x12);	o12 += r0;	o23 -= r0;
				r1 = comp(x24, x12);	o12 += r1;	o24 -= r1;
				r0 = comp(x25, x12);	o12 += r0;	o25 -= r0;
				r1 = comp(x26, x12);	o12 += r1;	o26 -= r1;
				r0 = comp(x27, x12);	o12 += r0;	o27 -= r0;
				r1 = comp(x28, x12);	o12 += r1;
				r0 = comp(x14, x13);	o13 += r0;	o14 -= r0;
				r1 = comp(x15, x13);	o13 += r1;	o15 -= r1;
				r0 = comp(x16, x13);	o13 += r0;	o16 -= r0;
				r1 = comp(x17, x13);	o13 += r1;	o17 -= r1;
				r0 = comp(x18, x13);	o13 += r0;	o18 -= r0;
				r1 = comp(x19, x13);	o13 += r1;	o19 -= r1;
				r0 = comp(x20, x13);	o13 += r0;	o20 -= r0;
				r1 = comp(x21, x13);	o13 += r1;	o21 -= r1;
				r0 = comp(x22, x13);	o13 += r0;	o22 -= r0;
				r1 = comp(x23, x13);	o13 += r1;	o23 -= r1;
				r0 = comp(x24, x13);	o13 += r0;	o24 -= r0;
				r1 = comp(x25, x13);	o13 += r1;	o25 -= r1;
				r0 = comp(x26, x13);	o13 += r0;	o26 -= r0;
				r1 = comp(x27, x13);	o13 += r1;	o27 -= r1;
				r0 = comp(x28, x13);	o13 += r0;
				r1 = comp(x15, x14);	o14 += r1;	o15 -= r1;
				r0 = comp(x16, x14);	o14 += r0;	o16 -= r0;
				r1 = comp(x17, x14);	o14 += r1;	o17 -= r1;
				r0 = comp(x18, x14);	o14 += r0;	o18 -= r0;
				r1 = comp(x19, x14);	o14 += r1;	o19 -= r1;
				r0 = comp(x20, x14);	o14 += r0;	o20 -= r0;
				r1 = comp(x21, x14);	o14 += r1;	o21 -= r1;
				r0 = comp(x22, x14);	o14 += r0;	o22 -= r0;
				r1 = comp(x23, x14);	o14 += r1;	o23 -= r1;
				r0 = comp(x24, x14);	o14 += r0;	o24 -= r0;
				r1 = comp(x25, x14);	o14 += r1;	o25 -= r1;
				r0 = comp(x26, x14);	o14 += r0;	o26 -= r0;
				r1 = comp(x27, x14);	o14 += r1;	o27 -= r1;
				r0 = comp(x28, x14);	o14 += r0;
				r1 = comp(x16, x15);	o15 += r1;	o16 -= r1;
				r0 = comp(x17, x15);	o15 += r0;	o17 -= r0;
				r1 = comp(x18, x15);	o15 += r1;	o18 -= r1;
				r0 = comp(x19, x15);	o15 += r0;	o19 -= r0;
				r1 = comp(x20, x15);	o15 += r1;	o20 -= r1;
				r0 = comp(x21, x15);	o15 += r0;	o21 -= r0;
				r1 = comp(x22, x15);	o15 += r1;	o22 -= r1;
				r0 = comp(x23, x15);	o15 += r0;	o23 -= r0;
				r1 = comp(x24, x15);	o15 += r1;	o24 -= r1;
				r0 = comp(x25, x15);	o15 += r0;	o25 -= r0;
				r1 = comp(x26, x15);	o15 += r1;	o26 -= r1;
				r0 = comp(x27, x15);	o15 += r0;	o27 -= r0;
				r1 = comp(x28, x15);	o15 += r1;
				r0 = comp(x17, x16);	o16 += r0;	o17 -= r0;
				r1 = comp(x18, x16);	o16 += r1;	o18 -= r1;
				r0 = comp(x19, x16);	o16 += r0;	o19 -= r0;
				r1 = comp(x20, x16);	o16 += r1;	o20 -= r1;
				r0 = comp(x21, x16);	o16 += r0;	o21 -= r0;
				r1 = comp(x22, x16);	o16 += r1;	o22 -= r1;
				r0 = comp(x23, x16);	o16 += r0;	o23 -= r0;
				r1 = comp(x24, x16);	o16 += r1;	o24 -= r1;
				r0 = comp(x25, x16);	o16 += r0;	o25 -= r0;
				r1 = comp(x26, x16);	o16 += r1;	o26 -= r1;
				r0 = comp(x27, x16);	o16 += r0;	o27 -= r0;
				r1 = comp(x28, x16);	o16 += r1;
				r0 = comp(x18, x17);	o17 += r0;	o18 -= r0;
				r1 = comp(x19, x17);	o17 += r1;	o19 -= r1;
				r0 = comp(x20, x17);	o17 += r0;	o20 -= r0;
				r1 = comp(x21, x17);	o17 += r1;	o21 -= r1;
				r0 = comp(x22, x17);	o17 += r0;	o22 -= r0;
				r1 = comp(x23, x17);	o17 += r1;	o23 -= r1;
				r0 = comp(x24, x17);	o17 += r0;	o24 -= r0;
				r1 = comp(x25, x17);	o17 += r1;	o25 -= r1;
				r0 = comp(x26, x17);	o17 += r0;	o26 -= r0;
				r1 = comp(x27, x17);	o17 += r1;	o27 -= r1;
				r0 = comp(x28, x17);	o17 += r0;
				r1 = comp(x19, x18);	o18 += r1;	o19 -= r1;
				r0 = comp(x20, x18);	o18 += r0;	o20 -= r0;
				r1 = comp(x21, x18);	o18 += r1;	o21 -= r1;
				r0 = comp(x22, x18);	o18 += r0;	o22 -= r0;
				r1 = comp(x23, x18);	o18 += r1;	o23 -= r1;
				r0 = comp(x24, x18);	o18 += r0;	o24 -= r0;
				r1 = comp(x25, x18);	o18 += r1;	o25 -= r1;
				r0 = comp(x26, x18);	o18 += r0;	o26 -= r0;
				r1 = comp(x27, x18);	o18 += r1;	o27 -= r1;
				r0 = comp(x28, x18);	o18 += r0;
				r1 = comp(x20, x19);	o19 += r1;	o20 -= r1;
				r0 = comp(x21, x19);	o19 += r0;	o21 -= r0;
				r1 = comp(x22, x19);	o19 += r1;	o22 -= r1;
				r0 = comp(x23, x19);	o19 += r0;	o23 -= r0;
				r1 = comp(x24, x19);	o19 += r1;	o24 -= r1;
				r0 = comp(x25, x19);	o19 += r0;	o25 -= r0;
				r1 = comp(x26, x19);	o19 += r1;	o26 -= r1;
				r0 = comp(x27, x19);	o19 += r0;	o27 -= r0;
				r1 = comp(x28, x19);	o19 += r1;
				r0 = comp(x21, x20);	o20 += r0;	o21 -= r0;
				r1 = comp(x22, x20);	o20 += r1;	o22 -= r1;
				r0 = comp(x23, x20);	o20 += r0;	o23 -= r0;
				r1 = comp(x24, x20);	o20 += r1;	o24 -= r1;
				r0 = comp(x25, x20);	o20 += r0;	o25 -= r0;
				r1 = comp(x26, x20);	o20 += r1;	o26 -= r1;
				r0 = comp(x27, x20);	o20 += r0;	o27 -= r0;
				r1 = comp(x28, x20);	o20 += r1;
				r0 = comp(x22, x21);	o21 += r0;	o22 -= r0;
				r1 = comp(x23, x21);	o21 += r1;	o23 -= r1;
				r0 = comp(x24, x21);	o21 += r0;	o24 -= r0;
				r1 = comp(x25, x21);	o21 += r1;	o25 -= r1;
				r0 = comp(x26, x21);	o21 += r0;	o26 -= r0;
				r1 = comp(x27, x21);	o21 += r1;	o27 -= r1;
				r0 = comp(x28, x21);	o21 += r0;
				r1 = comp(x23, x22);	o22 += r1;	o23 -= r1;
				r0 = comp(x24, x22);	o22 += r0;	o24 -= r0;
				r1 = comp(x25, x22);	o22 += r1;	o25 -= r1;
				r0 = comp(x26, x22);	o22 += r0;	o26 -= r0;
				r1 = comp(x27, x22);	o22 += r1;	o27 -= r1;
				r0 = comp(x28, x22);	o22 += r0;
				r1 = comp(x24, x23);	o23 += r1;	o24 -= r1;
				r0 = comp(x25, x23);	o23 += r0;	o25 -= r0;
				r1 = comp(x26, x23);	o23 += r1;	o26 -= r1;
				r0 = comp(x27, x23);	o23 += r0;	o27 -= r0;
				r1 = comp(x28, x23);	o23 += r1;
				r0 = comp(x25, x24);	o24 += r0;	o25 -= r0;
				r1 = comp(x26, x24);	o24 += r1;	o26 -= r1;
				r0 = comp(x27, x24);	o24 += r0;	o27 -= r0;
				r1 = comp(x28, x24);	o24 += r1;
				r0 = comp(x26, x25);	o25 += r0;	o26 -= r0;
				r1 = comp(x27, x25);	o25 += r1;	o27 -= r1;
				r0 = comp(x28, x25);	o25 += r0;
				r1 = comp(x27, x26);	o26 += r1;	o27 -= r1;
				r0 = comp(x28, x26);	o26 += r0;
				r1 = comp(x28, x27);	o27 += r1;
				o28 = 406 - o0 - o1 - o2 - o3 - o4 - o5 - o6 - o7 - o8 - o9 - o10 - o11 - o12 - o13 - o14 - o15 - o16 - o17 - o18 - o19 - o20 - o21 - o22 - o23 - o24 - o25 - o26 - o27;
				arr[o0] = x0;
				arr[o1] = x1;
				arr[o2] = x2;
				arr[o3] = x3;
				arr[o4] = x4;
				arr[o5] = x5;
				arr[o6] = x6;
				arr[o7] = x7;
				arr[o8] = x8;
				arr[o9] = x9;
				arr[o10] = x10;
				arr[o11] = x11;
				arr[o12] = x12;
				arr[o13] = x13;
				arr[o14] = x14;
				arr[o15] = x15;
				arr[o16] = x16;
				arr[o17] = x17;
				arr[o18] = x18;
				arr[o19] = x19;
				arr[o20] = x20;
				arr[o21] = x21;
				arr[o22] = x22;
				arr[o23] = x23;
				arr[o24] = x24;
				arr[o25] = x25;
				arr[o26] = x26;
				arr[o27] = x27;
				arr[o28] = x28;

				FinishingSorter{}(arr, 29);
			}

			void sort30(T* arr)
			{
				T x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29;
				x0 = arr[0];
				x1 = arr[1];
				x2 = arr[2];
				x3 = arr[3];
				x4 = arr[4];
				x5 = arr[5];
				x6 = arr[6];
				x7 = arr[7];
				x8 = arr[8];
				x9 = arr[9];
				x10 = arr[10];
				x11 = arr[11];
				x12 = arr[12];
				x13 = arr[13];
				x14 = arr[14];
				x15 = arr[15];
				x16 = arr[16];
				x17 = arr[17];
				x18 = arr[18];
				x19 = arr[19];
				x20 = arr[20];
				x21 = arr[21];
				x22 = arr[22];
				x23 = arr[23];
				x24 = arr[24];
				x25 = arr[25];
				x26 = arr[26];
				x27 = arr[27];
				x28 = arr[28];
				x29 = arr[29];
				int o0 = 0, o1 = 1, o2 = 2, o3 = 3, o4 = 4, o5 = 5, o6 = 6, o7 = 7, o8 = 8, o9 = 9, o10 = 10, o11 = 11, o12 = 12, o13 = 13, o14 = 14, o15 = 15, o16 = 16, o17 = 17, o18 = 18, o19 = 19, o20 = 20, o21 = 21, o22 = 22, o23 = 23, o24 = 24, o25 = 25, o26 = 26, o27 = 27, o28 = 28, o29 = 0;
				auto r0 = comp(x1, x0);	o0 += r0;	o1 -= r0;
				auto r1 = comp(x2, x0);	o0 += r1;	o2 -= r1;
				r0 = comp(x3, x0);	o0 += r0;	o3 -= r0;
				r1 = comp(x4, x0);	o0 += r1;	o4 -= r1;
				r0 = comp(x5, x0);	o0 += r0;	o5 -= r0;
				r1 = comp(x6, x0);	o0 += r1;	o6 -= r1;
				r0 = comp(x7, x0);	o0 += r0;	o7 -= r0;
				r1 = comp(x8, x0);	o0 += r1;	o8 -= r1;
				r0 = comp(x9, x0);	o0 += r0;	o9 -= r0;
				r1 = comp(x10, x0);	o0 += r1;	o10 -= r1;
				r0 = comp(x11, x0);	o0 += r0;	o11 -= r0;
				r1 = comp(x12, x0);	o0 += r1;	o12 -= r1;
				r0 = comp(x13, x0);	o0 += r0;	o13 -= r0;
				r1 = comp(x14, x0);	o0 += r1;	o14 -= r1;
				r0 = comp(x15, x0);	o0 += r0;	o15 -= r0;
				r1 = comp(x16, x0);	o0 += r1;	o16 -= r1;
				r0 = comp(x17, x0);	o0 += r0;	o17 -= r0;
				r1 = comp(x18, x0);	o0 += r1;	o18 -= r1;
				r0 = comp(x19, x0);	o0 += r0;	o19 -= r0;
				r1 = comp(x20, x0);	o0 += r1;	o20 -= r1;
				r0 = comp(x21, x0);	o0 += r0;	o21 -= r0;
				r1 = comp(x22, x0);	o0 += r1;	o22 -= r1;
				r0 = comp(x23, x0);	o0 += r0;	o23 -= r0;
				r1 = comp(x24, x0);	o0 += r1;	o24 -= r1;
				r0 = comp(x25, x0);	o0 += r0;	o25 -= r0;
				r1 = comp(x26, x0);	o0 += r1;	o26 -= r1;
				r0 = comp(x27, x0);	o0 += r0;	o27 -= r0;
				r1 = comp(x28, x0);	o0 += r1;	o28 -= r1;
				r0 = comp(x29, x0);	o0 += r0;
				r1 = comp(x2, x1);	o1 += r1;	o2 -= r1;
				r0 = comp(x3, x1);	o1 += r0;	o3 -= r0;
				r1 = comp(x4, x1);	o1 += r1;	o4 -= r1;
				r0 = comp(x5, x1);	o1 += r0;	o5 -= r0;
				r1 = comp(x6, x1);	o1 += r1;	o6 -= r1;
				r0 = comp(x7, x1);	o1 += r0;	o7 -= r0;
				r1 = comp(x8, x1);	o1 += r1;	o8 -= r1;
				r0 = comp(x9, x1);	o1 += r0;	o9 -= r0;
				r1 = comp(x10, x1);	o1 += r1;	o10 -= r1;
				r0 = comp(x11, x1);	o1 += r0;	o11 -= r0;
				r1 = comp(x12, x1);	o1 += r1;	o12 -= r1;
				r0 = comp(x13, x1);	o1 += r0;	o13 -= r0;
				r1 = comp(x14, x1);	o1 += r1;	o14 -= r1;
				r0 = comp(x15, x1);	o1 += r0;	o15 -= r0;
				r1 = comp(x16, x1);	o1 += r1;	o16 -= r1;
				r0 = comp(x17, x1);	o1 += r0;	o17 -= r0;
				r1 = comp(x18, x1);	o1 += r1;	o18 -= r1;
				r0 = comp(x19, x1);	o1 += r0;	o19 -= r0;
				r1 = comp(x20, x1);	o1 += r1;	o20 -= r1;
				r0 = comp(x21, x1);	o1 += r0;	o21 -= r0;
				r1 = comp(x22, x1);	o1 += r1;	o22 -= r1;
				r0 = comp(x23, x1);	o1 += r0;	o23 -= r0;
				r1 = comp(x24, x1);	o1 += r1;	o24 -= r1;
				r0 = comp(x25, x1);	o1 += r0;	o25 -= r0;
				r1 = comp(x26, x1);	o1 += r1;	o26 -= r1;
				r0 = comp(x27, x1);	o1 += r0;	o27 -= r0;
				r1 = comp(x28, x1);	o1 += r1;	o28 -= r1;
				r0 = comp(x29, x1);	o1 += r0;
				r1 = comp(x3, x2);	o2 += r1;	o3 -= r1;
				r0 = comp(x4, x2);	o2 += r0;	o4 -= r0;
				r1 = comp(x5, x2);	o2 += r1;	o5 -= r1;
				r0 = comp(x6, x2);	o2 += r0;	o6 -= r0;
				r1 = comp(x7, x2);	o2 += r1;	o7 -= r1;
				r0 = comp(x8, x2);	o2 += r0;	o8 -= r0;
				r1 = comp(x9, x2);	o2 += r1;	o9 -= r1;
				r0 = comp(x10, x2);	o2 += r0;	o10 -= r0;
				r1 = comp(x11, x2);	o2 += r1;	o11 -= r1;
				r0 = comp(x12, x2);	o2 += r0;	o12 -= r0;
				r1 = comp(x13, x2);	o2 += r1;	o13 -= r1;
				r0 = comp(x14, x2);	o2 += r0;	o14 -= r0;
				r1 = comp(x15, x2);	o2 += r1;	o15 -= r1;
				r0 = comp(x16, x2);	o2 += r0;	o16 -= r0;
				r1 = comp(x17, x2);	o2 += r1;	o17 -= r1;
				r0 = comp(x18, x2);	o2 += r0;	o18 -= r0;
				r1 = comp(x19, x2);	o2 += r1;	o19 -= r1;
				r0 = comp(x20, x2);	o2 += r0;	o20 -= r0;
				r1 = comp(x21, x2);	o2 += r1;	o21 -= r1;
				r0 = comp(x22, x2);	o2 += r0;	o22 -= r0;
				r1 = comp(x23, x2);	o2 += r1;	o23 -= r1;
				r0 = comp(x24, x2);	o2 += r0;	o24 -= r0;
				r1 = comp(x25, x2);	o2 += r1;	o25 -= r1;
				r0 = comp(x26, x2);	o2 += r0;	o26 -= r0;
				r1 = comp(x27, x2);	o2 += r1;	o27 -= r1;
				r0 = comp(x28, x2);	o2 += r0;	o28 -= r0;
				r1 = comp(x29, x2);	o2 += r1;
				r0 = comp(x4, x3);	o3 += r0;	o4 -= r0;
				r1 = comp(x5, x3);	o3 += r1;	o5 -= r1;
				r0 = comp(x6, x3);	o3 += r0;	o6 -= r0;
				r1 = comp(x7, x3);	o3 += r1;	o7 -= r1;
				r0 = comp(x8, x3);	o3 += r0;	o8 -= r0;
				r1 = comp(x9, x3);	o3 += r1;	o9 -= r1;
				r0 = comp(x10, x3);	o3 += r0;	o10 -= r0;
				r1 = comp(x11, x3);	o3 += r1;	o11 -= r1;
				r0 = comp(x12, x3);	o3 += r0;	o12 -= r0;
				r1 = comp(x13, x3);	o3 += r1;	o13 -= r1;
				r0 = comp(x14, x3);	o3 += r0;	o14 -= r0;
				r1 = comp(x15, x3);	o3 += r1;	o15 -= r1;
				r0 = comp(x16, x3);	o3 += r0;	o16 -= r0;
				r1 = comp(x17, x3);	o3 += r1;	o17 -= r1;
				r0 = comp(x18, x3);	o3 += r0;	o18 -= r0;
				r1 = comp(x19, x3);	o3 += r1;	o19 -= r1;
				r0 = comp(x20, x3);	o3 += r0;	o20 -= r0;
				r1 = comp(x21, x3);	o3 += r1;	o21 -= r1;
				r0 = comp(x22, x3);	o3 += r0;	o22 -= r0;
				r1 = comp(x23, x3);	o3 += r1;	o23 -= r1;
				r0 = comp(x24, x3);	o3 += r0;	o24 -= r0;
				r1 = comp(x25, x3);	o3 += r1;	o25 -= r1;
				r0 = comp(x26, x3);	o3 += r0;	o26 -= r0;
				r1 = comp(x27, x3);	o3 += r1;	o27 -= r1;
				r0 = comp(x28, x3);	o3 += r0;	o28 -= r0;
				r1 = comp(x29, x3);	o3 += r1;
				r0 = comp(x5, x4);	o4 += r0;	o5 -= r0;
				r1 = comp(x6, x4);	o4 += r1;	o6 -= r1;
				r0 = comp(x7, x4);	o4 += r0;	o7 -= r0;
				r1 = comp(x8, x4);	o4 += r1;	o8 -= r1;
				r0 = comp(x9, x4);	o4 += r0;	o9 -= r0;
				r1 = comp(x10, x4);	o4 += r1;	o10 -= r1;
				r0 = comp(x11, x4);	o4 += r0;	o11 -= r0;
				r1 = comp(x12, x4);	o4 += r1;	o12 -= r1;
				r0 = comp(x13, x4);	o4 += r0;	o13 -= r0;
				r1 = comp(x14, x4);	o4 += r1;	o14 -= r1;
				r0 = comp(x15, x4);	o4 += r0;	o15 -= r0;
				r1 = comp(x16, x4);	o4 += r1;	o16 -= r1;
				r0 = comp(x17, x4);	o4 += r0;	o17 -= r0;
				r1 = comp(x18, x4);	o4 += r1;	o18 -= r1;
				r0 = comp(x19, x4);	o4 += r0;	o19 -= r0;
				r1 = comp(x20, x4);	o4 += r1;	o20 -= r1;
				r0 = comp(x21, x4);	o4 += r0;	o21 -= r0;
				r1 = comp(x22, x4);	o4 += r1;	o22 -= r1;
				r0 = comp(x23, x4);	o4 += r0;	o23 -= r0;
				r1 = comp(x24, x4);	o4 += r1;	o24 -= r1;
				r0 = comp(x25, x4);	o4 += r0;	o25 -= r0;
				r1 = comp(x26, x4);	o4 += r1;	o26 -= r1;
				r0 = comp(x27, x4);	o4 += r0;	o27 -= r0;
				r1 = comp(x28, x4);	o4 += r1;	o28 -= r1;
				r0 = comp(x29, x4);	o4 += r0;
				r1 = comp(x6, x5);	o5 += r1;	o6 -= r1;
				r0 = comp(x7, x5);	o5 += r0;	o7 -= r0;
				r1 = comp(x8, x5);	o5 += r1;	o8 -= r1;
				r0 = comp(x9, x5);	o5 += r0;	o9 -= r0;
				r1 = comp(x10, x5);	o5 += r1;	o10 -= r1;
				r0 = comp(x11, x5);	o5 += r0;	o11 -= r0;
				r1 = comp(x12, x5);	o5 += r1;	o12 -= r1;
				r0 = comp(x13, x5);	o5 += r0;	o13 -= r0;
				r1 = comp(x14, x5);	o5 += r1;	o14 -= r1;
				r0 = comp(x15, x5);	o5 += r0;	o15 -= r0;
				r1 = comp(x16, x5);	o5 += r1;	o16 -= r1;
				r0 = comp(x17, x5);	o5 += r0;	o17 -= r0;
				r1 = comp(x18, x5);	o5 += r1;	o18 -= r1;
				r0 = comp(x19, x5);	o5 += r0;	o19 -= r0;
				r1 = comp(x20, x5);	o5 += r1;	o20 -= r1;
				r0 = comp(x21, x5);	o5 += r0;	o21 -= r0;
				r1 = comp(x22, x5);	o5 += r1;	o22 -= r1;
				r0 = comp(x23, x5);	o5 += r0;	o23 -= r0;
				r1 = comp(x24, x5);	o5 += r1;	o24 -= r1;
				r0 = comp(x25, x5);	o5 += r0;	o25 -= r0;
				r1 = comp(x26, x5);	o5 += r1;	o26 -= r1;
				r0 = comp(x27, x5);	o5 += r0;	o27 -= r0;
				r1 = comp(x28, x5);	o5 += r1;	o28 -= r1;
				r0 = comp(x29, x5);	o5 += r0;
				r1 = comp(x7, x6);	o6 += r1;	o7 -= r1;
				r0 = comp(x8, x6);	o6 += r0;	o8 -= r0;
				r1 = comp(x9, x6);	o6 += r1;	o9 -= r1;
				r0 = comp(x10, x6);	o6 += r0;	o10 -= r0;
				r1 = comp(x11, x6);	o6 += r1;	o11 -= r1;
				r0 = comp(x12, x6);	o6 += r0;	o12 -= r0;
				r1 = comp(x13, x6);	o6 += r1;	o13 -= r1;
				r0 = comp(x14, x6);	o6 += r0;	o14 -= r0;
				r1 = comp(x15, x6);	o6 += r1;	o15 -= r1;
				r0 = comp(x16, x6);	o6 += r0;	o16 -= r0;
				r1 = comp(x17, x6);	o6 += r1;	o17 -= r1;
				r0 = comp(x18, x6);	o6 += r0;	o18 -= r0;
				r1 = comp(x19, x6);	o6 += r1;	o19 -= r1;
				r0 = comp(x20, x6);	o6 += r0;	o20 -= r0;
				r1 = comp(x21, x6);	o6 += r1;	o21 -= r1;
				r0 = comp(x22, x6);	o6 += r0;	o22 -= r0;
				r1 = comp(x23, x6);	o6 += r1;	o23 -= r1;
				r0 = comp(x24, x6);	o6 += r0;	o24 -= r0;
				r1 = comp(x25, x6);	o6 += r1;	o25 -= r1;
				r0 = comp(x26, x6);	o6 += r0;	o26 -= r0;
				r1 = comp(x27, x6);	o6 += r1;	o27 -= r1;
				r0 = comp(x28, x6);	o6 += r0;	o28 -= r0;
				r1 = comp(x29, x6);	o6 += r1;
				r0 = comp(x8, x7);	o7 += r0;	o8 -= r0;
				r1 = comp(x9, x7);	o7 += r1;	o9 -= r1;
				r0 = comp(x10, x7);	o7 += r0;	o10 -= r0;
				r1 = comp(x11, x7);	o7 += r1;	o11 -= r1;
				r0 = comp(x12, x7);	o7 += r0;	o12 -= r0;
				r1 = comp(x13, x7);	o7 += r1;	o13 -= r1;
				r0 = comp(x14, x7);	o7 += r0;	o14 -= r0;
				r1 = comp(x15, x7);	o7 += r1;	o15 -= r1;
				r0 = comp(x16, x7);	o7 += r0;	o16 -= r0;
				r1 = comp(x17, x7);	o7 += r1;	o17 -= r1;
				r0 = comp(x18, x7);	o7 += r0;	o18 -= r0;
				r1 = comp(x19, x7);	o7 += r1;	o19 -= r1;
				r0 = comp(x20, x7);	o7 += r0;	o20 -= r0;
				r1 = comp(x21, x7);	o7 += r1;	o21 -= r1;
				r0 = comp(x22, x7);	o7 += r0;	o22 -= r0;
				r1 = comp(x23, x7);	o7 += r1;	o23 -= r1;
				r0 = comp(x24, x7);	o7 += r0;	o24 -= r0;
				r1 = comp(x25, x7);	o7 += r1;	o25 -= r1;
				r0 = comp(x26, x7);	o7 += r0;	o26 -= r0;
				r1 = comp(x27, x7);	o7 += r1;	o27 -= r1;
				r0 = comp(x28, x7);	o7 += r0;	o28 -= r0;
				r1 = comp(x29, x7);	o7 += r1;
				r0 = comp(x9, x8);	o8 += r0;	o9 -= r0;
				r1 = comp(x10, x8);	o8 += r1;	o10 -= r1;
				r0 = comp(x11, x8);	o8 += r0;	o11 -= r0;
				r1 = comp(x12, x8);	o8 += r1;	o12 -= r1;
				r0 = comp(x13, x8);	o8 += r0;	o13 -= r0;
				r1 = comp(x14, x8);	o8 += r1;	o14 -= r1;
				r0 = comp(x15, x8);	o8 += r0;	o15 -= r0;
				r1 = comp(x16, x8);	o8 += r1;	o16 -= r1;
				r0 = comp(x17, x8);	o8 += r0;	o17 -= r0;
				r1 = comp(x18, x8);	o8 += r1;	o18 -= r1;
				r0 = comp(x19, x8);	o8 += r0;	o19 -= r0;
				r1 = comp(x20, x8);	o8 += r1;	o20 -= r1;
				r0 = comp(x21, x8);	o8 += r0;	o21 -= r0;
				r1 = comp(x22, x8);	o8 += r1;	o22 -= r1;
				r0 = comp(x23, x8);	o8 += r0;	o23 -= r0;
				r1 = comp(x24, x8);	o8 += r1;	o24 -= r1;
				r0 = comp(x25, x8);	o8 += r0;	o25 -= r0;
				r1 = comp(x26, x8);	o8 += r1;	o26 -= r1;
				r0 = comp(x27, x8);	o8 += r0;	o27 -= r0;
				r1 = comp(x28, x8);	o8 += r1;	o28 -= r1;
				r0 = comp(x29, x8);	o8 += r0;
				r1 = comp(x10, x9);	o9 += r1;	o10 -= r1;
				r0 = comp(x11, x9);	o9 += r0;	o11 -= r0;
				r1 = comp(x12, x9);	o9 += r1;	o12 -= r1;
				r0 = comp(x13, x9);	o9 += r0;	o13 -= r0;
				r1 = comp(x14, x9);	o9 += r1;	o14 -= r1;
				r0 = comp(x15, x9);	o9 += r0;	o15 -= r0;
				r1 = comp(x16, x9);	o9 += r1;	o16 -= r1;
				r0 = comp(x17, x9);	o9 += r0;	o17 -= r0;
				r1 = comp(x18, x9);	o9 += r1;	o18 -= r1;
				r0 = comp(x19, x9);	o9 += r0;	o19 -= r0;
				r1 = comp(x20, x9);	o9 += r1;	o20 -= r1;
				r0 = comp(x21, x9);	o9 += r0;	o21 -= r0;
				r1 = comp(x22, x9);	o9 += r1;	o22 -= r1;
				r0 = comp(x23, x9);	o9 += r0;	o23 -= r0;
				r1 = comp(x24, x9);	o9 += r1;	o24 -= r1;
				r0 = comp(x25, x9);	o9 += r0;	o25 -= r0;
				r1 = comp(x26, x9);	o9 += r1;	o26 -= r1;
				r0 = comp(x27, x9);	o9 += r0;	o27 -= r0;
				r1 = comp(x28, x9);	o9 += r1;	o28 -= r1;
				r0 = comp(x29, x9);	o9 += r0;
				r1 = comp(x11, x10);	o10 += r1;	o11 -= r1;
				r0 = comp(x12, x10);	o10 += r0;	o12 -= r0;
				r1 = comp(x13, x10);	o10 += r1;	o13 -= r1;
				r0 = comp(x14, x10);	o10 += r0;	o14 -= r0;
				r1 = comp(x15, x10);	o10 += r1;	o15 -= r1;
				r0 = comp(x16, x10);	o10 += r0;	o16 -= r0;
				r1 = comp(x17, x10);	o10 += r1;	o17 -= r1;
				r0 = comp(x18, x10);	o10 += r0;	o18 -= r0;
				r1 = comp(x19, x10);	o10 += r1;	o19 -= r1;
				r0 = comp(x20, x10);	o10 += r0;	o20 -= r0;
				r1 = comp(x21, x10);	o10 += r1;	o21 -= r1;
				r0 = comp(x22, x10);	o10 += r0;	o22 -= r0;
				r1 = comp(x23, x10);	o10 += r1;	o23 -= r1;
				r0 = comp(x24, x10);	o10 += r0;	o24 -= r0;
				r1 = comp(x25, x10);	o10 += r1;	o25 -= r1;
				r0 = comp(x26, x10);	o10 += r0;	o26 -= r0;
				r1 = comp(x27, x10);	o10 += r1;	o27 -= r1;
				r0 = comp(x28, x10);	o10 += r0;	o28 -= r0;
				r1 = comp(x29, x10);	o10 += r1;
				r0 = comp(x12, x11);	o11 += r0;	o12 -= r0;
				r1 = comp(x13, x11);	o11 += r1;	o13 -= r1;
				r0 = comp(x14, x11);	o11 += r0;	o14 -= r0;
				r1 = comp(x15, x11);	o11 += r1;	o15 -= r1;
				r0 = comp(x16, x11);	o11 += r0;	o16 -= r0;
				r1 = comp(x17, x11);	o11 += r1;	o17 -= r1;
				r0 = comp(x18, x11);	o11 += r0;	o18 -= r0;
				r1 = comp(x19, x11);	o11 += r1;	o19 -= r1;
				r0 = comp(x20, x11);	o11 += r0;	o20 -= r0;
				r1 = comp(x21, x11);	o11 += r1;	o21 -= r1;
				r0 = comp(x22, x11);	o11 += r0;	o22 -= r0;
				r1 = comp(x23, x11);	o11 += r1;	o23 -= r1;
				r0 = comp(x24, x11);	o11 += r0;	o24 -= r0;
				r1 = comp(x25, x11);	o11 += r1;	o25 -= r1;
				r0 = comp(x26, x11);	o11 += r0;	o26 -= r0;
				r1 = comp(x27, x11);	o11 += r1;	o27 -= r1;
				r0 = comp(x28, x11);	o11 += r0;	o28 -= r0;
				r1 = comp(x29, x11);	o11 += r1;
				r0 = comp(x13, x12);	o12 += r0;	o13 -= r0;
				r1 = comp(x14, x12);	o12 += r1;	o14 -= r1;
				r0 = comp(x15, x12);	o12 += r0;	o15 -= r0;
				r1 = comp(x16, x12);	o12 += r1;	o16 -= r1;
				r0 = comp(x17, x12);	o12 += r0;	o17 -= r0;
				r1 = comp(x18, x12);	o12 += r1;	o18 -= r1;
				r0 = comp(x19, x12);	o12 += r0;	o19 -= r0;
				r1 = comp(x20, x12);	o12 += r1;	o20 -= r1;
				r0 = comp(x21, x12);	o12 += r0;	o21 -= r0;
				r1 = comp(x22, x12);	o12 += r1;	o22 -= r1;
				r0 = comp(x23, x12);	o12 += r0;	o23 -= r0;
				r1 = comp(x24, x12);	o12 += r1;	o24 -= r1;
				r0 = comp(x25, x12);	o12 += r0;	o25 -= r0;
				r1 = comp(x26, x12);	o12 += r1;	o26 -= r1;
				r0 = comp(x27, x12);	o12 += r0;	o27 -= r0;
				r1 = comp(x28, x12);	o12 += r1;	o28 -= r1;
				r0 = comp(x29, x12);	o12 += r0;
				r1 = comp(x14, x13);	o13 += r1;	o14 -= r1;
				r0 = comp(x15, x13);	o13 += r0;	o15 -= r0;
				r1 = comp(x16, x13);	o13 += r1;	o16 -= r1;
				r0 = comp(x17, x13);	o13 += r0;	o17 -= r0;
				r1 = comp(x18, x13);	o13 += r1;	o18 -= r1;
				r0 = comp(x19, x13);	o13 += r0;	o19 -= r0;
				r1 = comp(x20, x13);	o13 += r1;	o20 -= r1;
				r0 = comp(x21, x13);	o13 += r0;	o21 -= r0;
				r1 = comp(x22, x13);	o13 += r1;	o22 -= r1;
				r0 = comp(x23, x13);	o13 += r0;	o23 -= r0;
				r1 = comp(x24, x13);	o13 += r1;	o24 -= r1;
				r0 = comp(x25, x13);	o13 += r0;	o25 -= r0;
				r1 = comp(x26, x13);	o13 += r1;	o26 -= r1;
				r0 = comp(x27, x13);	o13 += r0;	o27 -= r0;
				r1 = comp(x28, x13);	o13 += r1;	o28 -= r1;
				r0 = comp(x29, x13);	o13 += r0;
				r1 = comp(x15, x14);	o14 += r1;	o15 -= r1;
				r0 = comp(x16, x14);	o14 += r0;	o16 -= r0;
				r1 = comp(x17, x14);	o14 += r1;	o17 -= r1;
				r0 = comp(x18, x14);	o14 += r0;	o18 -= r0;
				r1 = comp(x19, x14);	o14 += r1;	o19 -= r1;
				r0 = comp(x20, x14);	o14 += r0;	o20 -= r0;
				r1 = comp(x21, x14);	o14 += r1;	o21 -= r1;
				r0 = comp(x22, x14);	o14 += r0;	o22 -= r0;
				r1 = comp(x23, x14);	o14 += r1;	o23 -= r1;
				r0 = comp(x24, x14);	o14 += r0;	o24 -= r0;
				r1 = comp(x25, x14);	o14 += r1;	o25 -= r1;
				r0 = comp(x26, x14);	o14 += r0;	o26 -= r0;
				r1 = comp(x27, x14);	o14 += r1;	o27 -= r1;
				r0 = comp(x28, x14);	o14 += r0;	o28 -= r0;
				r1 = comp(x29, x14);	o14 += r1;
				r0 = comp(x16, x15);	o15 += r0;	o16 -= r0;
				r1 = comp(x17, x15);	o15 += r1;	o17 -= r1;
				r0 = comp(x18, x15);	o15 += r0;	o18 -= r0;
				r1 = comp(x19, x15);	o15 += r1;	o19 -= r1;
				r0 = comp(x20, x15);	o15 += r0;	o20 -= r0;
				r1 = comp(x21, x15);	o15 += r1;	o21 -= r1;
				r0 = comp(x22, x15);	o15 += r0;	o22 -= r0;
				r1 = comp(x23, x15);	o15 += r1;	o23 -= r1;
				r0 = comp(x24, x15);	o15 += r0;	o24 -= r0;
				r1 = comp(x25, x15);	o15 += r1;	o25 -= r1;
				r0 = comp(x26, x15);	o15 += r0;	o26 -= r0;
				r1 = comp(x27, x15);	o15 += r1;	o27 -= r1;
				r0 = comp(x28, x15);	o15 += r0;	o28 -= r0;
				r1 = comp(x29, x15);	o15 += r1;
				r0 = comp(x17, x16);	o16 += r0;	o17 -= r0;
				r1 = comp(x18, x16);	o16 += r1;	o18 -= r1;
				r0 = comp(x19, x16);	o16 += r0;	o19 -= r0;
				r1 = comp(x20, x16);	o16 += r1;	o20 -= r1;
				r0 = comp(x21, x16);	o16 += r0;	o21 -= r0;
				r1 = comp(x22, x16);	o16 += r1;	o22 -= r1;
				r0 = comp(x23, x16);	o16 += r0;	o23 -= r0;
				r1 = comp(x24, x16);	o16 += r1;	o24 -= r1;
				r0 = comp(x25, x16);	o16 += r0;	o25 -= r0;
				r1 = comp(x26, x16);	o16 += r1;	o26 -= r1;
				r0 = comp(x27, x16);	o16 += r0;	o27 -= r0;
				r1 = comp(x28, x16);	o16 += r1;	o28 -= r1;
				r0 = comp(x29, x16);	o16 += r0;
				r1 = comp(x18, x17);	o17 += r1;	o18 -= r1;
				r0 = comp(x19, x17);	o17 += r0;	o19 -= r0;
				r1 = comp(x20, x17);	o17 += r1;	o20 -= r1;
				r0 = comp(x21, x17);	o17 += r0;	o21 -= r0;
				r1 = comp(x22, x17);	o17 += r1;	o22 -= r1;
				r0 = comp(x23, x17);	o17 += r0;	o23 -= r0;
				r1 = comp(x24, x17);	o17 += r1;	o24 -= r1;
				r0 = comp(x25, x17);	o17 += r0;	o25 -= r0;
				r1 = comp(x26, x17);	o17 += r1;	o26 -= r1;
				r0 = comp(x27, x17);	o17 += r0;	o27 -= r0;
				r1 = comp(x28, x17);	o17 += r1;	o28 -= r1;
				r0 = comp(x29, x17);	o17 += r0;
				r1 = comp(x19, x18);	o18 += r1;	o19 -= r1;
				r0 = comp(x20, x18);	o18 += r0;	o20 -= r0;
				r1 = comp(x21, x18);	o18 += r1;	o21 -= r1;
				r0 = comp(x22, x18);	o18 += r0;	o22 -= r0;
				r1 = comp(x23, x18);	o18 += r1;	o23 -= r1;
				r0 = comp(x24, x18);	o18 += r0;	o24 -= r0;
				r1 = comp(x25, x18);	o18 += r1;	o25 -= r1;
				r0 = comp(x26, x18);	o18 += r0;	o26 -= r0;
				r1 = comp(x27, x18);	o18 += r1;	o27 -= r1;
				r0 = comp(x28, x18);	o18 += r0;	o28 -= r0;
				r1 = comp(x29, x18);	o18 += r1;
				r0 = comp(x20, x19);	o19 += r0;	o20 -= r0;
				r1 = comp(x21, x19);	o19 += r1;	o21 -= r1;
				r0 = comp(x22, x19);	o19 += r0;	o22 -= r0;
				r1 = comp(x23, x19);	o19 += r1;	o23 -= r1;
				r0 = comp(x24, x19);	o19 += r0;	o24 -= r0;
				r1 = comp(x25, x19);	o19 += r1;	o25 -= r1;
				r0 = comp(x26, x19);	o19 += r0;	o26 -= r0;
				r1 = comp(x27, x19);	o19 += r1;	o27 -= r1;
				r0 = comp(x28, x19);	o19 += r0;	o28 -= r0;
				r1 = comp(x29, x19);	o19 += r1;
				r0 = comp(x21, x20);	o20 += r0;	o21 -= r0;
				r1 = comp(x22, x20);	o20 += r1;	o22 -= r1;
				r0 = comp(x23, x20);	o20 += r0;	o23 -= r0;
				r1 = comp(x24, x20);	o20 += r1;	o24 -= r1;
				r0 = comp(x25, x20);	o20 += r0;	o25 -= r0;
				r1 = comp(x26, x20);	o20 += r1;	o26 -= r1;
				r0 = comp(x27, x20);	o20 += r0;	o27 -= r0;
				r1 = comp(x28, x20);	o20 += r1;	o28 -= r1;
				r0 = comp(x29, x20);	o20 += r0;
				r1 = comp(x22, x21);	o21 += r1;	o22 -= r1;
				r0 = comp(x23, x21);	o21 += r0;	o23 -= r0;
				r1 = comp(x24, x21);	o21 += r1;	o24 -= r1;
				r0 = comp(x25, x21);	o21 += r0;	o25 -= r0;
				r1 = comp(x26, x21);	o21 += r1;	o26 -= r1;
				r0 = comp(x27, x21);	o21 += r0;	o27 -= r0;
				r1 = comp(x28, x21);	o21 += r1;	o28 -= r1;
				r0 = comp(x29, x21);	o21 += r0;
				r1 = comp(x23, x22);	o22 += r1;	o23 -= r1;
				r0 = comp(x24, x22);	o22 += r0;	o24 -= r0;
				r1 = comp(x25, x22);	o22 += r1;	o25 -= r1;
				r0 = comp(x26, x22);	o22 += r0;	o26 -= r0;
				r1 = comp(x27, x22);	o22 += r1;	o27 -= r1;
				r0 = comp(x28, x22);	o22 += r0;	o28 -= r0;
				r1 = comp(x29, x22);	o22 += r1;
				r0 = comp(x24, x23);	o23 += r0;	o24 -= r0;
				r1 = comp(x25, x23);	o23 += r1;	o25 -= r1;
				r0 = comp(x26, x23);	o23 += r0;	o26 -= r0;
				r1 = comp(x27, x23);	o23 += r1;	o27 -= r1;
				r0 = comp(x28, x23);	o23 += r0;	o28 -= r0;
				r1 = comp(x29, x23);	o23 += r1;
				r0 = comp(x25, x24);	o24 += r0;	o25 -= r0;
				r1 = comp(x26, x24);	o24 += r1;	o26 -= r1;
				r0 = comp(x27, x24);	o24 += r0;	o27 -= r0;
				r1 = comp(x28, x24);	o24 += r1;	o28 -= r1;
				r0 = comp(x29, x24);	o24 += r0;
				r1 = comp(x26, x25);	o25 += r1;	o26 -= r1;
				r0 = comp(x27, x25);	o25 += r0;	o27 -= r0;
				r1 = comp(x28, x25);	o25 += r1;	o28 -= r1;
				r0 = comp(x29, x25);	o25 += r0;
				r1 = comp(x27, x26);	o26 += r1;	o27 -= r1;
				r0 = comp(x28, x26);	o26 += r0;	o28 -= r0;
				r1 = comp(x29, x26);	o26 += r1;
				r0 = comp(x28, x27);	o27 += r0;	o28 -= r0;
				r1 = comp(x29, x27);	o27 += r1;
				r0 = comp(x29, x28);	o28 += r0;
				o29 = 435 - o0 - o1 - o2 - o3 - o4 - o5 - o6 - o7 - o8 - o9 - o10 - o11 - o12 - o13 - o14 - o15 - o16 - o17 - o18 - o19 - o20 - o21 - o22 - o23 - o24 - o25 - o26 - o27 - o28;
				arr[o0] = x0;
				arr[o1] = x1;
				arr[o2] = x2;
				arr[o3] = x3;
				arr[o4] = x4;
				arr[o5] = x5;
				arr[o6] = x6;
				arr[o7] = x7;
				arr[o8] = x8;
				arr[o9] = x9;
				arr[o10] = x10;
				arr[o11] = x11;
				arr[o12] = x12;
				arr[o13] = x13;
				arr[o14] = x14;
				arr[o15] = x15;
				arr[o16] = x16;
				arr[o17] = x17;
				arr[o18] = x18;
				arr[o19] = x19;
				arr[o20] = x20;
				arr[o21] = x21;
				arr[o22] = x22;
				arr[o23] = x23;
				arr[o24] = x24;
				arr[o25] = x25;
				arr[o26] = x26;
				arr[o27] = x27;
				arr[o28] = x28;
				arr[o29] = x29;

				FinishingSorter{}(arr, 30);
			}


			void sort31(T* arr)
			{
				T x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30;
				x0 = arr[0];
				x1 = arr[1];
				x2 = arr[2];
				x3 = arr[3];
				x4 = arr[4];
				x5 = arr[5];
				x6 = arr[6];
				x7 = arr[7];
				x8 = arr[8];
				x9 = arr[9];
				x10 = arr[10];
				x11 = arr[11];
				x12 = arr[12];
				x13 = arr[13];
				x14 = arr[14];
				x15 = arr[15];
				x16 = arr[16];
				x17 = arr[17];
				x18 = arr[18];
				x19 = arr[19];
				x20 = arr[20];
				x21 = arr[21];
				x22 = arr[22];
				x23 = arr[23];
				x24 = arr[24];
				x25 = arr[25];
				x26 = arr[26];
				x27 = arr[27];
				x28 = arr[28];
				x29 = arr[29];
				x30 = arr[30];
				int o0 = 0, o1 = 1, o2 = 2, o3 = 3, o4 = 4, o5 = 5, o6 = 6, o7 = 7, o8 = 8, o9 = 9, o10 = 10, o11 = 11, o12 = 12, o13 = 13, o14 = 14, o15 = 15, o16 = 16, o17 = 17, o18 = 18, o19 = 19, o20 = 20, o21 = 21, o22 = 22, o23 = 23, o24 = 24, o25 = 25, o26 = 26, o27 = 27, o28 = 28, o29 = 29, o30 = 0;
				auto r0 = comp(x1, x0);	o0 += r0;	o1 -= r0;
				auto r1 = comp(x2, x0);	o0 += r1;	o2 -= r1;
				r0 = comp(x3, x0);	o0 += r0;	o3 -= r0;
				r1 = comp(x4, x0);	o0 += r1;	o4 -= r1;
				r0 = comp(x5, x0);	o0 += r0;	o5 -= r0;
				r1 = comp(x6, x0);	o0 += r1;	o6 -= r1;
				r0 = comp(x7, x0);	o0 += r0;	o7 -= r0;
				r1 = comp(x8, x0);	o0 += r1;	o8 -= r1;
				r0 = comp(x9, x0);	o0 += r0;	o9 -= r0;
				r1 = comp(x10, x0);	o0 += r1;	o10 -= r1;
				r0 = comp(x11, x0);	o0 += r0;	o11 -= r0;
				r1 = comp(x12, x0);	o0 += r1;	o12 -= r1;
				r0 = comp(x13, x0);	o0 += r0;	o13 -= r0;
				r1 = comp(x14, x0);	o0 += r1;	o14 -= r1;
				r0 = comp(x15, x0);	o0 += r0;	o15 -= r0;
				r1 = comp(x16, x0);	o0 += r1;	o16 -= r1;
				r0 = comp(x17, x0);	o0 += r0;	o17 -= r0;
				r1 = comp(x18, x0);	o0 += r1;	o18 -= r1;
				r0 = comp(x19, x0);	o0 += r0;	o19 -= r0;
				r1 = comp(x20, x0);	o0 += r1;	o20 -= r1;
				r0 = comp(x21, x0);	o0 += r0;	o21 -= r0;
				r1 = comp(x22, x0);	o0 += r1;	o22 -= r1;
				r0 = comp(x23, x0);	o0 += r0;	o23 -= r0;
				r1 = comp(x24, x0);	o0 += r1;	o24 -= r1;
				r0 = comp(x25, x0);	o0 += r0;	o25 -= r0;
				r1 = comp(x26, x0);	o0 += r1;	o26 -= r1;
				r0 = comp(x27, x0);	o0 += r0;	o27 -= r0;
				r1 = comp(x28, x0);	o0 += r1;	o28 -= r1;
				r0 = comp(x29, x0);	o0 += r0;	o29 -= r0;
				r1 = comp(x30, x0);	o0 += r1;
				r0 = comp(x2, x1);	o1 += r0;	o2 -= r0;
				r1 = comp(x3, x1);	o1 += r1;	o3 -= r1;
				r0 = comp(x4, x1);	o1 += r0;	o4 -= r0;
				r1 = comp(x5, x1);	o1 += r1;	o5 -= r1;
				r0 = comp(x6, x1);	o1 += r0;	o6 -= r0;
				r1 = comp(x7, x1);	o1 += r1;	o7 -= r1;
				r0 = comp(x8, x1);	o1 += r0;	o8 -= r0;
				r1 = comp(x9, x1);	o1 += r1;	o9 -= r1;
				r0 = comp(x10, x1);	o1 += r0;	o10 -= r0;
				r1 = comp(x11, x1);	o1 += r1;	o11 -= r1;
				r0 = comp(x12, x1);	o1 += r0;	o12 -= r0;
				r1 = comp(x13, x1);	o1 += r1;	o13 -= r1;
				r0 = comp(x14, x1);	o1 += r0;	o14 -= r0;
				r1 = comp(x15, x1);	o1 += r1;	o15 -= r1;
				r0 = comp(x16, x1);	o1 += r0;	o16 -= r0;
				r1 = comp(x17, x1);	o1 += r1;	o17 -= r1;
				r0 = comp(x18, x1);	o1 += r0;	o18 -= r0;
				r1 = comp(x19, x1);	o1 += r1;	o19 -= r1;
				r0 = comp(x20, x1);	o1 += r0;	o20 -= r0;
				r1 = comp(x21, x1);	o1 += r1;	o21 -= r1;
				r0 = comp(x22, x1);	o1 += r0;	o22 -= r0;
				r1 = comp(x23, x1);	o1 += r1;	o23 -= r1;
				r0 = comp(x24, x1);	o1 += r0;	o24 -= r0;
				r1 = comp(x25, x1);	o1 += r1;	o25 -= r1;
				r0 = comp(x26, x1);	o1 += r0;	o26 -= r0;
				r1 = comp(x27, x1);	o1 += r1;	o27 -= r1;
				r0 = comp(x28, x1);	o1 += r0;	o28 -= r0;
				r1 = comp(x29, x1);	o1 += r1;	o29 -= r1;
				r0 = comp(x30, x1);	o1 += r0;
				r1 = comp(x3, x2);	o2 += r1;	o3 -= r1;
				r0 = comp(x4, x2);	o2 += r0;	o4 -= r0;
				r1 = comp(x5, x2);	o2 += r1;	o5 -= r1;
				r0 = comp(x6, x2);	o2 += r0;	o6 -= r0;
				r1 = comp(x7, x2);	o2 += r1;	o7 -= r1;
				r0 = comp(x8, x2);	o2 += r0;	o8 -= r0;
				r1 = comp(x9, x2);	o2 += r1;	o9 -= r1;
				r0 = comp(x10, x2);	o2 += r0;	o10 -= r0;
				r1 = comp(x11, x2);	o2 += r1;	o11 -= r1;
				r0 = comp(x12, x2);	o2 += r0;	o12 -= r0;
				r1 = comp(x13, x2);	o2 += r1;	o13 -= r1;
				r0 = comp(x14, x2);	o2 += r0;	o14 -= r0;
				r1 = comp(x15, x2);	o2 += r1;	o15 -= r1;
				r0 = comp(x16, x2);	o2 += r0;	o16 -= r0;
				r1 = comp(x17, x2);	o2 += r1;	o17 -= r1;
				r0 = comp(x18, x2);	o2 += r0;	o18 -= r0;
				r1 = comp(x19, x2);	o2 += r1;	o19 -= r1;
				r0 = comp(x20, x2);	o2 += r0;	o20 -= r0;
				r1 = comp(x21, x2);	o2 += r1;	o21 -= r1;
				r0 = comp(x22, x2);	o2 += r0;	o22 -= r0;
				r1 = comp(x23, x2);	o2 += r1;	o23 -= r1;
				r0 = comp(x24, x2);	o2 += r0;	o24 -= r0;
				r1 = comp(x25, x2);	o2 += r1;	o25 -= r1;
				r0 = comp(x26, x2);	o2 += r0;	o26 -= r0;
				r1 = comp(x27, x2);	o2 += r1;	o27 -= r1;
				r0 = comp(x28, x2);	o2 += r0;	o28 -= r0;
				r1 = comp(x29, x2);	o2 += r1;	o29 -= r1;
				r0 = comp(x30, x2);	o2 += r0;
				r1 = comp(x4, x3);	o3 += r1;	o4 -= r1;
				r0 = comp(x5, x3);	o3 += r0;	o5 -= r0;
				r1 = comp(x6, x3);	o3 += r1;	o6 -= r1;
				r0 = comp(x7, x3);	o3 += r0;	o7 -= r0;
				r1 = comp(x8, x3);	o3 += r1;	o8 -= r1;
				r0 = comp(x9, x3);	o3 += r0;	o9 -= r0;
				r1 = comp(x10, x3);	o3 += r1;	o10 -= r1;
				r0 = comp(x11, x3);	o3 += r0;	o11 -= r0;
				r1 = comp(x12, x3);	o3 += r1;	o12 -= r1;
				r0 = comp(x13, x3);	o3 += r0;	o13 -= r0;
				r1 = comp(x14, x3);	o3 += r1;	o14 -= r1;
				r0 = comp(x15, x3);	o3 += r0;	o15 -= r0;
				r1 = comp(x16, x3);	o3 += r1;	o16 -= r1;
				r0 = comp(x17, x3);	o3 += r0;	o17 -= r0;
				r1 = comp(x18, x3);	o3 += r1;	o18 -= r1;
				r0 = comp(x19, x3);	o3 += r0;	o19 -= r0;
				r1 = comp(x20, x3);	o3 += r1;	o20 -= r1;
				r0 = comp(x21, x3);	o3 += r0;	o21 -= r0;
				r1 = comp(x22, x3);	o3 += r1;	o22 -= r1;
				r0 = comp(x23, x3);	o3 += r0;	o23 -= r0;
				r1 = comp(x24, x3);	o3 += r1;	o24 -= r1;
				r0 = comp(x25, x3);	o3 += r0;	o25 -= r0;
				r1 = comp(x26, x3);	o3 += r1;	o26 -= r1;
				r0 = comp(x27, x3);	o3 += r0;	o27 -= r0;
				r1 = comp(x28, x3);	o3 += r1;	o28 -= r1;
				r0 = comp(x29, x3);	o3 += r0;	o29 -= r0;
				r1 = comp(x30, x3);	o3 += r1;
				r0 = comp(x5, x4);	o4 += r0;	o5 -= r0;
				r1 = comp(x6, x4);	o4 += r1;	o6 -= r1;
				r0 = comp(x7, x4);	o4 += r0;	o7 -= r0;
				r1 = comp(x8, x4);	o4 += r1;	o8 -= r1;
				r0 = comp(x9, x4);	o4 += r0;	o9 -= r0;
				r1 = comp(x10, x4);	o4 += r1;	o10 -= r1;
				r0 = comp(x11, x4);	o4 += r0;	o11 -= r0;
				r1 = comp(x12, x4);	o4 += r1;	o12 -= r1;
				r0 = comp(x13, x4);	o4 += r0;	o13 -= r0;
				r1 = comp(x14, x4);	o4 += r1;	o14 -= r1;
				r0 = comp(x15, x4);	o4 += r0;	o15 -= r0;
				r1 = comp(x16, x4);	o4 += r1;	o16 -= r1;
				r0 = comp(x17, x4);	o4 += r0;	o17 -= r0;
				r1 = comp(x18, x4);	o4 += r1;	o18 -= r1;
				r0 = comp(x19, x4);	o4 += r0;	o19 -= r0;
				r1 = comp(x20, x4);	o4 += r1;	o20 -= r1;
				r0 = comp(x21, x4);	o4 += r0;	o21 -= r0;
				r1 = comp(x22, x4);	o4 += r1;	o22 -= r1;
				r0 = comp(x23, x4);	o4 += r0;	o23 -= r0;
				r1 = comp(x24, x4);	o4 += r1;	o24 -= r1;
				r0 = comp(x25, x4);	o4 += r0;	o25 -= r0;
				r1 = comp(x26, x4);	o4 += r1;	o26 -= r1;
				r0 = comp(x27, x4);	o4 += r0;	o27 -= r0;
				r1 = comp(x28, x4);	o4 += r1;	o28 -= r1;
				r0 = comp(x29, x4);	o4 += r0;	o29 -= r0;
				r1 = comp(x30, x4);	o4 += r1;
				r0 = comp(x6, x5);	o5 += r0;	o6 -= r0;
				r1 = comp(x7, x5);	o5 += r1;	o7 -= r1;
				r0 = comp(x8, x5);	o5 += r0;	o8 -= r0;
				r1 = comp(x9, x5);	o5 += r1;	o9 -= r1;
				r0 = comp(x10, x5);	o5 += r0;	o10 -= r0;
				r1 = comp(x11, x5);	o5 += r1;	o11 -= r1;
				r0 = comp(x12, x5);	o5 += r0;	o12 -= r0;
				r1 = comp(x13, x5);	o5 += r1;	o13 -= r1;
				r0 = comp(x14, x5);	o5 += r0;	o14 -= r0;
				r1 = comp(x15, x5);	o5 += r1;	o15 -= r1;
				r0 = comp(x16, x5);	o5 += r0;	o16 -= r0;
				r1 = comp(x17, x5);	o5 += r1;	o17 -= r1;
				r0 = comp(x18, x5);	o5 += r0;	o18 -= r0;
				r1 = comp(x19, x5);	o5 += r1;	o19 -= r1;
				r0 = comp(x20, x5);	o5 += r0;	o20 -= r0;
				r1 = comp(x21, x5);	o5 += r1;	o21 -= r1;
				r0 = comp(x22, x5);	o5 += r0;	o22 -= r0;
				r1 = comp(x23, x5);	o5 += r1;	o23 -= r1;
				r0 = comp(x24, x5);	o5 += r0;	o24 -= r0;
				r1 = comp(x25, x5);	o5 += r1;	o25 -= r1;
				r0 = comp(x26, x5);	o5 += r0;	o26 -= r0;
				r1 = comp(x27, x5);	o5 += r1;	o27 -= r1;
				r0 = comp(x28, x5);	o5 += r0;	o28 -= r0;
				r1 = comp(x29, x5);	o5 += r1;	o29 -= r1;
				r0 = comp(x30, x5);	o5 += r0;
				r1 = comp(x7, x6);	o6 += r1;	o7 -= r1;
				r0 = comp(x8, x6);	o6 += r0;	o8 -= r0;
				r1 = comp(x9, x6);	o6 += r1;	o9 -= r1;
				r0 = comp(x10, x6);	o6 += r0;	o10 -= r0;
				r1 = comp(x11, x6);	o6 += r1;	o11 -= r1;
				r0 = comp(x12, x6);	o6 += r0;	o12 -= r0;
				r1 = comp(x13, x6);	o6 += r1;	o13 -= r1;
				r0 = comp(x14, x6);	o6 += r0;	o14 -= r0;
				r1 = comp(x15, x6);	o6 += r1;	o15 -= r1;
				r0 = comp(x16, x6);	o6 += r0;	o16 -= r0;
				r1 = comp(x17, x6);	o6 += r1;	o17 -= r1;
				r0 = comp(x18, x6);	o6 += r0;	o18 -= r0;
				r1 = comp(x19, x6);	o6 += r1;	o19 -= r1;
				r0 = comp(x20, x6);	o6 += r0;	o20 -= r0;
				r1 = comp(x21, x6);	o6 += r1;	o21 -= r1;
				r0 = comp(x22, x6);	o6 += r0;	o22 -= r0;
				r1 = comp(x23, x6);	o6 += r1;	o23 -= r1;
				r0 = comp(x24, x6);	o6 += r0;	o24 -= r0;
				r1 = comp(x25, x6);	o6 += r1;	o25 -= r1;
				r0 = comp(x26, x6);	o6 += r0;	o26 -= r0;
				r1 = comp(x27, x6);	o6 += r1;	o27 -= r1;
				r0 = comp(x28, x6);	o6 += r0;	o28 -= r0;
				r1 = comp(x29, x6);	o6 += r1;	o29 -= r1;
				r0 = comp(x30, x6);	o6 += r0;
				r1 = comp(x8, x7);	o7 += r1;	o8 -= r1;
				r0 = comp(x9, x7);	o7 += r0;	o9 -= r0;
				r1 = comp(x10, x7);	o7 += r1;	o10 -= r1;
				r0 = comp(x11, x7);	o7 += r0;	o11 -= r0;
				r1 = comp(x12, x7);	o7 += r1;	o12 -= r1;
				r0 = comp(x13, x7);	o7 += r0;	o13 -= r0;
				r1 = comp(x14, x7);	o7 += r1;	o14 -= r1;
				r0 = comp(x15, x7);	o7 += r0;	o15 -= r0;
				r1 = comp(x16, x7);	o7 += r1;	o16 -= r1;
				r0 = comp(x17, x7);	o7 += r0;	o17 -= r0;
				r1 = comp(x18, x7);	o7 += r1;	o18 -= r1;
				r0 = comp(x19, x7);	o7 += r0;	o19 -= r0;
				r1 = comp(x20, x7);	o7 += r1;	o20 -= r1;
				r0 = comp(x21, x7);	o7 += r0;	o21 -= r0;
				r1 = comp(x22, x7);	o7 += r1;	o22 -= r1;
				r0 = comp(x23, x7);	o7 += r0;	o23 -= r0;
				r1 = comp(x24, x7);	o7 += r1;	o24 -= r1;
				r0 = comp(x25, x7);	o7 += r0;	o25 -= r0;
				r1 = comp(x26, x7);	o7 += r1;	o26 -= r1;
				r0 = comp(x27, x7);	o7 += r0;	o27 -= r0;
				r1 = comp(x28, x7);	o7 += r1;	o28 -= r1;
				r0 = comp(x29, x7);	o7 += r0;	o29 -= r0;
				r1 = comp(x30, x7);	o7 += r1;
				r0 = comp(x9, x8);	o8 += r0;	o9 -= r0;
				r1 = comp(x10, x8);	o8 += r1;	o10 -= r1;
				r0 = comp(x11, x8);	o8 += r0;	o11 -= r0;
				r1 = comp(x12, x8);	o8 += r1;	o12 -= r1;
				r0 = comp(x13, x8);	o8 += r0;	o13 -= r0;
				r1 = comp(x14, x8);	o8 += r1;	o14 -= r1;
				r0 = comp(x15, x8);	o8 += r0;	o15 -= r0;
				r1 = comp(x16, x8);	o8 += r1;	o16 -= r1;
				r0 = comp(x17, x8);	o8 += r0;	o17 -= r0;
				r1 = comp(x18, x8);	o8 += r1;	o18 -= r1;
				r0 = comp(x19, x8);	o8 += r0;	o19 -= r0;
				r1 = comp(x20, x8);	o8 += r1;	o20 -= r1;
				r0 = comp(x21, x8);	o8 += r0;	o21 -= r0;
				r1 = comp(x22, x8);	o8 += r1;	o22 -= r1;
				r0 = comp(x23, x8);	o8 += r0;	o23 -= r0;
				r1 = comp(x24, x8);	o8 += r1;	o24 -= r1;
				r0 = comp(x25, x8);	o8 += r0;	o25 -= r0;
				r1 = comp(x26, x8);	o8 += r1;	o26 -= r1;
				r0 = comp(x27, x8);	o8 += r0;	o27 -= r0;
				r1 = comp(x28, x8);	o8 += r1;	o28 -= r1;
				r0 = comp(x29, x8);	o8 += r0;	o29 -= r0;
				r1 = comp(x30, x8);	o8 += r1;
				r0 = comp(x10, x9);	o9 += r0;	o10 -= r0;
				r1 = comp(x11, x9);	o9 += r1;	o11 -= r1;
				r0 = comp(x12, x9);	o9 += r0;	o12 -= r0;
				r1 = comp(x13, x9);	o9 += r1;	o13 -= r1;
				r0 = comp(x14, x9);	o9 += r0;	o14 -= r0;
				r1 = comp(x15, x9);	o9 += r1;	o15 -= r1;
				r0 = comp(x16, x9);	o9 += r0;	o16 -= r0;
				r1 = comp(x17, x9);	o9 += r1;	o17 -= r1;
				r0 = comp(x18, x9);	o9 += r0;	o18 -= r0;
				r1 = comp(x19, x9);	o9 += r1;	o19 -= r1;
				r0 = comp(x20, x9);	o9 += r0;	o20 -= r0;
				r1 = comp(x21, x9);	o9 += r1;	o21 -= r1;
				r0 = comp(x22, x9);	o9 += r0;	o22 -= r0;
				r1 = comp(x23, x9);	o9 += r1;	o23 -= r1;
				r0 = comp(x24, x9);	o9 += r0;	o24 -= r0;
				r1 = comp(x25, x9);	o9 += r1;	o25 -= r1;
				r0 = comp(x26, x9);	o9 += r0;	o26 -= r0;
				r1 = comp(x27, x9);	o9 += r1;	o27 -= r1;
				r0 = comp(x28, x9);	o9 += r0;	o28 -= r0;
				r1 = comp(x29, x9);	o9 += r1;	o29 -= r1;
				r0 = comp(x30, x9);	o9 += r0;
				r1 = comp(x11, x10);	o10 += r1;	o11 -= r1;
				r0 = comp(x12, x10);	o10 += r0;	o12 -= r0;
				r1 = comp(x13, x10);	o10 += r1;	o13 -= r1;
				r0 = comp(x14, x10);	o10 += r0;	o14 -= r0;
				r1 = comp(x15, x10);	o10 += r1;	o15 -= r1;
				r0 = comp(x16, x10);	o10 += r0;	o16 -= r0;
				r1 = comp(x17, x10);	o10 += r1;	o17 -= r1;
				r0 = comp(x18, x10);	o10 += r0;	o18 -= r0;
				r1 = comp(x19, x10);	o10 += r1;	o19 -= r1;
				r0 = comp(x20, x10);	o10 += r0;	o20 -= r0;
				r1 = comp(x21, x10);	o10 += r1;	o21 -= r1;
				r0 = comp(x22, x10);	o10 += r0;	o22 -= r0;
				r1 = comp(x23, x10);	o10 += r1;	o23 -= r1;
				r0 = comp(x24, x10);	o10 += r0;	o24 -= r0;
				r1 = comp(x25, x10);	o10 += r1;	o25 -= r1;
				r0 = comp(x26, x10);	o10 += r0;	o26 -= r0;
				r1 = comp(x27, x10);	o10 += r1;	o27 -= r1;
				r0 = comp(x28, x10);	o10 += r0;	o28 -= r0;
				r1 = comp(x29, x10);	o10 += r1;	o29 -= r1;
				r0 = comp(x30, x10);	o10 += r0;
				r1 = comp(x12, x11);	o11 += r1;	o12 -= r1;
				r0 = comp(x13, x11);	o11 += r0;	o13 -= r0;
				r1 = comp(x14, x11);	o11 += r1;	o14 -= r1;
				r0 = comp(x15, x11);	o11 += r0;	o15 -= r0;
				r1 = comp(x16, x11);	o11 += r1;	o16 -= r1;
				r0 = comp(x17, x11);	o11 += r0;	o17 -= r0;
				r1 = comp(x18, x11);	o11 += r1;	o18 -= r1;
				r0 = comp(x19, x11);	o11 += r0;	o19 -= r0;
				r1 = comp(x20, x11);	o11 += r1;	o20 -= r1;
				r0 = comp(x21, x11);	o11 += r0;	o21 -= r0;
				r1 = comp(x22, x11);	o11 += r1;	o22 -= r1;
				r0 = comp(x23, x11);	o11 += r0;	o23 -= r0;
				r1 = comp(x24, x11);	o11 += r1;	o24 -= r1;
				r0 = comp(x25, x11);	o11 += r0;	o25 -= r0;
				r1 = comp(x26, x11);	o11 += r1;	o26 -= r1;
				r0 = comp(x27, x11);	o11 += r0;	o27 -= r0;
				r1 = comp(x28, x11);	o11 += r1;	o28 -= r1;
				r0 = comp(x29, x11);	o11 += r0;	o29 -= r0;
				r1 = comp(x30, x11);	o11 += r1;
				r0 = comp(x13, x12);	o12 += r0;	o13 -= r0;
				r1 = comp(x14, x12);	o12 += r1;	o14 -= r1;
				r0 = comp(x15, x12);	o12 += r0;	o15 -= r0;
				r1 = comp(x16, x12);	o12 += r1;	o16 -= r1;
				r0 = comp(x17, x12);	o12 += r0;	o17 -= r0;
				r1 = comp(x18, x12);	o12 += r1;	o18 -= r1;
				r0 = comp(x19, x12);	o12 += r0;	o19 -= r0;
				r1 = comp(x20, x12);	o12 += r1;	o20 -= r1;
				r0 = comp(x21, x12);	o12 += r0;	o21 -= r0;
				r1 = comp(x22, x12);	o12 += r1;	o22 -= r1;
				r0 = comp(x23, x12);	o12 += r0;	o23 -= r0;
				r1 = comp(x24, x12);	o12 += r1;	o24 -= r1;
				r0 = comp(x25, x12);	o12 += r0;	o25 -= r0;
				r1 = comp(x26, x12);	o12 += r1;	o26 -= r1;
				r0 = comp(x27, x12);	o12 += r0;	o27 -= r0;
				r1 = comp(x28, x12);	o12 += r1;	o28 -= r1;
				r0 = comp(x29, x12);	o12 += r0;	o29 -= r0;
				r1 = comp(x30, x12);	o12 += r1;
				r0 = comp(x14, x13);	o13 += r0;	o14 -= r0;
				r1 = comp(x15, x13);	o13 += r1;	o15 -= r1;
				r0 = comp(x16, x13);	o13 += r0;	o16 -= r0;
				r1 = comp(x17, x13);	o13 += r1;	o17 -= r1;
				r0 = comp(x18, x13);	o13 += r0;	o18 -= r0;
				r1 = comp(x19, x13);	o13 += r1;	o19 -= r1;
				r0 = comp(x20, x13);	o13 += r0;	o20 -= r0;
				r1 = comp(x21, x13);	o13 += r1;	o21 -= r1;
				r0 = comp(x22, x13);	o13 += r0;	o22 -= r0;
				r1 = comp(x23, x13);	o13 += r1;	o23 -= r1;
				r0 = comp(x24, x13);	o13 += r0;	o24 -= r0;
				r1 = comp(x25, x13);	o13 += r1;	o25 -= r1;
				r0 = comp(x26, x13);	o13 += r0;	o26 -= r0;
				r1 = comp(x27, x13);	o13 += r1;	o27 -= r1;
				r0 = comp(x28, x13);	o13 += r0;	o28 -= r0;
				r1 = comp(x29, x13);	o13 += r1;	o29 -= r1;
				r0 = comp(x30, x13);	o13 += r0;
				r1 = comp(x15, x14);	o14 += r1;	o15 -= r1;
				r0 = comp(x16, x14);	o14 += r0;	o16 -= r0;
				r1 = comp(x17, x14);	o14 += r1;	o17 -= r1;
				r0 = comp(x18, x14);	o14 += r0;	o18 -= r0;
				r1 = comp(x19, x14);	o14 += r1;	o19 -= r1;
				r0 = comp(x20, x14);	o14 += r0;	o20 -= r0;
				r1 = comp(x21, x14);	o14 += r1;	o21 -= r1;
				r0 = comp(x22, x14);	o14 += r0;	o22 -= r0;
				r1 = comp(x23, x14);	o14 += r1;	o23 -= r1;
				r0 = comp(x24, x14);	o14 += r0;	o24 -= r0;
				r1 = comp(x25, x14);	o14 += r1;	o25 -= r1;
				r0 = comp(x26, x14);	o14 += r0;	o26 -= r0;
				r1 = comp(x27, x14);	o14 += r1;	o27 -= r1;
				r0 = comp(x28, x14);	o14 += r0;	o28 -= r0;
				r1 = comp(x29, x14);	o14 += r1;	o29 -= r1;
				r0 = comp(x30, x14);	o14 += r0;
				r1 = comp(x16, x15);	o15 += r1;	o16 -= r1;
				r0 = comp(x17, x15);	o15 += r0;	o17 -= r0;
				r1 = comp(x18, x15);	o15 += r1;	o18 -= r1;
				r0 = comp(x19, x15);	o15 += r0;	o19 -= r0;
				r1 = comp(x20, x15);	o15 += r1;	o20 -= r1;
				r0 = comp(x21, x15);	o15 += r0;	o21 -= r0;
				r1 = comp(x22, x15);	o15 += r1;	o22 -= r1;
				r0 = comp(x23, x15);	o15 += r0;	o23 -= r0;
				r1 = comp(x24, x15);	o15 += r1;	o24 -= r1;
				r0 = comp(x25, x15);	o15 += r0;	o25 -= r0;
				r1 = comp(x26, x15);	o15 += r1;	o26 -= r1;
				r0 = comp(x27, x15);	o15 += r0;	o27 -= r0;
				r1 = comp(x28, x15);	o15 += r1;	o28 -= r1;
				r0 = comp(x29, x15);	o15 += r0;	o29 -= r0;
				r1 = comp(x30, x15);	o15 += r1;
				r0 = comp(x17, x16);	o16 += r0;	o17 -= r0;
				r1 = comp(x18, x16);	o16 += r1;	o18 -= r1;
				r0 = comp(x19, x16);	o16 += r0;	o19 -= r0;
				r1 = comp(x20, x16);	o16 += r1;	o20 -= r1;
				r0 = comp(x21, x16);	o16 += r0;	o21 -= r0;
				r1 = comp(x22, x16);	o16 += r1;	o22 -= r1;
				r0 = comp(x23, x16);	o16 += r0;	o23 -= r0;
				r1 = comp(x24, x16);	o16 += r1;	o24 -= r1;
				r0 = comp(x25, x16);	o16 += r0;	o25 -= r0;
				r1 = comp(x26, x16);	o16 += r1;	o26 -= r1;
				r0 = comp(x27, x16);	o16 += r0;	o27 -= r0;
				r1 = comp(x28, x16);	o16 += r1;	o28 -= r1;
				r0 = comp(x29, x16);	o16 += r0;	o29 -= r0;
				r1 = comp(x30, x16);	o16 += r1;
				r0 = comp(x18, x17);	o17 += r0;	o18 -= r0;
				r1 = comp(x19, x17);	o17 += r1;	o19 -= r1;
				r0 = comp(x20, x17);	o17 += r0;	o20 -= r0;
				r1 = comp(x21, x17);	o17 += r1;	o21 -= r1;
				r0 = comp(x22, x17);	o17 += r0;	o22 -= r0;
				r1 = comp(x23, x17);	o17 += r1;	o23 -= r1;
				r0 = comp(x24, x17);	o17 += r0;	o24 -= r0;
				r1 = comp(x25, x17);	o17 += r1;	o25 -= r1;
				r0 = comp(x26, x17);	o17 += r0;	o26 -= r0;
				r1 = comp(x27, x17);	o17 += r1;	o27 -= r1;
				r0 = comp(x28, x17);	o17 += r0;	o28 -= r0;
				r1 = comp(x29, x17);	o17 += r1;	o29 -= r1;
				r0 = comp(x30, x17);	o17 += r0;
				r1 = comp(x19, x18);	o18 += r1;	o19 -= r1;
				r0 = comp(x20, x18);	o18 += r0;	o20 -= r0;
				r1 = comp(x21, x18);	o18 += r1;	o21 -= r1;
				r0 = comp(x22, x18);	o18 += r0;	o22 -= r0;
				r1 = comp(x23, x18);	o18 += r1;	o23 -= r1;
				r0 = comp(x24, x18);	o18 += r0;	o24 -= r0;
				r1 = comp(x25, x18);	o18 += r1;	o25 -= r1;
				r0 = comp(x26, x18);	o18 += r0;	o26 -= r0;
				r1 = comp(x27, x18);	o18 += r1;	o27 -= r1;
				r0 = comp(x28, x18);	o18 += r0;	o28 -= r0;
				r1 = comp(x29, x18);	o18 += r1;	o29 -= r1;
				r0 = comp(x30, x18);	o18 += r0;
				r1 = comp(x20, x19);	o19 += r1;	o20 -= r1;
				r0 = comp(x21, x19);	o19 += r0;	o21 -= r0;
				r1 = comp(x22, x19);	o19 += r1;	o22 -= r1;
				r0 = comp(x23, x19);	o19 += r0;	o23 -= r0;
				r1 = comp(x24, x19);	o19 += r1;	o24 -= r1;
				r0 = comp(x25, x19);	o19 += r0;	o25 -= r0;
				r1 = comp(x26, x19);	o19 += r1;	o26 -= r1;
				r0 = comp(x27, x19);	o19 += r0;	o27 -= r0;
				r1 = comp(x28, x19);	o19 += r1;	o28 -= r1;
				r0 = comp(x29, x19);	o19 += r0;	o29 -= r0;
				r1 = comp(x30, x19);	o19 += r1;
				r0 = comp(x21, x20);	o20 += r0;	o21 -= r0;
				r1 = comp(x22, x20);	o20 += r1;	o22 -= r1;
				r0 = comp(x23, x20);	o20 += r0;	o23 -= r0;
				r1 = comp(x24, x20);	o20 += r1;	o24 -= r1;
				r0 = comp(x25, x20);	o20 += r0;	o25 -= r0;
				r1 = comp(x26, x20);	o20 += r1;	o26 -= r1;
				r0 = comp(x27, x20);	o20 += r0;	o27 -= r0;
				r1 = comp(x28, x20);	o20 += r1;	o28 -= r1;
				r0 = comp(x29, x20);	o20 += r0;	o29 -= r0;
				r1 = comp(x30, x20);	o20 += r1;
				r0 = comp(x22, x21);	o21 += r0;	o22 -= r0;
				r1 = comp(x23, x21);	o21 += r1;	o23 -= r1;
				r0 = comp(x24, x21);	o21 += r0;	o24 -= r0;
				r1 = comp(x25, x21);	o21 += r1;	o25 -= r1;
				r0 = comp(x26, x21);	o21 += r0;	o26 -= r0;
				r1 = comp(x27, x21);	o21 += r1;	o27 -= r1;
				r0 = comp(x28, x21);	o21 += r0;	o28 -= r0;
				r1 = comp(x29, x21);	o21 += r1;	o29 -= r1;
				r0 = comp(x30, x21);	o21 += r0;
				r1 = comp(x23, x22);	o22 += r1;	o23 -= r1;
				r0 = comp(x24, x22);	o22 += r0;	o24 -= r0;
				r1 = comp(x25, x22);	o22 += r1;	o25 -= r1;
				r0 = comp(x26, x22);	o22 += r0;	o26 -= r0;
				r1 = comp(x27, x22);	o22 += r1;	o27 -= r1;
				r0 = comp(x28, x22);	o22 += r0;	o28 -= r0;
				r1 = comp(x29, x22);	o22 += r1;	o29 -= r1;
				r0 = comp(x30, x22);	o22 += r0;
				r1 = comp(x24, x23);	o23 += r1;	o24 -= r1;
				r0 = comp(x25, x23);	o23 += r0;	o25 -= r0;
				r1 = comp(x26, x23);	o23 += r1;	o26 -= r1;
				r0 = comp(x27, x23);	o23 += r0;	o27 -= r0;
				r1 = comp(x28, x23);	o23 += r1;	o28 -= r1;
				r0 = comp(x29, x23);	o23 += r0;	o29 -= r0;
				r1 = comp(x30, x23);	o23 += r1;
				r0 = comp(x25, x24);	o24 += r0;	o25 -= r0;
				r1 = comp(x26, x24);	o24 += r1;	o26 -= r1;
				r0 = comp(x27, x24);	o24 += r0;	o27 -= r0;
				r1 = comp(x28, x24);	o24 += r1;	o28 -= r1;
				r0 = comp(x29, x24);	o24 += r0;	o29 -= r0;
				r1 = comp(x30, x24);	o24 += r1;
				r0 = comp(x26, x25);	o25 += r0;	o26 -= r0;
				r1 = comp(x27, x25);	o25 += r1;	o27 -= r1;
				r0 = comp(x28, x25);	o25 += r0;	o28 -= r0;
				r1 = comp(x29, x25);	o25 += r1;	o29 -= r1;
				r0 = comp(x30, x25);	o25 += r0;
				r1 = comp(x27, x26);	o26 += r1;	o27 -= r1;
				r0 = comp(x28, x26);	o26 += r0;	o28 -= r0;
				r1 = comp(x29, x26);	o26 += r1;	o29 -= r1;
				r0 = comp(x30, x26);	o26 += r0;
				r1 = comp(x28, x27);	o27 += r1;	o28 -= r1;
				r0 = comp(x29, x27);	o27 += r0;	o29 -= r0;
				r1 = comp(x30, x27);	o27 += r1;
				r0 = comp(x29, x28);	o28 += r0;	o29 -= r0;
				r1 = comp(x30, x28);	o28 += r1;
				r0 = comp(x30, x29);	o29 += r0;
				o30 = 465 - o0 - o1 - o2 - o3 - o4 - o5 - o6 - o7 - o8 - o9 - o10 - o11 - o12 - o13 - o14 - o15 - o16 - o17 - o18 - o19 - o20 - o21 - o22 - o23 - o24 - o25 - o26 - o27 - o28 - o29;
				arr[o0] = x0;
				arr[o1] = x1;
				arr[o2] = x2;
				arr[o3] = x3;
				arr[o4] = x4;
				arr[o5] = x5;
				arr[o6] = x6;
				arr[o7] = x7;
				arr[o8] = x8;
				arr[o9] = x9;
				arr[o10] = x10;
				arr[o11] = x11;
				arr[o12] = x12;
				arr[o13] = x13;
				arr[o14] = x14;
				arr[o15] = x15;
				arr[o16] = x16;
				arr[o17] = x17;
				arr[o18] = x18;
				arr[o19] = x19;
				arr[o20] = x20;
				arr[o21] = x21;
				arr[o22] = x22;
				arr[o23] = x23;
				arr[o24] = x24;
				arr[o25] = x25;
				arr[o26] = x26;
				arr[o27] = x27;
				arr[o28] = x28;
				arr[o29] = x29;
				arr[o30] = x30;

				FinishingSorter{}(arr, 31);
			}

			void sort32(T* arr)
			{
				T x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31;
				x0 = arr[0];
				x1 = arr[1];
				x2 = arr[2];
				x3 = arr[3];
				x4 = arr[4];
				x5 = arr[5];
				x6 = arr[6];
				x7 = arr[7];
				x8 = arr[8];
				x9 = arr[9];
				x10 = arr[10];
				x11 = arr[11];
				x12 = arr[12];
				x13 = arr[13];
				x14 = arr[14];
				x15 = arr[15];
				x16 = arr[16];
				x17 = arr[17];
				x18 = arr[18];
				x19 = arr[19];
				x20 = arr[20];
				x21 = arr[21];
				x22 = arr[22];
				x23 = arr[23];
				x24 = arr[24];
				x25 = arr[25];
				x26 = arr[26];
				x27 = arr[27];
				x28 = arr[28];
				x29 = arr[29];
				x30 = arr[30];
				x31 = arr[31];
				int o0 = 0, o1 = 1, o2 = 2, o3 = 3, o4 = 4, o5 = 5, o6 = 6, o7 = 7, o8 = 8, o9 = 9, o10 = 10, o11 = 11, o12 = 12, o13 = 13, o14 = 14, o15 = 15, o16 = 16, o17 = 17, o18 = 18, o19 = 19, o20 = 20, o21 = 21, o22 = 22, o23 = 23, o24 = 24, o25 = 25, o26 = 26, o27 = 27, o28 = 28, o29 = 29, o30 = 30, o31 = 0;
				auto r0 = comp(x1, x0);	o0 += r0;	o1 -= r0;
				auto r1 = comp(x2, x0);	o0 += r1;	o2 -= r1;
				r0 = comp(x3, x0);	o0 += r0;	o3 -= r0;
				r1 = comp(x4, x0);	o0 += r1;	o4 -= r1;
				r0 = comp(x5, x0);	o0 += r0;	o5 -= r0;
				r1 = comp(x6, x0);	o0 += r1;	o6 -= r1;
				r0 = comp(x7, x0);	o0 += r0;	o7 -= r0;
				r1 = comp(x8, x0);	o0 += r1;	o8 -= r1;
				r0 = comp(x9, x0);	o0 += r0;	o9 -= r0;
				r1 = comp(x10, x0);	o0 += r1;	o10 -= r1;
				r0 = comp(x11, x0);	o0 += r0;	o11 -= r0;
				r1 = comp(x12, x0);	o0 += r1;	o12 -= r1;
				r0 = comp(x13, x0);	o0 += r0;	o13 -= r0;
				r1 = comp(x14, x0);	o0 += r1;	o14 -= r1;
				r0 = comp(x15, x0);	o0 += r0;	o15 -= r0;
				r1 = comp(x16, x0);	o0 += r1;	o16 -= r1;
				r0 = comp(x17, x0);	o0 += r0;	o17 -= r0;
				r1 = comp(x18, x0);	o0 += r1;	o18 -= r1;
				r0 = comp(x19, x0);	o0 += r0;	o19 -= r0;
				r1 = comp(x20, x0);	o0 += r1;	o20 -= r1;
				r0 = comp(x21, x0);	o0 += r0;	o21 -= r0;
				r1 = comp(x22, x0);	o0 += r1;	o22 -= r1;
				r0 = comp(x23, x0);	o0 += r0;	o23 -= r0;
				r1 = comp(x24, x0);	o0 += r1;	o24 -= r1;
				r0 = comp(x25, x0);	o0 += r0;	o25 -= r0;
				r1 = comp(x26, x0);	o0 += r1;	o26 -= r1;
				r0 = comp(x27, x0);	o0 += r0;	o27 -= r0;
				r1 = comp(x28, x0);	o0 += r1;	o28 -= r1;
				r0 = comp(x29, x0);	o0 += r0;	o29 -= r0;
				r1 = comp(x30, x0);	o0 += r1;	o30 -= r1;
				r0 = comp(x31, x0);	o0 += r0;
				r1 = comp(x2, x1);	o1 += r1;	o2 -= r1;
				r0 = comp(x3, x1);	o1 += r0;	o3 -= r0;
				r1 = comp(x4, x1);	o1 += r1;	o4 -= r1;
				r0 = comp(x5, x1);	o1 += r0;	o5 -= r0;
				r1 = comp(x6, x1);	o1 += r1;	o6 -= r1;
				r0 = comp(x7, x1);	o1 += r0;	o7 -= r0;
				r1 = comp(x8, x1);	o1 += r1;	o8 -= r1;
				r0 = comp(x9, x1);	o1 += r0;	o9 -= r0;
				r1 = comp(x10, x1);	o1 += r1;	o10 -= r1;
				r0 = comp(x11, x1);	o1 += r0;	o11 -= r0;
				r1 = comp(x12, x1);	o1 += r1;	o12 -= r1;
				r0 = comp(x13, x1);	o1 += r0;	o13 -= r0;
				r1 = comp(x14, x1);	o1 += r1;	o14 -= r1;
				r0 = comp(x15, x1);	o1 += r0;	o15 -= r0;
				r1 = comp(x16, x1);	o1 += r1;	o16 -= r1;
				r0 = comp(x17, x1);	o1 += r0;	o17 -= r0;
				r1 = comp(x18, x1);	o1 += r1;	o18 -= r1;
				r0 = comp(x19, x1);	o1 += r0;	o19 -= r0;
				r1 = comp(x20, x1);	o1 += r1;	o20 -= r1;
				r0 = comp(x21, x1);	o1 += r0;	o21 -= r0;
				r1 = comp(x22, x1);	o1 += r1;	o22 -= r1;
				r0 = comp(x23, x1);	o1 += r0;	o23 -= r0;
				r1 = comp(x24, x1);	o1 += r1;	o24 -= r1;
				r0 = comp(x25, x1);	o1 += r0;	o25 -= r0;
				r1 = comp(x26, x1);	o1 += r1;	o26 -= r1;
				r0 = comp(x27, x1);	o1 += r0;	o27 -= r0;
				r1 = comp(x28, x1);	o1 += r1;	o28 -= r1;
				r0 = comp(x29, x1);	o1 += r0;	o29 -= r0;
				r1 = comp(x30, x1);	o1 += r1;	o30 -= r1;
				r0 = comp(x31, x1);	o1 += r0;
				r1 = comp(x3, x2);	o2 += r1;	o3 -= r1;
				r0 = comp(x4, x2);	o2 += r0;	o4 -= r0;
				r1 = comp(x5, x2);	o2 += r1;	o5 -= r1;
				r0 = comp(x6, x2);	o2 += r0;	o6 -= r0;
				r1 = comp(x7, x2);	o2 += r1;	o7 -= r1;
				r0 = comp(x8, x2);	o2 += r0;	o8 -= r0;
				r1 = comp(x9, x2);	o2 += r1;	o9 -= r1;
				r0 = comp(x10, x2);	o2 += r0;	o10 -= r0;
				r1 = comp(x11, x2);	o2 += r1;	o11 -= r1;
				r0 = comp(x12, x2);	o2 += r0;	o12 -= r0;
				r1 = comp(x13, x2);	o2 += r1;	o13 -= r1;
				r0 = comp(x14, x2);	o2 += r0;	o14 -= r0;
				r1 = comp(x15, x2);	o2 += r1;	o15 -= r1;
				r0 = comp(x16, x2);	o2 += r0;	o16 -= r0;
				r1 = comp(x17, x2);	o2 += r1;	o17 -= r1;
				r0 = comp(x18, x2);	o2 += r0;	o18 -= r0;
				r1 = comp(x19, x2);	o2 += r1;	o19 -= r1;
				r0 = comp(x20, x2);	o2 += r0;	o20 -= r0;
				r1 = comp(x21, x2);	o2 += r1;	o21 -= r1;
				r0 = comp(x22, x2);	o2 += r0;	o22 -= r0;
				r1 = comp(x23, x2);	o2 += r1;	o23 -= r1;
				r0 = comp(x24, x2);	o2 += r0;	o24 -= r0;
				r1 = comp(x25, x2);	o2 += r1;	o25 -= r1;
				r0 = comp(x26, x2);	o2 += r0;	o26 -= r0;
				r1 = comp(x27, x2);	o2 += r1;	o27 -= r1;
				r0 = comp(x28, x2);	o2 += r0;	o28 -= r0;
				r1 = comp(x29, x2);	o2 += r1;	o29 -= r1;
				r0 = comp(x30, x2);	o2 += r0;	o30 -= r0;
				r1 = comp(x31, x2);	o2 += r1;
				r0 = comp(x4, x3);	o3 += r0;	o4 -= r0;
				r1 = comp(x5, x3);	o3 += r1;	o5 -= r1;
				r0 = comp(x6, x3);	o3 += r0;	o6 -= r0;
				r1 = comp(x7, x3);	o3 += r1;	o7 -= r1;
				r0 = comp(x8, x3);	o3 += r0;	o8 -= r0;
				r1 = comp(x9, x3);	o3 += r1;	o9 -= r1;
				r0 = comp(x10, x3);	o3 += r0;	o10 -= r0;
				r1 = comp(x11, x3);	o3 += r1;	o11 -= r1;
				r0 = comp(x12, x3);	o3 += r0;	o12 -= r0;
				r1 = comp(x13, x3);	o3 += r1;	o13 -= r1;
				r0 = comp(x14, x3);	o3 += r0;	o14 -= r0;
				r1 = comp(x15, x3);	o3 += r1;	o15 -= r1;
				r0 = comp(x16, x3);	o3 += r0;	o16 -= r0;
				r1 = comp(x17, x3);	o3 += r1;	o17 -= r1;
				r0 = comp(x18, x3);	o3 += r0;	o18 -= r0;
				r1 = comp(x19, x3);	o3 += r1;	o19 -= r1;
				r0 = comp(x20, x3);	o3 += r0;	o20 -= r0;
				r1 = comp(x21, x3);	o3 += r1;	o21 -= r1;
				r0 = comp(x22, x3);	o3 += r0;	o22 -= r0;
				r1 = comp(x23, x3);	o3 += r1;	o23 -= r1;
				r0 = comp(x24, x3);	o3 += r0;	o24 -= r0;
				r1 = comp(x25, x3);	o3 += r1;	o25 -= r1;
				r0 = comp(x26, x3);	o3 += r0;	o26 -= r0;
				r1 = comp(x27, x3);	o3 += r1;	o27 -= r1;
				r0 = comp(x28, x3);	o3 += r0;	o28 -= r0;
				r1 = comp(x29, x3);	o3 += r1;	o29 -= r1;
				r0 = comp(x30, x3);	o3 += r0;	o30 -= r0;
				r1 = comp(x31, x3);	o3 += r1;
				r0 = comp(x5, x4);	o4 += r0;	o5 -= r0;
				r1 = comp(x6, x4);	o4 += r1;	o6 -= r1;
				r0 = comp(x7, x4);	o4 += r0;	o7 -= r0;
				r1 = comp(x8, x4);	o4 += r1;	o8 -= r1;
				r0 = comp(x9, x4);	o4 += r0;	o9 -= r0;
				r1 = comp(x10, x4);	o4 += r1;	o10 -= r1;
				r0 = comp(x11, x4);	o4 += r0;	o11 -= r0;
				r1 = comp(x12, x4);	o4 += r1;	o12 -= r1;
				r0 = comp(x13, x4);	o4 += r0;	o13 -= r0;
				r1 = comp(x14, x4);	o4 += r1;	o14 -= r1;
				r0 = comp(x15, x4);	o4 += r0;	o15 -= r0;
				r1 = comp(x16, x4);	o4 += r1;	o16 -= r1;
				r0 = comp(x17, x4);	o4 += r0;	o17 -= r0;
				r1 = comp(x18, x4);	o4 += r1;	o18 -= r1;
				r0 = comp(x19, x4);	o4 += r0;	o19 -= r0;
				r1 = comp(x20, x4);	o4 += r1;	o20 -= r1;
				r0 = comp(x21, x4);	o4 += r0;	o21 -= r0;
				r1 = comp(x22, x4);	o4 += r1;	o22 -= r1;
				r0 = comp(x23, x4);	o4 += r0;	o23 -= r0;
				r1 = comp(x24, x4);	o4 += r1;	o24 -= r1;
				r0 = comp(x25, x4);	o4 += r0;	o25 -= r0;
				r1 = comp(x26, x4);	o4 += r1;	o26 -= r1;
				r0 = comp(x27, x4);	o4 += r0;	o27 -= r0;
				r1 = comp(x28, x4);	o4 += r1;	o28 -= r1;
				r0 = comp(x29, x4);	o4 += r0;	o29 -= r0;
				r1 = comp(x30, x4);	o4 += r1;	o30 -= r1;
				r0 = comp(x31, x4);	o4 += r0;
				r1 = comp(x6, x5);	o5 += r1;	o6 -= r1;
				r0 = comp(x7, x5);	o5 += r0;	o7 -= r0;
				r1 = comp(x8, x5);	o5 += r1;	o8 -= r1;
				r0 = comp(x9, x5);	o5 += r0;	o9 -= r0;
				r1 = comp(x10, x5);	o5 += r1;	o10 -= r1;
				r0 = comp(x11, x5);	o5 += r0;	o11 -= r0;
				r1 = comp(x12, x5);	o5 += r1;	o12 -= r1;
				r0 = comp(x13, x5);	o5 += r0;	o13 -= r0;
				r1 = comp(x14, x5);	o5 += r1;	o14 -= r1;
				r0 = comp(x15, x5);	o5 += r0;	o15 -= r0;
				r1 = comp(x16, x5);	o5 += r1;	o16 -= r1;
				r0 = comp(x17, x5);	o5 += r0;	o17 -= r0;
				r1 = comp(x18, x5);	o5 += r1;	o18 -= r1;
				r0 = comp(x19, x5);	o5 += r0;	o19 -= r0;
				r1 = comp(x20, x5);	o5 += r1;	o20 -= r1;
				r0 = comp(x21, x5);	o5 += r0;	o21 -= r0;
				r1 = comp(x22, x5);	o5 += r1;	o22 -= r1;
				r0 = comp(x23, x5);	o5 += r0;	o23 -= r0;
				r1 = comp(x24, x5);	o5 += r1;	o24 -= r1;
				r0 = comp(x25, x5);	o5 += r0;	o25 -= r0;
				r1 = comp(x26, x5);	o5 += r1;	o26 -= r1;
				r0 = comp(x27, x5);	o5 += r0;	o27 -= r0;
				r1 = comp(x28, x5);	o5 += r1;	o28 -= r1;
				r0 = comp(x29, x5);	o5 += r0;	o29 -= r0;
				r1 = comp(x30, x5);	o5 += r1;	o30 -= r1;
				r0 = comp(x31, x5);	o5 += r0;
				r1 = comp(x7, x6);	o6 += r1;	o7 -= r1;
				r0 = comp(x8, x6);	o6 += r0;	o8 -= r0;
				r1 = comp(x9, x6);	o6 += r1;	o9 -= r1;
				r0 = comp(x10, x6);	o6 += r0;	o10 -= r0;
				r1 = comp(x11, x6);	o6 += r1;	o11 -= r1;
				r0 = comp(x12, x6);	o6 += r0;	o12 -= r0;
				r1 = comp(x13, x6);	o6 += r1;	o13 -= r1;
				r0 = comp(x14, x6);	o6 += r0;	o14 -= r0;
				r1 = comp(x15, x6);	o6 += r1;	o15 -= r1;
				r0 = comp(x16, x6);	o6 += r0;	o16 -= r0;
				r1 = comp(x17, x6);	o6 += r1;	o17 -= r1;
				r0 = comp(x18, x6);	o6 += r0;	o18 -= r0;
				r1 = comp(x19, x6);	o6 += r1;	o19 -= r1;
				r0 = comp(x20, x6);	o6 += r0;	o20 -= r0;
				r1 = comp(x21, x6);	o6 += r1;	o21 -= r1;
				r0 = comp(x22, x6);	o6 += r0;	o22 -= r0;
				r1 = comp(x23, x6);	o6 += r1;	o23 -= r1;
				r0 = comp(x24, x6);	o6 += r0;	o24 -= r0;
				r1 = comp(x25, x6);	o6 += r1;	o25 -= r1;
				r0 = comp(x26, x6);	o6 += r0;	o26 -= r0;
				r1 = comp(x27, x6);	o6 += r1;	o27 -= r1;
				r0 = comp(x28, x6);	o6 += r0;	o28 -= r0;
				r1 = comp(x29, x6);	o6 += r1;	o29 -= r1;
				r0 = comp(x30, x6);	o6 += r0;	o30 -= r0;
				r1 = comp(x31, x6);	o6 += r1;
				r0 = comp(x8, x7);	o7 += r0;	o8 -= r0;
				r1 = comp(x9, x7);	o7 += r1;	o9 -= r1;
				r0 = comp(x10, x7);	o7 += r0;	o10 -= r0;
				r1 = comp(x11, x7);	o7 += r1;	o11 -= r1;
				r0 = comp(x12, x7);	o7 += r0;	o12 -= r0;
				r1 = comp(x13, x7);	o7 += r1;	o13 -= r1;
				r0 = comp(x14, x7);	o7 += r0;	o14 -= r0;
				r1 = comp(x15, x7);	o7 += r1;	o15 -= r1;
				r0 = comp(x16, x7);	o7 += r0;	o16 -= r0;
				r1 = comp(x17, x7);	o7 += r1;	o17 -= r1;
				r0 = comp(x18, x7);	o7 += r0;	o18 -= r0;
				r1 = comp(x19, x7);	o7 += r1;	o19 -= r1;
				r0 = comp(x20, x7);	o7 += r0;	o20 -= r0;
				r1 = comp(x21, x7);	o7 += r1;	o21 -= r1;
				r0 = comp(x22, x7);	o7 += r0;	o22 -= r0;
				r1 = comp(x23, x7);	o7 += r1;	o23 -= r1;
				r0 = comp(x24, x7);	o7 += r0;	o24 -= r0;
				r1 = comp(x25, x7);	o7 += r1;	o25 -= r1;
				r0 = comp(x26, x7);	o7 += r0;	o26 -= r0;
				r1 = comp(x27, x7);	o7 += r1;	o27 -= r1;
				r0 = comp(x28, x7);	o7 += r0;	o28 -= r0;
				r1 = comp(x29, x7);	o7 += r1;	o29 -= r1;
				r0 = comp(x30, x7);	o7 += r0;	o30 -= r0;
				r1 = comp(x31, x7);	o7 += r1;
				r0 = comp(x9, x8);	o8 += r0;	o9 -= r0;
				r1 = comp(x10, x8);	o8 += r1;	o10 -= r1;
				r0 = comp(x11, x8);	o8 += r0;	o11 -= r0;
				r1 = comp(x12, x8);	o8 += r1;	o12 -= r1;
				r0 = comp(x13, x8);	o8 += r0;	o13 -= r0;
				r1 = comp(x14, x8);	o8 += r1;	o14 -= r1;
				r0 = comp(x15, x8);	o8 += r0;	o15 -= r0;
				r1 = comp(x16, x8);	o8 += r1;	o16 -= r1;
				r0 = comp(x17, x8);	o8 += r0;	o17 -= r0;
				r1 = comp(x18, x8);	o8 += r1;	o18 -= r1;
				r0 = comp(x19, x8);	o8 += r0;	o19 -= r0;
				r1 = comp(x20, x8);	o8 += r1;	o20 -= r1;
				r0 = comp(x21, x8);	o8 += r0;	o21 -= r0;
				r1 = comp(x22, x8);	o8 += r1;	o22 -= r1;
				r0 = comp(x23, x8);	o8 += r0;	o23 -= r0;
				r1 = comp(x24, x8);	o8 += r1;	o24 -= r1;
				r0 = comp(x25, x8);	o8 += r0;	o25 -= r0;
				r1 = comp(x26, x8);	o8 += r1;	o26 -= r1;
				r0 = comp(x27, x8);	o8 += r0;	o27 -= r0;
				r1 = comp(x28, x8);	o8 += r1;	o28 -= r1;
				r0 = comp(x29, x8);	o8 += r0;	o29 -= r0;
				r1 = comp(x30, x8);	o8 += r1;	o30 -= r1;
				r0 = comp(x31, x8);	o8 += r0;
				r1 = comp(x10, x9);	o9 += r1;	o10 -= r1;
				r0 = comp(x11, x9);	o9 += r0;	o11 -= r0;
				r1 = comp(x12, x9);	o9 += r1;	o12 -= r1;
				r0 = comp(x13, x9);	o9 += r0;	o13 -= r0;
				r1 = comp(x14, x9);	o9 += r1;	o14 -= r1;
				r0 = comp(x15, x9);	o9 += r0;	o15 -= r0;
				r1 = comp(x16, x9);	o9 += r1;	o16 -= r1;
				r0 = comp(x17, x9);	o9 += r0;	o17 -= r0;
				r1 = comp(x18, x9);	o9 += r1;	o18 -= r1;
				r0 = comp(x19, x9);	o9 += r0;	o19 -= r0;
				r1 = comp(x20, x9);	o9 += r1;	o20 -= r1;
				r0 = comp(x21, x9);	o9 += r0;	o21 -= r0;
				r1 = comp(x22, x9);	o9 += r1;	o22 -= r1;
				r0 = comp(x23, x9);	o9 += r0;	o23 -= r0;
				r1 = comp(x24, x9);	o9 += r1;	o24 -= r1;
				r0 = comp(x25, x9);	o9 += r0;	o25 -= r0;
				r1 = comp(x26, x9);	o9 += r1;	o26 -= r1;
				r0 = comp(x27, x9);	o9 += r0;	o27 -= r0;
				r1 = comp(x28, x9);	o9 += r1;	o28 -= r1;
				r0 = comp(x29, x9);	o9 += r0;	o29 -= r0;
				r1 = comp(x30, x9);	o9 += r1;	o30 -= r1;
				r0 = comp(x31, x9);	o9 += r0;
				r1 = comp(x11, x10);	o10 += r1;	o11 -= r1;
				r0 = comp(x12, x10);	o10 += r0;	o12 -= r0;
				r1 = comp(x13, x10);	o10 += r1;	o13 -= r1;
				r0 = comp(x14, x10);	o10 += r0;	o14 -= r0;
				r1 = comp(x15, x10);	o10 += r1;	o15 -= r1;
				r0 = comp(x16, x10);	o10 += r0;	o16 -= r0;
				r1 = comp(x17, x10);	o10 += r1;	o17 -= r1;
				r0 = comp(x18, x10);	o10 += r0;	o18 -= r0;
				r1 = comp(x19, x10);	o10 += r1;	o19 -= r1;
				r0 = comp(x20, x10);	o10 += r0;	o20 -= r0;
				r1 = comp(x21, x10);	o10 += r1;	o21 -= r1;
				r0 = comp(x22, x10);	o10 += r0;	o22 -= r0;
				r1 = comp(x23, x10);	o10 += r1;	o23 -= r1;
				r0 = comp(x24, x10);	o10 += r0;	o24 -= r0;
				r1 = comp(x25, x10);	o10 += r1;	o25 -= r1;
				r0 = comp(x26, x10);	o10 += r0;	o26 -= r0;
				r1 = comp(x27, x10);	o10 += r1;	o27 -= r1;
				r0 = comp(x28, x10);	o10 += r0;	o28 -= r0;
				r1 = comp(x29, x10);	o10 += r1;	o29 -= r1;
				r0 = comp(x30, x10);	o10 += r0;	o30 -= r0;
				r1 = comp(x31, x10);	o10 += r1;
				r0 = comp(x12, x11);	o11 += r0;	o12 -= r0;
				r1 = comp(x13, x11);	o11 += r1;	o13 -= r1;
				r0 = comp(x14, x11);	o11 += r0;	o14 -= r0;
				r1 = comp(x15, x11);	o11 += r1;	o15 -= r1;
				r0 = comp(x16, x11);	o11 += r0;	o16 -= r0;
				r1 = comp(x17, x11);	o11 += r1;	o17 -= r1;
				r0 = comp(x18, x11);	o11 += r0;	o18 -= r0;
				r1 = comp(x19, x11);	o11 += r1;	o19 -= r1;
				r0 = comp(x20, x11);	o11 += r0;	o20 -= r0;
				r1 = comp(x21, x11);	o11 += r1;	o21 -= r1;
				r0 = comp(x22, x11);	o11 += r0;	o22 -= r0;
				r1 = comp(x23, x11);	o11 += r1;	o23 -= r1;
				r0 = comp(x24, x11);	o11 += r0;	o24 -= r0;
				r1 = comp(x25, x11);	o11 += r1;	o25 -= r1;
				r0 = comp(x26, x11);	o11 += r0;	o26 -= r0;
				r1 = comp(x27, x11);	o11 += r1;	o27 -= r1;
				r0 = comp(x28, x11);	o11 += r0;	o28 -= r0;
				r1 = comp(x29, x11);	o11 += r1;	o29 -= r1;
				r0 = comp(x30, x11);	o11 += r0;	o30 -= r0;
				r1 = comp(x31, x11);	o11 += r1;
				r0 = comp(x13, x12);	o12 += r0;	o13 -= r0;
				r1 = comp(x14, x12);	o12 += r1;	o14 -= r1;
				r0 = comp(x15, x12);	o12 += r0;	o15 -= r0;
				r1 = comp(x16, x12);	o12 += r1;	o16 -= r1;
				r0 = comp(x17, x12);	o12 += r0;	o17 -= r0;
				r1 = comp(x18, x12);	o12 += r1;	o18 -= r1;
				r0 = comp(x19, x12);	o12 += r0;	o19 -= r0;
				r1 = comp(x20, x12);	o12 += r1;	o20 -= r1;
				r0 = comp(x21, x12);	o12 += r0;	o21 -= r0;
				r1 = comp(x22, x12);	o12 += r1;	o22 -= r1;
				r0 = comp(x23, x12);	o12 += r0;	o23 -= r0;
				r1 = comp(x24, x12);	o12 += r1;	o24 -= r1;
				r0 = comp(x25, x12);	o12 += r0;	o25 -= r0;
				r1 = comp(x26, x12);	o12 += r1;	o26 -= r1;
				r0 = comp(x27, x12);	o12 += r0;	o27 -= r0;
				r1 = comp(x28, x12);	o12 += r1;	o28 -= r1;
				r0 = comp(x29, x12);	o12 += r0;	o29 -= r0;
				r1 = comp(x30, x12);	o12 += r1;	o30 -= r1;
				r0 = comp(x31, x12);	o12 += r0;
				r1 = comp(x14, x13);	o13 += r1;	o14 -= r1;
				r0 = comp(x15, x13);	o13 += r0;	o15 -= r0;
				r1 = comp(x16, x13);	o13 += r1;	o16 -= r1;
				r0 = comp(x17, x13);	o13 += r0;	o17 -= r0;
				r1 = comp(x18, x13);	o13 += r1;	o18 -= r1;
				r0 = comp(x19, x13);	o13 += r0;	o19 -= r0;
				r1 = comp(x20, x13);	o13 += r1;	o20 -= r1;
				r0 = comp(x21, x13);	o13 += r0;	o21 -= r0;
				r1 = comp(x22, x13);	o13 += r1;	o22 -= r1;
				r0 = comp(x23, x13);	o13 += r0;	o23 -= r0;
				r1 = comp(x24, x13);	o13 += r1;	o24 -= r1;
				r0 = comp(x25, x13);	o13 += r0;	o25 -= r0;
				r1 = comp(x26, x13);	o13 += r1;	o26 -= r1;
				r0 = comp(x27, x13);	o13 += r0;	o27 -= r0;
				r1 = comp(x28, x13);	o13 += r1;	o28 -= r1;
				r0 = comp(x29, x13);	o13 += r0;	o29 -= r0;
				r1 = comp(x30, x13);	o13 += r1;	o30 -= r1;
				r0 = comp(x31, x13);	o13 += r0;
				r1 = comp(x15, x14);	o14 += r1;	o15 -= r1;
				r0 = comp(x16, x14);	o14 += r0;	o16 -= r0;
				r1 = comp(x17, x14);	o14 += r1;	o17 -= r1;
				r0 = comp(x18, x14);	o14 += r0;	o18 -= r0;
				r1 = comp(x19, x14);	o14 += r1;	o19 -= r1;
				r0 = comp(x20, x14);	o14 += r0;	o20 -= r0;
				r1 = comp(x21, x14);	o14 += r1;	o21 -= r1;
				r0 = comp(x22, x14);	o14 += r0;	o22 -= r0;
				r1 = comp(x23, x14);	o14 += r1;	o23 -= r1;
				r0 = comp(x24, x14);	o14 += r0;	o24 -= r0;
				r1 = comp(x25, x14);	o14 += r1;	o25 -= r1;
				r0 = comp(x26, x14);	o14 += r0;	o26 -= r0;
				r1 = comp(x27, x14);	o14 += r1;	o27 -= r1;
				r0 = comp(x28, x14);	o14 += r0;	o28 -= r0;
				r1 = comp(x29, x14);	o14 += r1;	o29 -= r1;
				r0 = comp(x30, x14);	o14 += r0;	o30 -= r0;
				r1 = comp(x31, x14);	o14 += r1;
				r0 = comp(x16, x15);	o15 += r0;	o16 -= r0;
				r1 = comp(x17, x15);	o15 += r1;	o17 -= r1;
				r0 = comp(x18, x15);	o15 += r0;	o18 -= r0;
				r1 = comp(x19, x15);	o15 += r1;	o19 -= r1;
				r0 = comp(x20, x15);	o15 += r0;	o20 -= r0;
				r1 = comp(x21, x15);	o15 += r1;	o21 -= r1;
				r0 = comp(x22, x15);	o15 += r0;	o22 -= r0;
				r1 = comp(x23, x15);	o15 += r1;	o23 -= r1;
				r0 = comp(x24, x15);	o15 += r0;	o24 -= r0;
				r1 = comp(x25, x15);	o15 += r1;	o25 -= r1;
				r0 = comp(x26, x15);	o15 += r0;	o26 -= r0;
				r1 = comp(x27, x15);	o15 += r1;	o27 -= r1;
				r0 = comp(x28, x15);	o15 += r0;	o28 -= r0;
				r1 = comp(x29, x15);	o15 += r1;	o29 -= r1;
				r0 = comp(x30, x15);	o15 += r0;	o30 -= r0;
				r1 = comp(x31, x15);	o15 += r1;
				r0 = comp(x17, x16);	o16 += r0;	o17 -= r0;
				r1 = comp(x18, x16);	o16 += r1;	o18 -= r1;
				r0 = comp(x19, x16);	o16 += r0;	o19 -= r0;
				r1 = comp(x20, x16);	o16 += r1;	o20 -= r1;
				r0 = comp(x21, x16);	o16 += r0;	o21 -= r0;
				r1 = comp(x22, x16);	o16 += r1;	o22 -= r1;
				r0 = comp(x23, x16);	o16 += r0;	o23 -= r0;
				r1 = comp(x24, x16);	o16 += r1;	o24 -= r1;
				r0 = comp(x25, x16);	o16 += r0;	o25 -= r0;
				r1 = comp(x26, x16);	o16 += r1;	o26 -= r1;
				r0 = comp(x27, x16);	o16 += r0;	o27 -= r0;
				r1 = comp(x28, x16);	o16 += r1;	o28 -= r1;
				r0 = comp(x29, x16);	o16 += r0;	o29 -= r0;
				r1 = comp(x30, x16);	o16 += r1;	o30 -= r1;
				r0 = comp(x31, x16);	o16 += r0;
				r1 = comp(x18, x17);	o17 += r1;	o18 -= r1;
				r0 = comp(x19, x17);	o17 += r0;	o19 -= r0;
				r1 = comp(x20, x17);	o17 += r1;	o20 -= r1;
				r0 = comp(x21, x17);	o17 += r0;	o21 -= r0;
				r1 = comp(x22, x17);	o17 += r1;	o22 -= r1;
				r0 = comp(x23, x17);	o17 += r0;	o23 -= r0;
				r1 = comp(x24, x17);	o17 += r1;	o24 -= r1;
				r0 = comp(x25, x17);	o17 += r0;	o25 -= r0;
				r1 = comp(x26, x17);	o17 += r1;	o26 -= r1;
				r0 = comp(x27, x17);	o17 += r0;	o27 -= r0;
				r1 = comp(x28, x17);	o17 += r1;	o28 -= r1;
				r0 = comp(x29, x17);	o17 += r0;	o29 -= r0;
				r1 = comp(x30, x17);	o17 += r1;	o30 -= r1;
				r0 = comp(x31, x17);	o17 += r0;
				r1 = comp(x19, x18);	o18 += r1;	o19 -= r1;
				r0 = comp(x20, x18);	o18 += r0;	o20 -= r0;
				r1 = comp(x21, x18);	o18 += r1;	o21 -= r1;
				r0 = comp(x22, x18);	o18 += r0;	o22 -= r0;
				r1 = comp(x23, x18);	o18 += r1;	o23 -= r1;
				r0 = comp(x24, x18);	o18 += r0;	o24 -= r0;
				r1 = comp(x25, x18);	o18 += r1;	o25 -= r1;
				r0 = comp(x26, x18);	o18 += r0;	o26 -= r0;
				r1 = comp(x27, x18);	o18 += r1;	o27 -= r1;
				r0 = comp(x28, x18);	o18 += r0;	o28 -= r0;
				r1 = comp(x29, x18);	o18 += r1;	o29 -= r1;
				r0 = comp(x30, x18);	o18 += r0;	o30 -= r0;
				r1 = comp(x31, x18);	o18 += r1;
				r0 = comp(x20, x19);	o19 += r0;	o20 -= r0;
				r1 = comp(x21, x19);	o19 += r1;	o21 -= r1;
				r0 = comp(x22, x19);	o19 += r0;	o22 -= r0;
				r1 = comp(x23, x19);	o19 += r1;	o23 -= r1;
				r0 = comp(x24, x19);	o19 += r0;	o24 -= r0;
				r1 = comp(x25, x19);	o19 += r1;	o25 -= r1;
				r0 = comp(x26, x19);	o19 += r0;	o26 -= r0;
				r1 = comp(x27, x19);	o19 += r1;	o27 -= r1;
				r0 = comp(x28, x19);	o19 += r0;	o28 -= r0;
				r1 = comp(x29, x19);	o19 += r1;	o29 -= r1;
				r0 = comp(x30, x19);	o19 += r0;	o30 -= r0;
				r1 = comp(x31, x19);	o19 += r1;
				r0 = comp(x21, x20);	o20 += r0;	o21 -= r0;
				r1 = comp(x22, x20);	o20 += r1;	o22 -= r1;
				r0 = comp(x23, x20);	o20 += r0;	o23 -= r0;
				r1 = comp(x24, x20);	o20 += r1;	o24 -= r1;
				r0 = comp(x25, x20);	o20 += r0;	o25 -= r0;
				r1 = comp(x26, x20);	o20 += r1;	o26 -= r1;
				r0 = comp(x27, x20);	o20 += r0;	o27 -= r0;
				r1 = comp(x28, x20);	o20 += r1;	o28 -= r1;
				r0 = comp(x29, x20);	o20 += r0;	o29 -= r0;
				r1 = comp(x30, x20);	o20 += r1;	o30 -= r1;
				r0 = comp(x31, x20);	o20 += r0;
				r1 = comp(x22, x21);	o21 += r1;	o22 -= r1;
				r0 = comp(x23, x21);	o21 += r0;	o23 -= r0;
				r1 = comp(x24, x21);	o21 += r1;	o24 -= r1;
				r0 = comp(x25, x21);	o21 += r0;	o25 -= r0;
				r1 = comp(x26, x21);	o21 += r1;	o26 -= r1;
				r0 = comp(x27, x21);	o21 += r0;	o27 -= r0;
				r1 = comp(x28, x21);	o21 += r1;	o28 -= r1;
				r0 = comp(x29, x21);	o21 += r0;	o29 -= r0;
				r1 = comp(x30, x21);	o21 += r1;	o30 -= r1;
				r0 = comp(x31, x21);	o21 += r0;
				r1 = comp(x23, x22);	o22 += r1;	o23 -= r1;
				r0 = comp(x24, x22);	o22 += r0;	o24 -= r0;
				r1 = comp(x25, x22);	o22 += r1;	o25 -= r1;
				r0 = comp(x26, x22);	o22 += r0;	o26 -= r0;
				r1 = comp(x27, x22);	o22 += r1;	o27 -= r1;
				r0 = comp(x28, x22);	o22 += r0;	o28 -= r0;
				r1 = comp(x29, x22);	o22 += r1;	o29 -= r1;
				r0 = comp(x30, x22);	o22 += r0;	o30 -= r0;
				r1 = comp(x31, x22);	o22 += r1;
				r0 = comp(x24, x23);	o23 += r0;	o24 -= r0;
				r1 = comp(x25, x23);	o23 += r1;	o25 -= r1;
				r0 = comp(x26, x23);	o23 += r0;	o26 -= r0;
				r1 = comp(x27, x23);	o23 += r1;	o27 -= r1;
				r0 = comp(x28, x23);	o23 += r0;	o28 -= r0;
				r1 = comp(x29, x23);	o23 += r1;	o29 -= r1;
				r0 = comp(x30, x23);	o23 += r0;	o30 -= r0;
				r1 = comp(x31, x23);	o23 += r1;
				r0 = comp(x25, x24);	o24 += r0;	o25 -= r0;
				r1 = comp(x26, x24);	o24 += r1;	o26 -= r1;
				r0 = comp(x27, x24);	o24 += r0;	o27 -= r0;
				r1 = comp(x28, x24);	o24 += r1;	o28 -= r1;
				r0 = comp(x29, x24);	o24 += r0;	o29 -= r0;
				r1 = comp(x30, x24);	o24 += r1;	o30 -= r1;
				r0 = comp(x31, x24);	o24 += r0;
				r1 = comp(x26, x25);	o25 += r1;	o26 -= r1;
				r0 = comp(x27, x25);	o25 += r0;	o27 -= r0;
				r1 = comp(x28, x25);	o25 += r1;	o28 -= r1;
				r0 = comp(x29, x25);	o25 += r0;	o29 -= r0;
				r1 = comp(x30, x25);	o25 += r1;	o30 -= r1;
				r0 = comp(x31, x25);	o25 += r0;
				r1 = comp(x27, x26);	o26 += r1;	o27 -= r1;
				r0 = comp(x28, x26);	o26 += r0;	o28 -= r0;
				r1 = comp(x29, x26);	o26 += r1;	o29 -= r1;
				r0 = comp(x30, x26);	o26 += r0;	o30 -= r0;
				r1 = comp(x31, x26);	o26 += r1;
				r0 = comp(x28, x27);	o27 += r0;	o28 -= r0;
				r1 = comp(x29, x27);	o27 += r1;	o29 -= r1;
				r0 = comp(x30, x27);	o27 += r0;	o30 -= r0;
				r1 = comp(x31, x27);	o27 += r1;
				r0 = comp(x29, x28);	o28 += r0;	o29 -= r0;
				r1 = comp(x30, x28);	o28 += r1;	o30 -= r1;
				r0 = comp(x31, x28);	o28 += r0;
				r1 = comp(x30, x29);	o29 += r1;	o30 -= r1;
				r0 = comp(x31, x29);	o29 += r0;
				r1 = comp(x31, x30);	o30 += r1;
				o31 = 496 - o0 - o1 - o2 - o3 - o4 - o5 - o6 - o7 - o8 - o9 - o10 - o11 - o12 - o13 - o14 - o15 - o16 - o17 - o18 - o19 - o20 - o21 - o22 - o23 - o24 - o25 - o26 - o27 - o28 - o29 - o30;
				arr[o0] = x0;
				arr[o1] = x1;
				arr[o2] = x2;
				arr[o3] = x3;
				arr[o4] = x4;
				arr[o5] = x5;
				arr[o6] = x6;
				arr[o7] = x7;
				arr[o8] = x8;
				arr[o9] = x9;
				arr[o10] = x10;
				arr[o11] = x11;
				arr[o12] = x12;
				arr[o13] = x13;
				arr[o14] = x14;
				arr[o15] = x15;
				arr[o16] = x16;
				arr[o17] = x17;
				arr[o18] = x18;
				arr[o19] = x19;
				arr[o20] = x20;
				arr[o21] = x21;
				arr[o22] = x22;
				arr[o23] = x23;
				arr[o24] = x24;
				arr[o25] = x25;
				arr[o26] = x26;
				arr[o27] = x27;
				arr[o28] = x28;
				arr[o29] = x29;
				arr[o30] = x30;
				arr[o31] = x31;

				FinishingSorter{}(arr, 32);
			}
		};

		template<typename T, typename Comp>
		void ins_sort1a(T* start, T* end, Comp less)
		{
			for (T* curr = start + 1; curr != end; ++curr)
			{
				T *p = curr;
				T *q = curr - 1;
				T x;
				if (less(*p, *q))
				{
					x = *p;
					do
					{
						*p = *q;
					} while (--p != start && less(x, *--q));
					*p = x;
				}
			}
		}

		const int BLOCKSIZE = 32;

		template<typename iter, typename Compare>
		inline void sort_pair(iter i1, iter i2, Compare less) {
			typedef typename std::iterator_traits<iter>::value_type T;
			bool smaller = less(*i2, *i1);
			T temp = std::move(smaller ? *i1 : temp);
			*i1 = std::move(smaller ? *i2 : *i1);
			*i2 = std::move(smaller ? temp : *i2);
		}

		template<typename iter, typename Compare>
		inline iter median_of_3(iter i1, iter i2, iter i3, Compare less) {
			sort_pair(i1, i2, less);
			sort_pair(i2, i3, less);
			sort_pair(i1, i2, less);
			return i2;
		}


		template<typename iter, typename Compare>
		inline iter hoare_block_partition_simple(iter begin, iter end, iter pivot_position, Compare less) {
			typedef typename std::iterator_traits<iter>::difference_type index;
			index indexL[BLOCKSIZE], indexR[BLOCKSIZE];

			iter last = end - 1;
			std::iter_swap(pivot_position, last);
			//	const typename std::iterator_traits<iter>::value_type &pivot = *last;
			const typename std::iterator_traits<iter>::value_type pivot = *last;		// SD
			pivot_position = last;
			last--;

			int num_left = 0;
			int num_right = 0;
			int start_left = 0;
			int start_right = 0;
			int num;
			// main loop
			while (last - begin + 1 > 2 * BLOCKSIZE)
			{
				// Compare and store in buffers
				if (num_left == 0) {
					start_left = 0;
					index iL = 0;
					for (index j = 0; j < BLOCKSIZE;) {
						bool b0 = (!(less(begin[j], pivot)));		j++;
						bool b1 = (!(less(begin[j], pivot)));		j++;
						bool b2 = (!(less(begin[j], pivot)));		j++;
						bool b3 = (!(less(begin[j], pivot)));		j++;
						bool b4 = (!(less(begin[j], pivot)));		j++;
						bool b5 = (!(less(begin[j], pivot)));		j++;
						bool b6 = (!(less(begin[j], pivot)));		j++;
						bool b7 = (!(less(begin[j], pivot)));		j++;
						indexL[num_left] = iL++;	num_left += b0;
						indexL[num_left] = iL++;	num_left += b1;
						indexL[num_left] = iL++;	num_left += b2;
						indexL[num_left] = iL++;	num_left += b3;
						indexL[num_left] = iL++;	num_left += b4;
						indexL[num_left] = iL++;	num_left += b5;
						indexL[num_left] = iL++;	num_left += b6;
						indexL[num_left] = iL++;	num_left += b7;
					}
				}
				if (num_right == 0) {
					start_right = 0;
					index iR = 0;
					for (index j = 0; j < BLOCKSIZE;) {
						bool b0 = !(less(pivot, *(last - j)));			j++;
						bool b1 = !(less(pivot, *(last - j)));			j++;
						bool b2 = !(less(pivot, *(last - j)));			j++;
						bool b3 = !(less(pivot, *(last - j)));			j++;
						bool b4 = !(less(pivot, *(last - j)));			j++;
						bool b5 = !(less(pivot, *(last - j)));			j++;
						bool b6 = !(less(pivot, *(last - j)));			j++;
						bool b7 = !(less(pivot, *(last - j)));			j++;
						indexR[num_right] = iR++;	num_right += b0;
						indexR[num_right] = iR++;	num_right += b1;
						indexR[num_right] = iR++;	num_right += b2;
						indexR[num_right] = iR++;	num_right += b3;
						indexR[num_right] = iR++;	num_right += b4;
						indexR[num_right] = iR++;	num_right += b5;
						indexR[num_right] = iR++;	num_right += b6;
						indexR[num_right] = iR++;	num_right += b7;
					}
				}

				// rearrange elements
				num = (std::min)(num_left, num_right);
				for (int j = 0; j < num; j++)
					std::iter_swap(begin + indexL[start_left + j], last - indexR[start_right + j]);

				num_left -= num;
				num_right -= num;
				start_left += num;
				start_right += num;
				begin += (num_left == 0) ? BLOCKSIZE : 0;
				last -= (num_right == 0) ? BLOCKSIZE : 0;
			} // end main loop

			  // Compare and store in buffers final iteration
			index shiftR = 0, shiftL = 0;
			if (num_right == 0 && num_left == 0) { // for small arrays or in the unlikely case that both buffers are empty
				shiftL = ((last - begin) + 1) / 2;
				shiftR = (last - begin) + 1 - shiftL;
				start_left = 0; start_right = 0;
				for (index j = 0; j < shiftL; j++) {
					indexL[num_left] = j;
					num_left += (!less(begin[j], pivot));
					indexR[num_right] = j;
					num_right += !less(pivot, *(last - j));
				}
				if (shiftL < shiftR)
				{
					indexR[num_right] = shiftR - 1;
					num_right += !less(pivot, *(last - shiftR + 1));
				}
			}
			else if (num_right != 0) {
				shiftL = (last - begin) - BLOCKSIZE + 1;
				shiftR = BLOCKSIZE;
				start_left = 0;
				for (index j = 0; j < shiftL; j++) {
					indexL[num_left] = j;
					num_left += (!less(begin[j], pivot));
				}
			}
			else {
				shiftL = BLOCKSIZE;
				shiftR = (last - begin) - BLOCKSIZE + 1;
				start_right = 0;
				for (index j = 0; j < shiftR; j++) {
					indexR[num_right] = j;
					num_right += !(less(pivot, *(last - j)));
				}
			}

			// rearrange final iteration
			num = (std::min)(num_left, num_right);
			for (int j = 0; j < num; j++)
				std::iter_swap(begin + indexL[start_left + j], last - indexR[start_right + j]);

			num_left -= num;
			num_right -= num;
			start_left += num;
			start_right += num;
			begin += (num_left == 0) ? shiftL : 0;
			last -= (num_right == 0) ? shiftR : 0;
			// end final iteration

			// rearrange elements remaining in buffer
			if (num_left != 0)
			{
				int lowerI = start_left + num_left - 1;
				index upper = last - begin;
				// search first element to be swapped
				while (lowerI >= start_left && indexL[lowerI] == upper) {
					upper--; lowerI--;
				}
				while (lowerI >= start_left)
					std::iter_swap(begin + upper--, begin + indexL[lowerI--]);

				std::iter_swap(pivot_position, begin + upper + 1); // fetch the pivot
				return begin + upper + 1;
			}
			else if (num_right != 0) {
				int lowerI = start_right + num_right - 1;
				index upper = last - begin;
				// search first element to be swapped
				while (lowerI >= start_right && indexR[lowerI] == upper) {
					upper--; lowerI--;
				}

				while (lowerI >= start_right)
					std::iter_swap(last - upper--, last - indexR[lowerI--]);

				std::iter_swap(pivot_position, last - upper); // fetch the pivot
				return last - upper;
			}
			else { //no remaining elements
				std::iter_swap(pivot_position, begin); // fetch the pivot
				return begin;
			}
		}

		template<typename iter, typename Compare>
		struct Hoare_block_partition_simple {
			static inline iter partition(iter begin, iter end, Compare less) {
				// choose pivot
				//		iter mid = median_of_3(begin, begin + (end - begin) / 2, end, less);	
				iter mid = median_of_3(begin, begin + (end - begin) / 2, end - 1, less);		// !!! SD
																								// partition
				return hoare_block_partition_simple(begin + 1, end - 1, mid, less);
			}
		};

		//const int IS_THRESH = 32;
		// Quicksort main loop. Implementation based on Tuned Quicksort (Elmasry, Katajainen, Stenmark)
		template<template<class, class> class Partitioner, typename SmallSorter, unsigned SMALL_SORT_THRESHOLD, typename iter, typename Compare>
		inline void new_qsort(iter begin, iter end, Compare less, SmallSorter& small_sorter) {
			if (end - begin < SMALL_SORT_THRESHOLD)
			{
				small_sorter(begin, end - begin);
				return;
			}
			const int depth_limit = 2 * ilogb((double)(end - begin)) + 3;
			iter stack[80];
			iter *s = stack;
			int depth_stack[40];
			int depth = 0;
			int *d_s_top = depth_stack;

			*s = begin;
			*(s + 1) = end;
			s += 2;
			*d_s_top = 0;
			++d_s_top;

			do {
				if (depth < depth_limit && end - begin > SMALL_SORT_THRESHOLD) {
					iter pivot = Partitioner<iter, Compare>::partition(begin, end, less);
					// Push large side to stack and continue on small side
					if (pivot - begin > end - pivot) {
						*s = begin;
						*(s + 1) = pivot;
						begin = pivot + 1;
					}
					else {
						*s = pivot + 1;
						*(s + 1) = end;
						end = pivot;
					}
					s += 2;
					depth++;
					*d_s_top = depth;
					++d_s_top;
				}
				else {
					if (end - begin > SMALL_SORT_THRESHOLD) // if recursion depth limit exceeded
						std::partial_sort(begin, end, end, less);
					//				std::sort(begin, end);
					else
						//				Insertionsort::insertion_sort(begin, end, less); // copy of std::__insertion_sort(GCC 4.7.2)
						//				std::sort(begin, end, less); // copy of std::__insertion_sort(GCC 4.7.2)
						//ins_sort1a(begin, end);
						small_sorter(begin, end - begin);
					//pop new subarray from stack
					s -= 2;
					begin = *s;
					end = *(s + 1);
					--d_s_top;
					depth = *d_s_top;
				}
			} while (s != stack);
		}

	

		template<typename T, typename SmallSorter, unsigned SMALL_SORT_THRESHOLD>
		void BS_quick_sort(T *start, T *end, SmallSorter& small_sorter)
		{
			new_qsort<Hoare_block_partition_simple, SmallSorter, SMALL_SORT_THRESHOLD>(start, end, LessFirstNotEqual<T>{}, small_sorter);
		}

		

		template<typename RECORD_T>
		struct HybridSmallSortImpl
		{
			using SmallSorter_ro_ins = RankOrder<RECORD_T, MS_uint64_lower<RECORD_T>, FinishingWrapper<RECORD_T>>;
			SmallSorter_ro_ins smallSorter_ro_ins;
			void operator()(RECORD_T* data, uint32 size)
			{
				if (size == 2)
					smallSorter_ro_ins.sort2(data);
				else if (size == 3)
					smallSorter_ro_ins.sort3(data);
				else if (size <= 30)
					smallSorter_ro_ins(data, size);
				else
					BS_quick_sort<RECORD_T, SmallSorter_ro_ins, 24>(data, data + size, smallSorter_ro_ins);

			}
		};

		template<>
		struct HybridSmallSortImpl<Record<4, 1>>
		{
			using RECORD_T = Record<4, 1>;
			using SamllSorter_ro = RankOrder<RECORD_T, LessFirstNotEqual<RECORD_T>,
				FakeFinishingSorter<RECORD_T>>;

			SamllSorter_ro small_sorter_ro;

			void operator()(RECORD_T* data, uint32 size)
			{
				if (size == 2)
					small_sorter_ro.sort2(data);
				else if (size == 3)
					small_sorter_ro.sort3(data);
				else if (size <= 24)
					small_sorter_ro(data, size);
				else
					BS_quick_sort<RECORD_T, SamllSorter_ro, 24>(data, data + size, small_sorter_ro);
			}
		};

		template<>
		struct HybridSmallSortImpl<Record<3, 2>>
		{
			using RECORD_T = Record<3, 2>;
			using SamllSorter_ro_ins_sort = RankOrder<RECORD_T, MS_uint64_lower<RECORD_T>,
				FinishingWrapper<RECORD_T>>;
			using SamllSorter_ro = RankOrder<RECORD_T, LessFirstNotEqual<RECORD_T>,
				FakeFinishingSorter<RECORD_T>>;

			SamllSorter_ro_ins_sort small_sorter_ro_ins;
			SamllSorter_ro small_sorter_ro;

			void operator()(RECORD_T* data, uint32 size)
			{
				if (size == 2)
					small_sorter_ro.sort2(data);
				else if (size == 3)
					small_sorter_ro.sort3(data);
				else if (size <= 30)
					small_sorter_ro_ins(data, size);
				else
					BS_quick_sort<RECORD_T, SamllSorter_ro_ins_sort, 24>(data, data + size, small_sorter_ro_ins);
			}
		};

		template<>
		struct HybridSmallSortImpl<Record<3, 1>>
		{
			using RECORD_T = Record<3, 1>;
			using SamllSorter_ro = RankOrder<RECORD_T, LessFirstNotEqual<RECORD_T>,
				FakeFinishingSorter<RECORD_T>>;

			SamllSorter_ro small_sorter_ro;
			void operator()(RECORD_T* data, uint32 size)
			{
				if (size == 2)
					small_sorter_ro.sort2(data);
				else if (size == 3)
					small_sorter_ro.sort3(data);
				else if (size <= 24)
					small_sorter_ro(data, size);
				else
					BS_quick_sort<RECORD_T, SamllSorter_ro, 24>(data, data + size, small_sorter_ro);
			}
		};

		template<>
		struct HybridSmallSortImpl<Record<2, 2>>
		{
			using RECORD_T = Record<2, 2>;
			using SamllSorter_ro_ins_sort = RankOrder<RECORD_T, MS_uint64_lower<RECORD_T>,
				FinishingWrapper<RECORD_T>>;
			using SamllSorter_ro = RankOrder<RECORD_T, LessFirstNotEqual<RECORD_T>,
				FakeFinishingSorter<RECORD_T>>;

			SamllSorter_ro_ins_sort small_sorter_ro_ins;
			SamllSorter_ro small_sorter_ro;

			void operator()(RECORD_T* data, uint32 size)
			{
				if (size == 2)
					small_sorter_ro.sort2(data);
				else if (size == 3)
					small_sorter_ro.sort3(data);
				else if (size <= 24)
					small_sorter_ro_ins(data, size);
				else
					BS_quick_sort<RECORD_T, SamllSorter_ro_ins_sort, 24>(data, data + size, small_sorter_ro_ins);
			}
		};

		template<>
		struct HybridSmallSortImpl<Record<2, 1>>
		{
			using RECORD_T = Record<2, 1>;
			using SmallSorter_sn1 = SortingNetwork<RECORD_T, SwapLowerGreater<RECORD_T, 
				LessFirstLower<RECORD_T>>>;
			using SamllSorter_ro = RankOrder<RECORD_T, LessFirstNotEqual<RECORD_T>,
				FakeFinishingSorter<RECORD_T>>;

			SamllSorter_ro small_sorter_ro;
			SmallSorter_sn1 small_sorter_sn1;
			void operator()(RECORD_T* data, uint32 size)
			{
				if (size == 2)
					small_sorter_ro.sort2(data);
				else if (size == 3)
					small_sorter_ro.sort3(data);
				else if (size <= 16)
					small_sorter_ro(data, size);
				else if (size <= 32)
					small_sorter_sn1(data, size);
				else
					BS_quick_sort<RECORD_T, SmallSorter_sn1, 24>(data, data + size, small_sorter_sn1);
			}
		};

		template<>
		struct HybridSmallSortImpl<Record<1,1>>
		{
			using RECORD_T = Record<1, 1>;
						
			using SmallSorter = SortingNetwork<RECORD_T, 
				SwapLowerGreater<RECORD_T, LessFirstNotEqual<RECORD_T>>>;

			SmallSorter small_sorter;
			void operator()(RECORD_T* data, uint32 size)
			{
				if (size == 2)
					small_sorter.sort2(data);
				else if (size == 3)
					small_sorter.sort3(data);
				else if (size <= 64)
					small_sorter(data, size);
				else
					BS_quick_sort<RECORD_T, SmallSorter, 56>(data, data + size, small_sorter);
			}
		};


		template<typename RECORD_T>
		struct HybridSmallSort
		{
			static HybridSmallSortImpl<RECORD_T> impl;			
			FORCE_INLINE void operator()(RECORD_T* data, uint32 size)
			{				
				impl(data, size);
			}
		};

		template<typename RECORD_T> HybridSmallSortImpl<RECORD_T> HybridSmallSort<RECORD_T>::impl;
	}
}